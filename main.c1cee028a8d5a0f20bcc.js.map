{"version":3,"sources":["webpack:///(webpack)/buildin/harmony-module.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/utils/esm/memo.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/utils/esm/object.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/utils/esm/logger.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/utils/esm/misc.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/utils/esm/is.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/utils/esm/syncpromise.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/hub/esm/span.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/hub/esm/scope.js.pre-build-optimizer.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./node_modules/@sentry/hub/esm/hub.js.pre-build-optimizer.js","webpack:///./node_modules/tslib/tslib.es6.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isObject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isFunction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscription.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/config.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/hostReportError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Observer.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/observable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/noop.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/pipe.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Observable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/toSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/canReportError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/SubjectSubscription.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/Subject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/InnerSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/iterator.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArrayLike.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isPromise.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeTo.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/OuterSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/map.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/from.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isIterable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeMap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/identity.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeAll.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/refCount.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/share.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/core/fesm5/core.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/merge.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/multicast.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/types/esm/severity.js.pre-build-optimizer.js","webpack:///./src/app/app.module.ts","webpack:///./node_modules/@sentry/minimal/esm/index.js.pre-build-optimizer.js","webpack:///./src/app/app.component.ts","webpack:///./node_modules/@angular/common/fesm5/common.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/of.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/BehaviorSubject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/EmptyError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/combineLatest.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/empty.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/defer.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/concatAll.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/filter.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/takeLast.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/last.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/catchError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/take.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/first.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/every.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/switchMap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/concat.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/scan.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/concatMap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/tap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/finalize.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/platform-browser/fesm5/platform-browser.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/router/fesm5/router.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/startWith.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/reduce.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/router/router.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/router/router.d.ts.ÉµEmptyOutletComponent.html","webpack:///./node_modules/@angular/common/fesm5/http.js.pre-build-optimizer.js","webpack:///./src/app/app.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/app.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/app.component.html","webpack:///./node_modules/@sentry/core/esm/integrations/functiontostring.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/utils/esm/string.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/core/esm/integrations/inboundfilters.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/types/esm/status.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/utils/esm/error.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/core/esm/dsn.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/core/esm/api.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/core/esm/integration.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/core/esm/baseclient.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/core/esm/transports/noop.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/core/esm/basebackend.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/utils/esm/supports.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/tracekit.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/parsers.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/utils/esm/promisebuffer.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/helpers.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/transports/base.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/transports/fetch.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/transports/xhr.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/backend.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/client.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/version.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/integrations/trycatch.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/integrations/globalhandlers.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/sdk.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/integrations/linkederrors.js.pre-build-optimizer.js","webpack:///./node_modules/@sentry/browser/esm/integrations/useragent.js.pre-build-optimizer.js","webpack:///./src/sentry-error-handler.service.ts","webpack:///./node_modules/@sentry/core/esm/sdk.js.pre-build-optimizer.js","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ngfactory.js.pre-build-optimizer.js","webpack:///./src/main.ts"],"names":["module","exports","originalModule","webpackPolyfill","Object","create","children","defineProperty","enumerable","get","l","i","Memo","this","_hasWeakSet","WeakSet","_inner","prototype","memoize","obj","has","add","length","push","unmemoize","delete","splice","fill","source","name","replacement","original","wrapped","defineProperties","__sentry__","value","__sentry_original__","__sentry_wrapped__","_Oo","urlEncode","object","keys","map","key","encodeURIComponent","join","normalizeToSize","depth","maxSize","serialized","normalize","encodeURI","split","utf8Length","JSON","stringify","normalizeValue","_events","global","window","document","Event","getPrototypeOf","constructor","is","Number","isNaN","input","parse","walk","memo","type","toString","call","normalized","serializeValue","toJSON","error","err","message","stack","hasOwnProperty","objectifyError","acc","Array","isArray","innerKey","_oO","__webpack_require__","d","__webpack_exports__","logger","_misc__WEBPACK_IMPORTED_MODULE_0__","PREFIX","Logger","_enabled","disable","enable","log","args","_i","arguments","console","warn","__SENTRY__","dynamicRequire","mod","request","require","getGlobalObject","uuid4","parseUrl","getEventDescription","consoleSandbox","addExceptionTypeValue","fallbackGlobalObject","process","self","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","replace","c","r","Math","random","url","match","host","path","protocol","relative","event","exception","values","event_id","callback","originalConsole","wrappedLevels","forEach","level","result","mechanism","handled","isError","wat","Error","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isRegExp","isThenable","Boolean","then","isSyntheticEvent","SyncPromise","States","_is__WEBPACK_IMPORTED_MODULE_0__","_this","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","reason","REJECTED","state","_value","_executeHandlers","h","onFail","onSuccess","_attachHandler","handler","concat","e","onfulfilled","onrejected","resolve","reject","catch","val","_","TRACEPARENT_REGEXP","span_Span","Span","_traceId","_spanId","_recorded","_parent","misc","substring","fromTraceparent","traceparent","matches","parent_1","undefined","toTraceparent","parent","span_id","trace_id","scope_Scope","addGlobalEventProcessor","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","addScopeListener","addEventProcessor","_notifyScopeListeners","setTimeout","_notifyEventProcessors","processors","hint","index","syncpromise","processor","tslib_es6","final","setUser","user","setTags","tags","setTag","_a","setExtras","extra","setExtra","setFingerprint","fingerprint","_fingerprint","setLevel","_level","setTransaction","transaction","_transaction","setContext","context","setSpan","span","_span","startSpan","getSpan","clone","scope","newScope","assign","clear","addBreadcrumb","breadcrumb","maxBreadcrumbs","timestamp","Date","getTime","mergedBreadcrumb","slice","clearBreadcrumbs","_applyFingerprint","applyToEvent","contexts","trace","breadcrumbs","getGlobalEventProcessors","globalEventProcessors","webpackEmptyAsyncContext","req","Promise","code","id","getCurrentHub","tslib__WEBPACK_IMPORTED_MODULE_0__","_sentry_utils__WEBPACK_IMPORTED_MODULE_1__","_sentry_utils__WEBPACK_IMPORTED_MODULE_2__","_scope__WEBPACK_IMPORTED_MODULE_3__","API_VERSION","Hub","client","_version","_stack","_invokeClient","method","top","getStackTop","apply","isOlderThan","version","bindClient","pushScope","getStack","getClient","popScope","pop","withScope","getScope","captureException","eventId","_lastEventId","captureMessage","captureEvent","lastEventId","getOptions","_b","beforeBreadcrumb","_c","finalBreadcrumb","min","configureScope","run","oldHub","makeMain","getIntegration","integration","traceHeaders","sentry-trace","getMainCarrier","carrier","hub","registry","getHubFromCarrier","setHubOnCarrier","hasHubOnCarrier","activeDomain","active","registryHubTopStack","__extends","__assign","__decorate","__param","__metadata","__values","__read","__spread","extendStatics","b","setPrototypeOf","__proto__","p","__","t","s","n","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","o","m","Symbol","iterator","next","done","ar","x","isObject","isFunction","UnsubscriptionErrorImpl","errors","UnsubscriptionError","Subscription_Subscription","Subscription","unsubscribe","closed","_parentOrParents","_subscriptions","_unsubscribe","empty","remove","flattenUnsubscriptionErrors","len","sub","teardown","subscription","EMPTY","tmp","indexOf","subscriptions","subscriptionIndex","reduce","errs","_enable_super_gross_mode_that_will_cause_bad_things","config_config","useDeprecatedSynchronousErrorHandling","hostReportError","complete","rxSubscriber","Subscriber_Subscriber","_super","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","Subscriber_SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","bind","__tryOrSetError","__tryOrUnsub","wrappedComplete","fn","observable_observable","observable","noop","pipe_pipe","fns","pipeFromArray","prev","Observable_Observable","Observable","subscribe","_isScalar","_subscribe","lift","operator","sink","nextOrObserver","toSubscriber","_trySubscribe","observer","canReportError","promiseCtor","getPromiseCtor","pipe","operations","toPromise","ObjectUnsubscribedErrorImpl","ObjectUnsubscribedError","SubjectSubscription_SubjectSubscription","SubjectSubscription","subject","observers","subscriberIndex","Subject_SubjectSubscriber","SubjectSubscriber","Subject_Subject","Subject","hasError","thrownError","Subject_AnonymousSubject","copy","asObservable","AnonymousSubject","isScheduler","schedule","InnerSubscriber_InnerSubscriber","InnerSubscriber","outerValue","outerIndex","notifyNext","notifyError","notifyComplete","subscribeToArray","array","getSymbolIterator","iterator_iterator","isArrayLike","isPromise","subscribeTo","obs","TypeError","promise","iterable","item","return","subscribeToResult","outerSubscriber","OuterSubscriber_OuterSubscriber","OuterSubscriber","innerValue","innerIndex","innerSub","project","thisArg","MapOperator","map_MapSubscriber","MapSubscriber","count","scheduleArray","scheduler","from_from","isInteropObservable","scheduleObservable","schedulePromise","isIterable","scheduleIterable","scheduled","mergeMap","resultSelector","concurrent","POSITIVE_INFINITY","a","ii","MergeMapOperator","mergeMap_MergeMapSubscriber","MergeMapSubscriber","hasCompleted","buffer","_tryNext","_innerSub","ish","innerSubscriber","shift","identity","mergeAll","fromArray","refCount","RefCountOperator","connectable","_refCount","refCounter","refCount_RefCountSubscriber","connection","connect","RefCountSubscriber","sharedConnection","_connection","connectableProto","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","ConnectableObservable_ConnectableSubscriber","connectableObservableDescriptor","writable","ConnectableSubscriber","shareSubjectFactory","getClosureSafeProperty","objWithPropertyToExtract","NG_INJECTABLE_DEF","ngInjectableDef","defineInjectable","opts","providedIn","factory","getInjectableDef","InjectionToken","_desc","options","ngMetadataName","PARAMETERS","makeParamDecorator","props","parentClass","metaCtor","propName","makeMetadataCtor","ParamDecoratorFactory","annotationInstance","ParamDecorator","annotation","cls","unusedKey","parameters","annotationCls","ANALYZE_FOR_ENTRY_COMPONENTS","__window","__self","WorkerGlobalScope","_global","core_promise","_symbolIterator","core_getSymbolIterator","Symbol_1","getOwnPropertyNames","Map","scheduleMicroTask","Zone","current","looseIdentical","token","overriddenName","res","newLineIndex","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","_injectImplementation","ViewEncapsulation","Inject","Optional","Self","SkipSelf","InjectFlags","_currentInjector","setCurrentInjector","injector","former","inject","flags","Default","notFoundValue","injectableDef","injectRootLimpMode","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","comparator","iterator1","iterator2","item1","item2","areIterablesEqual","WrappedValue","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","core_noop","SOURCE","_THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","providers","THROW_IF_NOT_FOUND","NULL","__NG_ELEMENT_ID__","SWITCH_INJECTOR_FACTORY","IDENT","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","providerDeps","j","annotations","useExisting","computeDeps","useFactory","useClass","resolveProvider","multi","multiProvider","multiProviderMixError","record","tryResolveToken","depRecords","depRecord","childRecord","resolveToken","unshift","tokenPath","formatError","tokens","text","charAt","substr","parts","APP_ROOT","ComponentRef","ComponentFactory","noComponentFactoryError","component","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","componentType","core_ComponentFactoryBoundToModule","ComponentFactoryBoundToModule","ngModule","selector","ngContentSelectors","inputs","outputs","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","Renderer","RendererFactory2","RendererStyleFlags2","Renderer2","SWITCH_RENDERER2_FACTORY","SecurityContext","Sanitizer","VERSION","full","major","minor","patch","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","DOMParser","isDOMParserAvailable","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","xhr","XMLHttpRequest","responseType","open","send","response","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","tagSet","e_1","e_1_1","merge$1","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","element","srcset","tagName","nodeName","toLowerCase","elAttr","lower","trim","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","getTemplateContent","isTemplateElement","content","core_EventEmitter","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","schedulerFn","errorFn","completeFn","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SAFE_STYLE_VALUE","RegExp","URL_RE","NgModuleFactoryLoader","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","core_isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","runInitializers","asyncInitPromises","initResult","all","APP_ID","_appIdRandomProviderFactory","_randomChar","fromCharCode","floor","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","Console","_throwError","events","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","moduleType","CompilerFactory","detectWTF","wtf","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","signature","createScope","wtfLeave","returnValue","leaveScope","NgZone","zone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","filter","updateCb","macroTasks","creationLocation","data","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","core_TestabilityRegistry","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","from","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","destroyed","PlatformRef","inits","init","createPlatform","requiredToken","assertPlatform","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneOption","ngZone","ngZoneInjector","moduleRef","exceptionHandler","onDestroy","errorHandler","initStatus","_moduleDoBootstrap","_callAndReportToErrorHandler","bootstrapModule","compilerOptions","optionsReducer","createCompiler","compileNgModuleFactory","appRef","core_ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","configurable","destroy","listener","dst","objs","ApplicationRef","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","stableSub","unstableSub","observables","last","merge","subjectOrSubjectFactory","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","location","_loadComponent","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","ngOnDestroy","list","QueryList$1","QueryList","dirty","_results","changes","find","some","toArray","reset","flatten$2","flat","flatItem","first","notifyOnChanges","setDirty","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","core_SystemJsNgModuleLoader","SystemJsNgModuleLoader","_compiler","config","_config","load","loadFactory","loadAndCompile","exportName","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","listeners","core_DebugElement_PRE_R3_","addChild","references","providerTokens","DebugElement__PRE_R3__","classes","styles","childNodes","child","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventName","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","k","IterableDiffers","copied","extend","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","msg","_addDebugContext","viewDebugError","logError","viewDestroyedError","action","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","createRendererType2","encapsulation","_renderCompCount$1","checkBinding","def","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","componentView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","queryId","valueType","filterQueryId","splitDepsDsl","sourceName","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","renderer","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","elementDef","checkIndex","namespaceAndName","fixedAttrs","ns","bindingDefs","namespaceAndName_1","suffixOrSecurityContext","_d","ns_1","name_1","securityContext","suffix","nonMinifiedName","outputDefs","_e","attrs","isFilled","None","resolveRendererType2","outputIndex","childFlags","directChildFlags","childMatchedQueries","template","componentProvider","publicProviders","allProviders","elDef","selectorOrNode","createComment","parentEl","selectRootElement","ShadowDom","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","disposables","checkAndUpdateElementValue","binding","elData","renderNode$$1","renderValue","sanitizer","sanitize","setElementAttribute","addClass","removeClass","setElementClass","STYLE","unit","setStyle","removeStyle","setElementStyle","setProperty","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","moduleProvideDef","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_providers","_createProviderInstance","modules","moduleTransitivelyPresent","isRoot","injectable","ctor","depValues","_createClass","_callFactory","detachEmbeddedView","elementData","viewIndex","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","createComponentFactory","viewDefFactory","core_ComponentFactory_","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","core_ComponentRef_","ViewRef_","ComponentRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","core_ViewContainerRef_","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","viewRef_","vcElementData","dvcElementData","projectedViews","_projectedViews","nodeFlags","markNodeAsProjectedTemplate","attachProjectedView","move","oldViewIndex","newViewIndex","viewData","detach","createChangeDetectorRef","_viewContainerRef","_appRef","renderNodes","markForCheck","fs","rendererFactory","begin","end","reattach","vcRef","createTemplateData","core_TemplateRef_","TemplateRef_","_parentView","createInjector$1","createRendererV1","core_RendererAdapter","RendererAdapter","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","destroyNode","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","provDef","initNgModule","injectFlags","lifecycles","Set","callNgModuleLifecycle","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","directiveDef","prop","depDefs","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","startView","tokenKey$$1","searchView","findCompView","providerDef_1","providerData","updateProp","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","textDef","staticText","prefix","_addInterpolationPart","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","validateNode","isComponent","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentEnd","anchorDef$$1","createView","initView","createViewNodes","parentView","compRenderer","rendererType","createRenderer","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementInline","checkAndUpdateTextInline","directive","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveInline","transform","checkAndUpdatePureExpressionInline","checkAndUpdateNodeInline","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","params","checkAndUpdatePureExpressionDynamic","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","createProdRootView","elInjector","createRootData","debugCreateRootView","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","debugCreateEmbeddedView","anchorDef","viewDef$$1","debugCreateComponentView","viewDefOverrides","debugCreateNgModuleRef","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","calcHasOverrides","moduleSet_1","applyProviderOverrides","applyProviderOverridesToNgModule","debugOverrideProvider","debugOverrideComponentView","comp","compFactory","hostViewDef","debugClearOverrides","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","findElementIndicesWithOverwrittenProviders","applyProviderOverridesToElement","elIndex","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","_currentAction","_currentView","_currentNodeIndex","debugSetCurrentNode","debugHandleEvent","debugUpdateDirectives","nextDirectiveWithBinding","debugCheckAndUpdateNode","debugCheckNoChangesNode","debugUpdateRenderer","nextRenderNodeWithBinding","givenValues","bindingValues","attr","core_DebugContext_","DebugContext_","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","createNgModuleFactory","ngModuleType","defFactory","core_NgModuleFactory_","Severity","NgModuleFactory_","_ngModuleDefFactory","services","initServicesIfNeeded","cloneNgModuleDefinition","AppModule","callOnHub","esm_hub","syntheticException","originalException","fromString","Debug","Info","Warning","Fatal","Critical","Log","app_component_AppComponent","AppComponent","http","title","executeRequest","badFunction","anotherBadFunction","customMessage","PlatformLocation","LOCATION_INITIALIZED","LocationStrategy","APP_BASE_HREF","common_Location","Location","platformStrategy","_platformStrategy","browserBaseHref","getBaseHref","_baseHref","Location_1","stripTrailingSlash","_stripIndexHtml","onPopState","ev","includeHash","isCurrentPathEqualTo","normalizeQueryParams","baseHref","startsWith","_stripBaseHref","prepareExternalUrl","go","pushState","replaceState","forward","back","onNext","onThrow","onReturn","joinWithSlash","start","slashes","endsWith","pathEndIdx","common_HashLocationStrategy","HashLocationStrategy","_platformLocation","onHashChange","hash","internal","queryParams","pathname","common_PathLocationStrategy","PathLocationStrategy","href","getBaseHrefFromDOM","search","externalUrl","u","localeEn","abs","LOCALE_DATA","common_Plural","Plural","DEPRECATED_PLURAL_FN","NgLocalization","common_NgLocaleLocalization","NgLocaleLocalization","deprecatedPluralFn","getPluralCategory","normalizedLocale","parentLocale","findLocaleData","getLocalePluralCase","Zero","One","Two","Few","Many","parseCookieValue","cookieStr","cookie","eqIndex","cookieValue","decodeURIComponent","CommonModule","DOCUMENT","PLATFORM_SERVER_ID","common_ViewportScroller","ViewportScroller","BrowserViewportScroller","setOffset","getScrollPosition","supportScrollRestoration","scrollX","scrollY","scrollToPosition","position","scrollTo","scrollToAnchor","anchor","CSS","escape","elSelectedById","scrollToElement","elSelectedByName","setHistoryScrollRestoration","scrollRestoration","history_1","history","rect","getBoundingClientRect","left","pageXOffset","pageYOffset","of","BehaviorSubject_BehaviorSubject","BehaviorSubject","getValue","EmptyErrorImpl","EmptyError","NONE","CombineLatestOperator","combineLatest_CombineLatestSubscriber","CombineLatestSubscriber","toRespond","unused","_tryResultSelector","empty_EMPTY","empty_empty","emptyScheduled","defer","observableFactory","concatAll","FilterOperator","filter_FilterSubscriber","FilterSubscriber","ArgumentOutOfRangeErrorImpl","ArgumentOutOfRangeError","takeLast","takeLast_TakeLastOperator","TakeLastOperator","total","takeLast_TakeLastSubscriber","TakeLastSubscriber","ring","idx","throwIfEmpty","errorFactory","defaultErrorFactory","ThrowIfEmptyOperator","throwIfEmpty_ThrowIfEmptySubscriber","ThrowIfEmptySubscriber","hasValue","defaultIfEmpty","defaultValue","DefaultIfEmptyOperator","defaultIfEmpty_DefaultIfEmptySubscriber","DefaultIfEmptySubscriber","isEmpty","last_last","hasDefaultValue","catchError","CatchOperator","caught","catchError_CatchSubscriber","CatchSubscriber","err2","take","take_TakeOperator","TakeOperator","take_TakeSubscriber","TakeSubscriber","first_first","EveryOperator","every_EverySubscriber","EverySubscriber","everyValueMatch","switchMap","SwitchMapOperator","switchMap_SwitchMapSubscriber","SwitchMapSubscriber","innerSubscription","scan","accumulator","seed","hasSeed","ScanOperator","scan_ScanSubscriber","ScanSubscriber","_seed","concatMap","tap","DoOperator","tap_TapSubscriber","TapSubscriber","_tapNext","_tapError","_tapComplete","FinallyOperator","finalize_FinallySubscriber","FinallySubscriber","_DOM","getDOM","nodeContains","_attrToPropMap","class","innerHtml","readonly","tabindex","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","_chromeNumKeyPadMap","A","B","C","D","E","F","G","H","I","J","K","M","N","O","`","Â","contains","urlParsingNode","platform_browser_BrowserDomAdapter","BrowserDomAdapter","templateHtml","makeCurrent","adapter","hasProperty","getProperty","logGroup","group","logGroupEnd","groupEnd","nodeA","nodeB","querySelectorAll","on","evt","addEventListener","onAndCancel","removeEventListener","createMouseEvent","eventType","getDefaultDocument","createEvent","initEvent","preventDefault","isPrevented","defaultPrevented","getInnerHTML","getOuterHTML","childNodesAsList","clearNodes","replaceChild","insertAllBefore","insertAfter","setInnerHTML","getText","textContent","getChecked","checked","setChecked","createTemplate","doc","createElementNS","createTextNode","createScriptTag","attrValue","createStyleElement","css","createShadowRoot","getShadowRoot","shadowRoot","getHost","cloneNode","getElementsByClassName","getElementsByTagName","classList","hasClass","stylename","getStyle","hasStyle","attributeMap","attrib","hasAttribute","attribute","hasAttributeNS","getAttribute","getAttributeNS","setAttributeNS","removeAttributeNS","templateAwareRoot","createHtmlDocument","bottom","right","width","height","getTitle","setTitle","newTitle","elementMatches","isElementNode","msMatchesSelector","webkitMatchesSelector","isTextNode","isCommentNode","COMMENT_NODE","hasShadowRoot","HTMLElement","isShadowRoot","DocumentFragment","importIntoDoc","importNode","adoptNode","getHref","getEventKey","keyIdentifier","parseInt","getGlobalEventTarget","getHistory","getLocation","baseElement","resetBaseElement","getUserAgent","navigator","userAgent","setData","getData","getComputedStyle","supportsWebAnimation","Element","performanceNow","performance","now","supportsCookies","getCookie","setCookie","GenericBrowserDomAdapter","_animationPrefix","_transitionEnd","element_1","domPrefixes","transEndEventNames_1","WebkitTransition","MozTransition","OTransition","transition","getDistributedNodes","resolveAndSetHref","baseUrl","supportsDOMEvents","supportsNativeShadowDOM","getAnimationPrefix","getTransitionEnd","supportsAnimation","DomAdapter","resourceLoaderType","DOCUMENT$1","supportsState","platform_browser_BrowserPlatformLocation","BrowserPlatformLocation","_doc","_init","_history","newPath","TRANSITION_ID","SERVER_TRANSITION_PROVIDERS","transitionId","dom","platform_browser_BrowserGetTestability","BrowserGetTestability","getter","testabilities","didWork","decrement","didWork_","exportNgVar","COMPILED","CORE_TOKENS","inspectNativeElement","EVENT_MANAGER_PLUGINS","EventManager","plugins","_eventNameToPlugin","manager","_plugins","reverse","_findPluginFor","addGlobalEventListener","getZone","plugin","plugin_1","EventManagerPlugin","SharedStylesHost","_stylesSet","addStyles","additions","onStylesAdded","getAllStyles","platform_browser_DomSharedStylesHost","DomSharedStylesHost","_hostNodes","_styleNodes","head","_addStylesToHost","styleEl","addHost","hostNode","removeHost","styleNode","NAMESPACE_URIS","svg","xhtml","xlink","xml","xmlns","COMPONENT_REGEX","HOST_ATTR","CONTENT_ATTR","flattenStyles","compId","decoratePreventDefault","eventHandler","platform_browser_DomRendererFactory2","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","defaultRenderer","platform_browser_DefaultDomRenderer2","Emulated","platform_browser_EmulatedEncapsulationDomRenderer2","applyToHost","platform_browser_ShadowDomRenderer","DefaultDomRenderer2","namespaceUri","DashCase","Important","removeProperty","checkNoSyntheticProp","AT_CHARCODE","nameKind","blackListedMap","EmulatedEncapsulationDomRenderer2","contentAttr","hostAttr","ShadowDomRenderer","hostEl","attachShadow","mode","nodeOrShadowRoot","__symbol__","ADD_EVENT_LISTENER","REMOVE_EVENT_LISTENER","symbolNames","stopSymbol","isBlackListedEvent","globalListener","symbolName","taskDatas","taskData","copiedTasks","platform_browser_DomEventsPlugin","DomEventsPlugin","platformId","isPlatformServer","patchEvent","stopImmediatePropagation","globalListenerRegistered","callbackRegistered","underlyingRemove","found","EVENT_NAMES","pan","panstart","panmove","panend","pancancel","panleft","panright","panup","pandown","pinch","pinchstart","pinchmove","pinchend","pinchcancel","pinchin","pinchout","press","pressup","rotate","rotatestart","rotatemove","rotateend","rotatecancel","swipe","swipeleft","swiperight","swipeup","swipedown","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","overrides","buildHammer","mc","Hammer","platform_browser_HammerGesturesPlugin","HammerGesturesPlugin","loader","isCustomEvent","cancelRegistration_1","deregister_1","off","MODIFIER_KEYS","MODIFIER_KEY_GETTERS","alt","altKey","control","ctrlKey","meta","metaKey","shiftKey","platform_browser_KeyEventsPlugin","KeyEventsPlugin","KeyEventsPlugin_1","parseEventName","parsedEvent","outsideHandler","eventCallback","domEventName","_normalizeKey","fullKey","modifierName","getEventFullKey","modifierGetter","keyName","DomSanitizer","platform_browser_DomSanitizerImpl","DomSanitizerImpl","ctx","HTML","platform_browser_SafeHtmlImpl","changingThisBreaksApplicationSecurity","checkNotSafeValue","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","_sanitizeHtml","platform_browser_SafeStyleImpl","urlMatch","outsideSingle","outsideDouble","hasBalancedQuotes","_sanitizeStyle","SCRIPT","platform_browser_SafeScriptImpl","URL","platform_browser_SafeResourceUrlImpl","platform_browser_SafeUrlImpl","RESOURCE_URL","expectedType","SafeValueImpl","getTypeName","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SafeHtmlImpl","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","platformBrowser","platform_browser_BrowserModule","BrowserModule","parentModule","BrowserModule_1","withServerTransition","RouterEvent","router_NavigationStart","NavigationStart","navigationTrigger","restoredState","router_NavigationEnd","NavigationEnd","urlAfterRedirects","router_NavigationCancel","NavigationCancel","router_NavigationError","NavigationError","router_RoutesRecognized","RoutesRecognized","router_GuardsCheckStart","GuardsCheckStart","router_GuardsCheckEnd","GuardsCheckEnd","shouldActivate","router_ResolveStart","ResolveStart","router_ResolveEnd","ResolveEnd","RouteConfigLoadStart","route","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","routerEvent","EmptyOutletComponent","PRIMARY_OUTLET","ParamsAsMap","getAll","convertToParamMap","NAVIGATION_CANCELING_ERROR","navigationCancelingError","defaultUrlMatcher","segments","segmentGroup","pathMatch","hasChildren","posParams","part","segment","consumed","LoadedRouterConfig","routes","validateConfig","parentPath","router_validateNode","getFullPath","fullPath","loadChildren","outlet","redirectTo","matcher","currentRoute","standardizeConfig","shallowEqual","k1","k2","router_flatten","last$1","map$$1","wrapIntoObservable","containsTree","container","containee","exact","equalQueryParams","equalSegmentGroups","equalPath","numberOfChildren","every","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","serializePaths","UrlSegment","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","childOutlet","UrlSerializer","DefaultUrlSerializer","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","strParams","serializeSegment","primary","children_1","encodeUriQuery","encodeUriString","encodeUriSegment","decode","decodeQuery","SEGMENT_RE","matchSegments","str","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","Tree","_root","pathFromRoot","findNode","siblings","findPath","cc","node_1","TreeNode","nodeChildrenAsMap","router_RouterState","RouterState","setRouterState","createEmptyState","urlTree","rootComponent","activated","ActivatedRouteSnapshot","router_RouterStateSnapshot","createEmptyStateSnapshot","emptyUrl","emptyParams","emptyData","emptyQueryParams","router_ActivatedRoute","ActivatedRoute","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","curr","_resolvedData","flattenInherited","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","RouterStateSnapshot","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","isMatrixParams","command","outlets","segmentPath","router_tree","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","toRoot","Position","processChildren","getPath","updateSegmentGroup","updateSegmentGroupChildren","currentCommandIndex","currentPathIndex","noMatch","pathIndex","commandIndex","compare","prefixedWith","slicedCommands","g","createNewSegmentGroup","outlets_2","getOutlets","paths","createNewSegmentChildren","router_stringify","ActivateRoutes","routeReuseStrategy","futureState","currState","forwardEvent","activate","parentContexts","futureRoot","currRoot","deactivateChildRoutes","activateChildRoutes","futureNode","currNode","futureChild","childOutletName","deactivateRoutes","childName","deactivateRouteAndItsChildren","parentContext","future","getContext","shouldDetach","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","onOutletDeactivated","store","contexts_1","deactivate","activateRoutes","getOrCreateContext","shouldAttach","stored","retrieve","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","_loadedConfig","parentLoadedConfig","cmpFactoryResolver","componentFactoryResolver","resolver","activateWith","router_isFunction","isUrlTree","NoMatch","AbsoluteRedirect","absoluteRedirect","newTree","namedOutletsRedirect","router_ApplyRedirects","ApplyRedirects","moduleInjector","configLoader","urlSerializer","allowRedirects","expandSegmentGroup","rootSegmentGroup","createUrlTree","noMatchError","rootCandidate","expandChildren","expandSegment","waitHead","waitTail","mapped","waitForMap","expandSegmentAgainstRoute","noLeftoversInUrl","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","newSegments","router_match","consumedSegments","lastChild","positionalParamSegments","matched","rawSegmentGroup","cfg","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","isEmptyPathRedirect","containsEmptyPathRedirectsWithNamedOutlets","mergeTrivialChildren","primarySegmentGroup","e_3","routes_2","routes_2_1","e_3_1","createChildrenForEmptySegments","containsEmptyPathRedirects","routes_1","routes_1_1","addEmptySegmentsToChildrenIfNeeded","router_split","cs","canLoad","injectionToken","guardVal","guard","isCanLoad","runCanLoadGuard","shouldLoad","canLoadFails","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","actualSegments_1","actualSegments_1_1","CanActivate","CanDeactivate","getToken","getClosestLoadedConfig","getChildRouteGuards","futurePath","checks","canDeactivateChecks","canActivateChecks","prevChildren","shouldRun","shouldRunGuardsAndResolvers","runGuardsAndResolvers","getRouteGuards","isActivated","INITIAL_VALUE","prioritizedGuardValue","startWith","isPending","innerAcc","fireActivationStart","fireChildActivationStart","runCanActivate","futureRSS","futureARS","canActivate","isCanActivate","runCanActivateChild","canActivateChildGuardsMapped","canActivateChild","guards","getCanActivateChild","isCanActivateChild","NoMatch$1","router_Recognizer","Recognizer","rootComponentType","relativeLinkResolution","recognize","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","names","routeWithSameOutletName","sort","localeCompare","config_1","config_1_1","processSegmentAgainstRoute","rawSegment","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","emptyPathMatch","getOutlet$1","containsEmptyPathMatchesWithNamedOutlets","s_1","primarySegment","createChildrenForEmptyPaths","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","getResolver","switchTap","nextResult","RouteReuseStrategy","DefaultRouteReuseStrategy","detachedTree","shouldReuseRoute","ROUTES","router_RouterConfigLoader","RouterConfigLoader","compiler","onLoadStartListener","onLoadEndListener","loadModuleFactory","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","newUrlPart","wholeUrl","defaultErrorHandler","defaultMalformedUriErrorHandler","defaultRouterHook","runExtras","router_Router","Router","rootContexts","lastSuccessfulNavigation","currentNavigation","navigationId","isNgZoneEnabled","malformedUriErrorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","onSameUrlNavigation","urlUpdateStrategy","resetConfig","currentUrlTree","rawUrlTree","browserUrlTree","triggerEvent","routerState","transitions","currentRawUrl","extractedUrl","rawUrl","extras","targetSnapshot","currentRouterState","targetRouterState","guardsResult","navigations","setupNavigations","processNavigations","eventsSubject","completed","errored","initialUrl","trigger","previousNavigation","urlTransition","serializeUrl","applyRedirects","finalUrl","serializer","recognize$1","skipLocationChange","setBrowserUrl","replaceUrl","routesRecognized","navStart","appliedUrlTree","guardsStart","currRSS","currARS","canDeactivate","isCanDeactivate","runCanDeactivate","runCanDeactivateChecks","runCanActivateChecks","checkGuards","guardsEnd","resetUrlToCurrentUrlTree","navCancel","resolveStart","key_1","resolveNode","resolvedData","runResolve","resolveEnd","prevState","createNode","createOrReuseChildren","detachedRouteHandle","setFutureSnapshotsOfActivatedRoutes","redirecting","resetStateAndUrl","navigateByUrl","navError","ee","resetRootComponentType","getTransition","setTransition","initialNavigation","setUpLocationChangeListener","locationSubscription","scheduleNavigation","getCurrentNavigation","dispose","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","q","removeEmptyProps","nav","cmd","cmdIdx","outlets_1","urlPart","partIndex","computeNavigation","startingPosition","modifier","ci","dd","createPositionApplyingDoubleDots","findStartingPosition","mergedTree","navigate","validateCommands","isActive","lastNavigation","storedState","storedUrl","OutletContext","ChildrenOutletContexts","onChildOutletCreated","onChildOutletDestroyed","router_RouterOutlet","RouterOutlet","changeDetector","_activatedRoute","activateEvents","deactivateEvents","cmp","activatedRoute","childContexts","OutletInjector","PreloadingStrategy","router_PreloadAllModules","PreloadAllModules","preload","router_NoPreloading","NoPreloading","router_RouterPreloader","RouterPreloader","router","moduleLoader","preloadingStrategy","setUpPreloading","processRoutes","preloadConfig","RouterScroller","viewportScroller","lastId","lastSource","restoredId","scrollPositionRestoration","anchorScrolling","routerEventsSubscription","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","scheduleScrollEvent","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","setupRouter","rootRoute","enableTracing","routerNgProbeToken","router_RouterModule","RouterModule","RouterModule_1","forRoot","provideRoutes","provideForRootGuard","provideLocationStrategy","createRouterScroller","router_RouterInitializer","getAppInitializer","ROUTER_INITIALIZER","getBootstrapListener","forChild","scrollOffset","platformLocationStrategy","useHash","dom_1","RouterInitializer","initNavigation","resultOfPreactivationDone","appInitializer","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","routerScroller","RenderType_ÉµEmptyOutletComponent","View_ÉµEmptyOutletComponent_0","_l","_ck","_v","View_ÉµEmptyOutletComponent_Host_0","ÉµEmptyOutletComponentNgFactory","HttpHandler","HttpBackend","http_HttpHeaders","HttpHeaders","headers","normalizedNames","lazyUpdate","lazyInit","line","maybeSetNormalizedName","append","op","lcName","copyFrom","update","applyUpdate","other","base","toDelete_1","existing","HttpUrlEncodingCodec","encodeKey","standardEncoding","encodeValue","decodeKey","decodeValue","HttpParams","rawParams","codec","updates","cloneFrom","encoder","fromObject","param","eqIdx","eKey","base_1","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","HttpRequest","third","fourth","reportProgress","withCredentials","toUpperCase","mightHaveBody","urlWithParams","qIdx","serializeBody","detectContentTypeHeader","setHeaders","setParams","HttpEventType","HttpResponseBase","defaultStatus","defaultStatusText","status","statusText","ok","http_HttpHeaderResponse","HttpHeaderResponse","ResponseHeader","http_HttpResponse","HttpResponse","Response","http_HttpErrorResponse","HttpErrorResponse","addBody","observe","http_HttpClient","HttpClient","events$","handle","res$","jsonp","callbackParam","post","HttpInterceptorHandler","interceptor","intercept","HTTP_INTERCEPTORS","NoopInterceptor","XSSI_PREFIX","XhrFactory","BrowserXhr","build","http_HttpXhrBackend","HttpXhrBackend","xhrFactory","setRequestHeader","detectedType","reqBody","headerResponse","partialFromXhr","getAllResponseHeaders","responseURL","test","getResponseHeader","getResponseUrl","onLoad","responseText","originalBody","sentHeaders","onDownProgress","progressEvent","DownloadProgress","loaded","lengthComputable","partialText","onUpProgress","progress","UploadProgress","upload","Sent","abort","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","HttpXsrfTokenExtractor","http_HttpXsrfCookieExtractor","HttpXsrfCookieExtractor","cookieName","lastCookieString","lastToken","parseCount","cookieString","HttpXsrfInterceptor","tokenService","headerName","lcUrl","HttpInterceptingHandler","backend","chain","interceptors","reduceRight","HttpClientXsrfModule","HttpClientXsrfModule_1","withOptions","HttpClientModule","RenderType_AppComponent","View_AppComponent_0","en","$event","ad","View_AppComponent_Host_0","originalFunctionToString","AppComponentNgFactory","FunctionToString","setupOnce","Function","truncate","max","safeJoin","delimiter","keysToEventMessage","maxLength","includedKeys","isMatchingPattern","pattern","includes","Status","DEFAULT_IGNORE_ERRORS","inboundfilters_InboundFilters","InboundFilters","_options","esm_scope","clientOptions","_mergeOptions","_shouldDropEvent","_isSentryError","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","blacklistUrls","whitelistUrls","oO","stacktrace","frames_1","frames","filename","frames_2","error_SentryError","SentryError","_newTarget","DSN_REGEX","dsn_Dsn","Dsn","_fromString","_fromComponents","_validate","withPassword","pass","port","projectId","exec","api_API","API","dsn","_dsnObject","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","getRequestHeaders","clientName","clientVersion","header","Content-Type","X-Sentry-Auth","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","email","installedIntegrations","baseclient_BaseClient","BaseClient","backendClass","_processing","_backend","_dsn","_integrations","integrations","defaultIntegrations","userIntegrations","userIntegrationsNames_1","pickedIntegrationsNames_1","defaultIntegration","userIntegration","getIntegrationsToSetup","setupIntegration","setupIntegrations","_getBackend","eventFromException","_processEvent","finalEvent","eventFromMessage","flush","_isClientProcessing","clientReady","_processingInterval","clearInterval","getTransport","close","transportFlushed","enabled","getIntegrations","ticked","setInterval","_isEnabled","_prepareEvent","environment","release","dist","maxValueLength","prepared","_addIntegrations","sdk","sdkInfo","integrationsArray","beforeSend","sampleRate","sendEvent","beforeSendResult","_handleAsyncBeforeSend","processedEvent","fromHttpCode","Success","RateLimit","Invalid","Failed","Unknown","noop_NoopTransport","NoopTransport","Skipped","basebackend_BaseBackend","BaseBackend","_transport","_setupTransport","_exception","_hint","_message","supportsFetch","Headers","Request","supportsReferrerPolicy","referrerPolicy","tracekit_window","TraceKit","_report","_collectWindowErrors","_computeStackTrace","_linesOfContext","UNKNOWN_FUNCTION","ERROR_TYPES_RE","_has","getLocationHref","_oldOnerrorHandler","_onErrorHandlerInstalled","handlers","lastException","lastExceptionStack","_notifyHandlers","isWindowError","inner","_traceKitWindowOnError","lineNo","columnNo","errorObj","_augmentStackTraceWithInitialElement","processLastException","column","groups","func","_traceKitWindowOnUnhandledRejection","detail","_lastExceptionStack","_lastException","ex","incomplete","_installGlobalHandler","onerror","_installGlobalUnhandledRejectionHandler","onunhandledrejection","_computeStackTraceFromStackProp","submatch","chrome","gecko","winjs","geckoEval","chromeEval","lines","reference","isNative","columnNumber","stackInfo","initial","partial","_computeStackTraceByWalkingCallerChain","functionName","funcs","recursion","caller","sourceURL","fileName","lineNumber","description","computeStackTrace","opera10Regex","opera11Regex","_computeStackTraceFromStacktraceProp","lineRE1","lineRE2","lineRE3","scripts","inlineScriptBlocks","src","_computeStackTraceFromOperaMultiLineMessage","tracekit_subscribe","tracekit_installGlobalHandler","tracekit_installGlobalUnhandledRejectionHandler","STACKTRACE_LIMIT","exceptionFromStacktrace","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","colno","function","in_app","lineno","keypressTimeout","lastCapturedEvent","promisebuffer_PromiseBuffer","PromiseBuffer","_limit","_buffer","isReady","drain","capturedSetTimeout","base_BaseTransport","BaseTransport","fetch_global","fetch_FetchTransport","FetchTransport","defaultOptions","fetch","xhr_XHRTransport","XHRTransport","onreadystatechange","readyState","backend_BrowserBackend","BrowserBackend","transportOptions","transport","_buildEvent","domException","message_1","messageEvent","exceptionKeys","__serialized__","eventFromPlainObject","synthetic","stringException","attachStacktrace","client_BrowserClient","BrowserClient","packages","showReportDialog","script","async","onload","debounceDuration","ignoreOnError","sentryWrapped","wrappedArguments","arg","property","debounceTimer","breadcrumbEventHandler","debounce","captureBreadcrumb","nextStr","currentElem","out","sepLength","_htmlElementAsString","_htmlTreeAsString","category","keypressEventHandler","isContentEditable","attrWhitelist","trycatch_TryCatch","TryCatch","_ignoreOnError","_wrapTimeFunction","getFunctionName","_wrapRAF","_wrapEventTarget","proto","lastHref","breadcrumbs_global","breadcrumbs_Breadcrumbs","Breadcrumbs","sentry","_instrumentConsole","originalConsoleLevel","breadcrumbData","_instrumentDOM","innerOriginal","_instrumentFetch","originalFetch","fetchInput","filterUrl","addSentryBreadcrumb","fetchData","status_code","_instrumentHistory","app","runtime","captureUrlChange","to","parsedLoc","parsedTo","parsedFrom","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","_instrumentXHR","xhrproto","originalOpen","__sentry_xhr__","__sentry_own_request__","originalSend","onreadystatechangeHandler","wrapProp","serializedData","event_1","globalhandlers_GlobalHandlers","GlobalHandlers","stackTraceLimit","_eventFromGlobalHandler","fallbackValue","fallbackType","DEFAULT_KEY","DEFAULT_LIMIT","linkederrors_LinkedErrors","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","useragent_global","useragent_UserAgent","UserAgent","integrations_namespaceObject","clientClass","debug","initAndBind","sentry_error_handler_service_SentryErrorHandler","SentryErrorHandler","AppRoutingModule","AppModuleNgFactory","moduleDef","p0_0","p0_1","p0_2","p1_0","p2_0","p2_1","p2_2","p2_3","coreTokens","enableProdMode"],"mappings":"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","file":"main.c1cee028a8d5a0f20bcc.js","sourcesContent":["module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// tslint:disable:no-unsafe-any\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nvar Memo = /** @class */ (function () {\n    function Memo() {\n        // tslint:disable-next-line\n        this._hasWeakSet = typeof WeakSet === 'function';\n        this._inner = this._hasWeakSet ? new WeakSet() : [];\n    }\n    /**\n     * Sets obj to remember.\n     * @param obj Object to remember\n     */\n    Memo.prototype.memoize = function (obj) {\n        if (this._hasWeakSet) {\n            if (this._inner.has(obj)) {\n                return true;\n            }\n            this._inner.add(obj);\n            return false;\n        }\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < this._inner.length; i++) {\n            var value = this._inner[i];\n            if (value === obj) {\n                return true;\n            }\n        }\n        this._inner.push(obj);\n        return false;\n    };\n    /**\n     * Removes object from internal storage.\n     * @param obj Object to forget\n     */\n    Memo.prototype.unmemoize = function (obj) {\n        if (this._hasWeakSet) {\n            this._inner.delete(obj);\n        }\n        else {\n            for (var i = 0; i < this._inner.length; i++) {\n                if (this._inner[i] === obj) {\n                    this._inner.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    return Memo;\n}());\nexport { Memo };\n//# sourceMappingURL=memo.js.map","import { isError, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nexport function fill(source, name, replacement) {\n    if (!(name in source)) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacement(original);\n    // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n    // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof wrapped === 'function') {\n        try {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __sentry__: {\n                    enumerable: false,\n                    value: true,\n                },\n                __sentry_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n                __sentry_wrapped__: {\n                    enumerable: false,\n                    value: wrapped,\n                },\n            });\n        }\n        catch (_Oo) {\n            // This can throw if multiple fill happens on a global object like XMLHttpRequest\n            // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n        }\n    }\n    source[name] = wrapped;\n}\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object) {\n    return Object.keys(object)\n        .map(\n    // tslint:disable-next-line:no-unsafe-any\n    function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\n/**\n * Transforms Error object into an object literal with all it's attributes\n * attached to it.\n *\n * Based on: https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\n *\n * @param error An Error containing all relevant information\n * @returns An object with all error properties\n */\nfunction objectifyError(error) {\n    // These properties are implemented as magical getters and don't show up in `for-in` loop\n    var err = {\n        message: error.message,\n        name: error.name,\n        stack: error.stack,\n    };\n    for (var i in error) {\n        if (Object.prototype.hasOwnProperty.call(error, i)) {\n            err[i] = error[i];\n        }\n    }\n    return err;\n}\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    // tslint:disable-next-line:no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\nexport function normalizeToSize(object, \n// Default Node.js REPL depth\ndepth, \n// 100kB, as 200kB is max payload size, so half sounds reasonable\nmaxSize) {\n    if (depth === void 0) { depth = 3; }\n    if (maxSize === void 0) { maxSize = 100 * 1024; }\n    var serialized = normalize(object, depth);\n    if (jsonSize(serialized) > maxSize) {\n        return normalizeToSize(object, depth - 1, maxSize);\n    }\n    return serialized;\n}\n/** Transforms any input value into a string form, either primitive value or a type of the input */\nfunction serializeValue(value) {\n    var type = Object.prototype.toString.call(value);\n    // Node.js REPL notation\n    if (typeof value === 'string') {\n        return value;\n    }\n    if (type === '[object Object]') {\n        return '[Object]';\n    }\n    if (type === '[object Array]') {\n        return '[Array]';\n    }\n    var normalized = normalizeValue(value);\n    return isPrimitive(normalized) ? normalized : type;\n}\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue(value, key) {\n    if (key === 'domain' && typeof value === 'object' && value._events) {\n        return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n        return '[DomainEmitter]';\n    }\n    if (typeof global !== 'undefined' && value === global) {\n        return '[Global]';\n    }\n    if (typeof window !== 'undefined' && value === window) {\n        return '[Window]';\n    }\n    if (typeof document !== 'undefined' && value === document) {\n        return '[Document]';\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof Event !== 'undefined' && value instanceof Event) {\n        return Object.getPrototypeOf(value) ? value.constructor.name : 'Event';\n    }\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n        return '[SyntheticEvent]';\n    }\n    if (Number.isNaN(value)) {\n        return '[NaN]';\n    }\n    if (value === void 0) {\n        return '[undefined]';\n    }\n    if (typeof value === 'function') {\n        return \"[Function: \" + (value.name || '<unknown-function-name>') + \"]\";\n    }\n    return value;\n}\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\nexport function walk(key, value, depth, memo) {\n    if (depth === void 0) { depth = +Infinity; }\n    if (memo === void 0) { memo = new Memo(); }\n    // If we reach the maximum depth, serialize whatever has left\n    if (depth === 0) {\n        return serializeValue(value);\n    }\n    // If value implements `toJSON` method, call it and return early\n    // tslint:disable:no-unsafe-any\n    if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n        return value.toJSON();\n    }\n    // tslint:enable:no-unsafe-any\n    // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n    var normalized = normalizeValue(value, key);\n    if (isPrimitive(normalized)) {\n        return normalized;\n    }\n    // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n    var source = (isError(value) ? objectifyError(value) : value);\n    // Create an accumulator that will act as a parent for all future itterations of that branch\n    var acc = Array.isArray(value) ? [] : {};\n    // If we already walked that branch, bail out, as it's circular reference\n    if (memo.memoize(value)) {\n        return '[Circular ~]';\n    }\n    // Walk all keys of the source\n    for (var innerKey in source) {\n        // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n        if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n            continue;\n        }\n        // Recursively walk through all the child nodes\n        acc[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n    }\n    // Once walked through all the branches, remove the parent from memo storage\n    memo.unmemoize(value);\n    // Return accumulated values\n    return acc;\n}\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\nexport function normalize(input, depth) {\n    try {\n        // tslint:disable-next-line:no-unsafe-any\n        return JSON.parse(JSON.stringify(input, function (key, value) { return walk(key, value, depth); }));\n    }\n    catch (_oO) {\n        return '**non-serializable**';\n    }\n}\n//# sourceMappingURL=object.js.map","import { consoleSandbox, getGlobalObject } from './misc';\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n/** JSDoc */\nvar Logger = /** @class */ (function () {\n    /** JSDoc */\n    function Logger() {\n        this._enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n        this._enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n        this._enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.log(PREFIX + \"[Log]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.warn(PREFIX + \"[Warn]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.error(PREFIX + \"[Error]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    return Logger;\n}());\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nvar logger = global.__SENTRY__.logger || (global.__SENTRY__.logger = new Logger());\nexport { logger };\n//# sourceMappingURL=logger.js.map","/**\n * Requires a module which is protected _against bundler minification.\n *\n * @param request The module path to resolve\n */\nexport function dynamicRequire(mod, request) {\n    // tslint:disable-next-line: no-unsafe-any\n    return mod.require(request);\n}\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv() {\n    // tslint:disable:strict-type-predicates\n    return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject() {\n    return (isNodeEnv()\n        ? global\n        : typeof window !== 'undefined'\n            ? window\n            : typeof self !== 'undefined'\n                ? self\n                : fallbackGlobalObject);\n}\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // tslint:disable-next-line:no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // tslint:disable-next-line:no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        // tslint:disable-next-line:no-bitwise\n        var r = (Math.random() * 16) | 0;\n        // tslint:disable-next-line:no-bitwise\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event) {\n    if (event.message) {\n        return event.message;\n    }\n    if (event.exception && event.exception.values && event.exception.values[0]) {\n        var exception = event.exception.values[0];\n        if (exception.type && exception.value) {\n            return exception.type + \": \" + exception.value;\n        }\n        return exception.type || exception.value || event.event_id || '<unknown>';\n    }\n    return event.event_id || '<unknown>';\n}\n/** JSDoc */\nexport function consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n    if (!('console' in global)) {\n        return callback();\n    }\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n        if (level in global.console && originalConsole[level].__sentry__) {\n            wrappedLevels[level] = originalConsole[level].__sentry_wrapped__;\n            originalConsole[level] = originalConsole[level].__sentry_original__;\n        }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n        originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @param mechanism Mechanism of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event, value, type, mechanism) {\n    if (mechanism === void 0) { mechanism = {\n        handled: true,\n        type: 'generic',\n    }; }\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].value = event.exception.values[0].value || value || '';\n    event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n    event.exception.values[0].mechanism = event.exception.values[0].mechanism || mechanism;\n}\n//# sourceMappingURL=misc.js.map","/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return wat instanceof Error;\n    }\n}\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n}\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n}\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat) {\n    // tslint:disable:no-unsafe-any\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n    // tslint:enable:no-unsafe-any\n}\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat) {\n    // tslint:disable-next-line:no-unsafe-any\n    return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n//# sourceMappingURL=is.js.map","import { isThenable } from './is';\n/** SyncPromise internal states */\nvar States;\n(function (States) {\n    /** Pending */\n    States[\"PENDING\"] = \"PENDING\";\n    /** Resolved / OK */\n    States[\"RESOLVED\"] = \"RESOLVED\";\n    /** Rejected / Error */\n    States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/** JSDoc */\nvar SyncPromise = /** @class */ (function () {\n    function SyncPromise(callback) {\n        var _this = this;\n        /** JSDoc */\n        this._state = States.PENDING;\n        /** JSDoc */\n        this._handlers = [];\n        /** JSDoc */\n        this._resolve = function (value) {\n            _this._setResult(value, States.RESOLVED);\n        };\n        /** JSDoc */\n        this._reject = function (reason) {\n            _this._setResult(reason, States.REJECTED);\n        };\n        /** JSDoc */\n        this._setResult = function (value, state) {\n            if (_this._state !== States.PENDING) {\n                return;\n            }\n            if (isThenable(value)) {\n                value.then(_this._resolve, _this._reject);\n                return;\n            }\n            _this._value = value;\n            _this._state = state;\n            _this._executeHandlers();\n        };\n        /** JSDoc */\n        this._executeHandlers = function () {\n            if (_this._state === States.PENDING) {\n                return;\n            }\n            if (_this._state === States.REJECTED) {\n                // tslint:disable-next-line:no-unsafe-any\n                _this._handlers.forEach(function (h) { return h.onFail && h.onFail(_this._value); });\n            }\n            else {\n                // tslint:disable-next-line:no-unsafe-any\n                _this._handlers.forEach(function (h) { return h.onSuccess && h.onSuccess(_this._value); });\n            }\n            _this._handlers = [];\n            return;\n        };\n        /** JSDoc */\n        this._attachHandler = function (handler) {\n            _this._handlers = _this._handlers.concat(handler);\n            _this._executeHandlers();\n        };\n        try {\n            callback(this._resolve, this._reject);\n        }\n        catch (e) {\n            this._reject(e);\n        }\n    }\n    /** JSDoc */\n    SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n        var _this = this;\n        // public then<U>(onSuccess?: HandlerOnSuccess<T, U>, onFail?: HandlerOnFail<U>): SyncPromise<T | U> {\n        return new SyncPromise(function (resolve, reject) {\n            _this._attachHandler({\n                onFail: function (reason) {\n                    if (!onrejected) {\n                        reject(reason);\n                        return;\n                    }\n                    try {\n                        resolve(onrejected(reason));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n                onSuccess: function (result) {\n                    if (!onfulfilled) {\n                        resolve(result);\n                        return;\n                    }\n                    try {\n                        resolve(onfulfilled(result));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.catch = function (onFail) {\n        // tslint:disable-next-line:no-unsafe-any\n        return this.then(function (val) { return val; }, onFail);\n    };\n    /** JSDoc */\n    SyncPromise.prototype.toString = function () {\n        return \"[object SyncPromise]\";\n    };\n    /** JSDoc */\n    SyncPromise.resolve = function (value) {\n        return new SyncPromise(function (resolve) {\n            resolve(value);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.reject = function (reason) {\n        return new SyncPromise(function (_, reject) {\n            reject(reason);\n        });\n    };\n    return SyncPromise;\n}());\nexport { SyncPromise };\n//# sourceMappingURL=syncpromise.js.map","import { uuid4 } from '@sentry/utils';\nexport var TRACEPARENT_REGEXP = /([0-9a-f]{2})-([0-9a-f]{32})-([0-9a-f]{16})-([0-9a-f]{2})/;\n/**\n * Span containg all data about a span\n */\nvar Span = /** @class */ (function () {\n    function Span(_traceId, _spanId, _recorded, _parent) {\n        if (_traceId === void 0) { _traceId = uuid4(); }\n        if (_spanId === void 0) { _spanId = uuid4().substring(16); }\n        if (_recorded === void 0) { _recorded = false; }\n        this._traceId = _traceId;\n        this._spanId = _spanId;\n        this._recorded = _recorded;\n        this._parent = _parent;\n    }\n    /**\n     * Continues a trace\n     * @param traceparent Traceparent string\n     */\n    Span.fromTraceparent = function (traceparent) {\n        var matches = traceparent.match(TRACEPARENT_REGEXP);\n        if (matches) {\n            var parent_1 = new Span(matches[2], matches[3], matches[4] === '01' ? true : false);\n            return new Span(matches[2], undefined, undefined, parent_1);\n        }\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toTraceparent = function () {\n        return \"00-\" + this._traceId + \"-\" + this._spanId + \"-\" + (this._recorded ? '01' : '00');\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toJSON = function () {\n        return {\n            parent: (this._parent && this._parent.toJSON()) || undefined,\n            span_id: this._spanId,\n            trace_id: this._traceId,\n        };\n    };\n    return Span;\n}());\nexport { Span };\n//# sourceMappingURL=span.js.map","import * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isThenable, normalize, SyncPromise } from '@sentry/utils';\nimport { Span } from './span';\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifiying is happening. */\n        this._notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this._scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this._eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this._breadcrumbs = [];\n        /** User */\n        this._user = {};\n        /** Tags */\n        this._tags = {};\n        /** Extra */\n        this._extra = {};\n        /** Contexts */\n        this._context = {};\n    }\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n        this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this._eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n        var _this = this;\n        if (!this._notifyingListeners) {\n            this._notifyingListeners = true;\n            setTimeout(function () {\n                _this._scopeListeners.forEach(function (callback) {\n                    callback(_this);\n                });\n                _this._notifyingListeners = false;\n            });\n        }\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n        var _this = this;\n        if (index === void 0) { index = 0; }\n        return new SyncPromise(function (resolve, reject) {\n            var processor = processors[index];\n            // tslint:disable-next-line:strict-type-predicates\n            if (event === null || typeof processor !== 'function') {\n                resolve(event);\n            }\n            else {\n                var result = processor(tslib_1.__assign({}, event), hint);\n                if (isThenable(result)) {\n                    result\n                        .then(function (final) { return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve); })\n                        .catch(reject);\n                }\n                else {\n                    _this._notifyEventProcessors(processors, result, hint, index + 1)\n                        .then(resolve)\n                        .catch(reject);\n                }\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n        this._user = normalize(user);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n        this._tags = tslib_1.__assign({}, this._tags, normalize(tags));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this._tags = tslib_1.__assign({}, this._tags, (_a = {}, _a[key] = normalize(value), _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extra) {\n        this._extra = tslib_1.__assign({}, this._extra, normalize(extra));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this._extra = tslib_1.__assign({}, this._extra, (_a = {}, _a[key] = normalize(extra), _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this._fingerprint = normalize(fingerprint);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n        this._level = normalize(level);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransaction = function (transaction) {\n        this._transaction = transaction;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setContext = function (name, context) {\n        this._context[name] = context ? normalize(context) : undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n        this._span = span;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.startSpan = function () {\n        var span = new Span();\n        this.setSpan(span);\n        return span;\n    };\n    /**\n     * Internal getter for Span, used in Hub.\n     * @hidden\n     */\n    Scope.prototype.getSpan = function () {\n        return this._span;\n    };\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        Object.assign(newScope, scope, {\n            _scopeListeners: [],\n        });\n        if (scope) {\n            newScope._breadcrumbs = tslib_1.__spread(scope._breadcrumbs);\n            newScope._tags = tslib_1.__assign({}, scope._tags);\n            newScope._extra = tslib_1.__assign({}, scope._extra);\n            newScope._context = tslib_1.__assign({}, scope._context);\n            newScope._user = scope._user;\n            newScope._level = scope._level;\n            newScope._span = scope._span;\n            newScope._transaction = scope._transaction;\n            newScope._fingerprint = scope._fingerprint;\n            newScope._eventProcessors = tslib_1.__spread(scope._eventProcessors);\n        }\n        return newScope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n        this._breadcrumbs = [];\n        this._tags = {};\n        this._extra = {};\n        this._user = {};\n        this._context = {};\n        this._level = undefined;\n        this._transaction = undefined;\n        this._fingerprint = undefined;\n        this._span = undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        var timestamp = new Date().getTime() / 1000;\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        this._breadcrumbs =\n            maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                ? tslib_1.__spread(this._breadcrumbs, [normalize(mergedBreadcrumb)]).slice(-maxBreadcrumbs)\n                : tslib_1.__spread(this._breadcrumbs, [normalize(mergedBreadcrumb)]);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n        this._breadcrumbs = [];\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this._fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this._fingerprint);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional informartion about the original exception.\n     * @param maxBreadcrumbs number of max breadcrumbs to merged into event.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n        if (this._extra && Object.keys(this._extra).length) {\n            event.extra = tslib_1.__assign({}, this._extra, event.extra);\n        }\n        if (this._tags && Object.keys(this._tags).length) {\n            event.tags = tslib_1.__assign({}, this._tags, event.tags);\n        }\n        if (this._user && Object.keys(this._user).length) {\n            event.user = tslib_1.__assign({}, this._user, event.user);\n        }\n        if (this._context && Object.keys(this._context).length) {\n            event.contexts = tslib_1.__assign({}, this._context, event.contexts);\n        }\n        if (this._level) {\n            event.level = this._level;\n        }\n        if (this._transaction) {\n            event.transaction = this._transaction;\n        }\n        if (this._span) {\n            event.contexts = event.contexts || {};\n            event.contexts.trace = this._span;\n        }\n        this._applyFingerprint(event);\n        event.breadcrumbs = tslib_1.__spread((event.breadcrumbs || []), this._breadcrumbs);\n        event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n        return this._notifyEventProcessors(tslib_1.__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    return Scope;\n}());\nexport { Scope };\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    var global = getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\n//# sourceMappingURL=scope.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import * as tslib_1 from \"tslib\";\nimport { consoleSandbox, dynamicRequire, getGlobalObject, logger, uuid4 } from '@sentry/utils';\nimport { Scope } from './scope';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 3;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 30;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, _version) {\n        if (scope === void 0) { scope = new Scope(); }\n        if (_version === void 0) { _version = API_VERSION; }\n        this._version = _version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this._stack = [];\n        this._stack.push({ client: client, scope: scope });\n    }\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client.\n     * @param args Arguments to pass to the client function.\n     */\n    Hub.prototype._invokeClient = function (method) {\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var top = this.getStackTop();\n        if (top && top.client && top.client[method]) {\n            (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this._version < version;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var stack = this.getStack();\n        var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n        var scope = Scope.clone(parentScope);\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.popScope = function () {\n        return this.getStack().pop() !== undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this._stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this._stack[this._stack.length - 1];\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureException', exception, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureMessage', message, level, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureEvent', event, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        var top = this.getStackTop();\n        if (!top.scope || !top.client) {\n            return;\n        }\n        var _a = (top.client.getOptions && top.client.getOptions()) || {}, _b = _a.beforeBreadcrumb, beforeBreadcrumb = _b === void 0 ? null : _b, _c = _a.maxBreadcrumbs, maxBreadcrumbs = _c === void 0 ? DEFAULT_BREADCRUMBS : _c;\n        if (maxBreadcrumbs <= 0) {\n            return;\n        }\n        var timestamp = new Date().getTime() / 1000;\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null) {\n            return;\n        }\n        top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            // TODO: freeze flag\n            callback(top.scope);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getIntegration = function (integration) {\n        var client = this.getClient();\n        if (!client) {\n            return null;\n        }\n        try {\n            return client.getIntegration(integration);\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.traceHeaders = function () {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            var span = top.scope.getSpan();\n            if (span) {\n                return {\n                    'sentry-trace': span.toTraceparent(),\n                };\n            }\n        }\n        return {};\n    };\n    return Hub;\n}());\nexport { Hub };\n/** Returns the global shim registry. */\nexport function getMainCarrier() {\n    var carrier = getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        hub: undefined,\n    };\n    return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there\n    try {\n        // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n        // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n        // for example so we do not have to shim it and use `getCurrentHub` universally.\n        var domain = dynamicRequire(module, 'domain');\n        var activeDomain = domain.active;\n        // If there no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or its an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return true;\n    }\n    return false;\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return carrier.__SENTRY__.hub;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = new Hub();\n    return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier, hub) {\n    if (!carrier) {\n        return false;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = hub;\n    return true;\n}\n//# sourceMappingURL=hub.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x !== null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction UnsubscriptionErrorImpl(errors) {\n    Error.call(this);\n    this.message = errors ?\n        errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n}\nUnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport var config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = typeof Symbol === 'function'\n    ? /*@__PURE__*/ Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n//# sourceMappingURL=observable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=canReportError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction ObjectUnsubscribedErrorImpl() {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n}\nObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nexport var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\nvar InnerSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.outerValue = outerValue;\n        _this.outerIndex = outerIndex;\n        _this.index = 0;\n        return _this;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\nexport { InnerSubscriber };\n//# sourceMappingURL=InnerSubscriber.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    };\n};\n//# sourceMappingURL=subscribeToArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = /*@__PURE__*/ getSymbolIterator();\nexport var $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isPromise(value) {\n    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map\n","/** PURE_IMPORTS_START _subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeTo = function (result) {\n    if (!!result && typeof result[Symbol_observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (!!result && typeof result[Symbol_iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeToObservable = function (obj) {\n    return function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            throw new TypeError('Provided object does not correctly implement Symbol.observable');\n        }\n        else {\n            return obs.subscribe(subscriber);\n        }\n    };\n};\n//# sourceMappingURL=subscribeToObservable.js.map\n","/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nimport { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function (promise) {\n    return function (subscriber) {\n        promise.then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, hostReportError);\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToPromise.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport var subscribeToIterable = function (iterable) {\n    return function (subscriber) {\n        var iterator = iterable[Symbol_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                subscriber.complete();\n                break;\n            }\n            subscriber.next(item.value);\n            if (subscriber.closed) {\n                break;\n            }\n        } while (true);\n        if (typeof iterator.return === 'function') {\n            subscriber.add(function () {\n                if (iterator.return) {\n                    iterator.return();\n                }\n            });\n        }\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToIterable.js.map\n","/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo,_Observable PURE_IMPORTS_END */\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, destination) {\n    if (destination === void 0) {\n        destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    }\n    if (destination.closed) {\n        return undefined;\n    }\n    if (result instanceof Observable) {\n        return result.subscribe(destination);\n    }\n    return subscribeTo(result)(destination);\n}\n//# sourceMappingURL=subscribeToResult.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\nvar OuterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\nexport { OuterSubscriber };\n//# sourceMappingURL=OuterSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        var i = 0;\n        sub.add(scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n                return;\n            }\n            subscriber.next(input[i++]);\n            if (!subscriber.closed) {\n                sub.add(this.schedule());\n            }\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map\n","/** PURE_IMPORTS_START _Observable,_util_subscribeTo,_scheduled_scheduled PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { scheduled } from '../scheduled/scheduled';\nexport function from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable) {\n            return input;\n        }\n        return new Observable(subscribeTo(input));\n    }\n    else {\n        return scheduled(input, scheduler);\n    }\n}\n//# sourceMappingURL=from.js.map\n","/** PURE_IMPORTS_START _scheduleObservable,_schedulePromise,_scheduleArray,_scheduleIterable,_util_isInteropObservable,_util_isPromise,_util_isArrayLike,_util_isIterable PURE_IMPORTS_END */\nimport { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return scheduleIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n//# sourceMappingURL=scheduled.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function isInteropObservable(input) {\n    return input && typeof input[Symbol_observable] === 'function';\n}\n//# sourceMappingURL=isInteropObservable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function scheduleObservable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        sub.add(scheduler.schedule(function () {\n            var observable = input[Symbol_observable]();\n            sub.add(observable.subscribe({\n                next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\n                error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\n                complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\n            }));\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleObservable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        sub.add(scheduler.schedule(function () {\n            return input.then(function (value) {\n                sub.add(scheduler.schedule(function () {\n                    subscriber.next(value);\n                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\n                }));\n            }, function (err) {\n                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\n            });\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=schedulePromise.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function isIterable(input) {\n    return input && typeof input[Symbol_iterator] === 'function';\n}\n//# sourceMappingURL=isIterable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function scheduleIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        var iterator;\n        sub.add(function () {\n            if (iterator && typeof iterator.return === 'function') {\n                iterator.return();\n            }\n        });\n        sub.add(scheduler.schedule(function () {\n            iterator = input[Symbol_iterator]();\n            sub.add(scheduler.schedule(function () {\n                if (subscriber.closed) {\n                    return;\n                }\n                var value;\n                var done;\n                try {\n                    var result = iterator.next();\n                    value = result.value;\n                    done = result.done;\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                    this.schedule();\n                }\n            }));\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map\n","/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(mergeMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };\n}\nvar MergeMapOperator = /*@__PURE__*/ (function () {\n    function MergeMapOperator(project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexport { MergeMapOperator };\nvar MergeMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        subscribeToResult(this, ish, value, index, innerSubscriber);\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber));\nexport { MergeMapSubscriber };\n//# sourceMappingURL=mergeMap.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map\n","/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map\n","/** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return scheduleArray(input, scheduler);\n    }\n}\n//# sourceMappingURL=fromArray.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=refCount.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nvar ConnectableObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subjectFactory = subjectFactory;\n        _this._refCount = 0;\n        _this._isComplete = false;\n        return _this;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return higherOrderRefCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\nexport { ConnectableObservable };\nvar connectableProto = ConnectableObservable.prototype;\nexport var connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber));\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map\n","/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\nexport function share() {\n    return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };\n}\n//# sourceMappingURL=share.js.map\n","/**\n * @license Angular v7.2.15\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __spread, __assign, __values, __extends, __decorate, __param, __metadata, __read } from 'tslib';\nimport { Subscription, Subject, Observable, merge } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param target The target to set properties on\n * @param source The source of the property keys and values to set\n */\nfunction fillProperties(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n            target[key] = source[key];\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\nvar NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\nvar NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\nvar NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\nvar NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\nvar NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\nvar NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n/**\n * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nvar NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @publicApi\n */\nfunction defineInjectable(opts) {\n    return {\n        providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n    };\n}\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @publicApi\n */\nfunction defineInjector(options) {\n    return {\n        factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n    };\n}\n/**\n * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have `ngInjectableDef`\n */\nfunction getInjectableDef(type) {\n    return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n}\n/**\n * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have `ngInjectorDef`\n */\nfunction getInjectorDef(type) {\n    return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parameterized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Example\n *\n * ### Plain InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n *\n * @publicApi\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /** @internal */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            this.ngInjectableDef = undefined;\n        }\n    }\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__parameters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n */\nfunction makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n    var metaCtor = makeMetadataCtor(props);\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, __spread([this], args));\n            return this;\n        }\n        var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        return function TypeDecorator(cls) {\n            if (typeFn)\n                typeFn.apply(void 0, __spread([cls], args));\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                cls[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            if (additionalProcessing)\n                additionalProcessing(cls);\n            return cls;\n        };\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    DecoratorFactory.annotationCls = DecoratorFactory;\n    return DecoratorFactory;\n}\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var values = props.apply(void 0, __spread(args));\n            for (var propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\nfunction makeParamDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        ParamDecorator.annotation = annotationInstance;\n        return ParamDecorator;\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                cls[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\nfunction makePropDecorator(name, props, parentClass, additionalProcessing) {\n    var metaCtor = makeMetadataCtor(props);\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _a;\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n        function PropDecorator(target, name) {\n            var constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                constructor[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n            if (additionalProcessing)\n                additionalProcessing.apply(void 0, __spread([target, name], args));\n        }\n        return PropDecorator;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n * that will populate the `entryComponents` field of components and NgModules\n * based on its `useValue` property value.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) are added to the `entryComponents` property.\n *\n * @usageNotes\n *\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on a router configuration that refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @publicApi\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n *\n * @publicApi\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * ContentChildren decorator and metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n *\n * @publicApi\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The strategy that the default change detector uses to detect changes.\n * When set, takes effect the next time change detection is triggered.\n *\n * @publicApi\n */\nvar ChangeDetectionStrategy;\n(function (ChangeDetectionStrategy) {\n    /**\n     * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n     * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n     * Change detection can still be explicitly invoked.\n     * This strategy applies to all child directives and cannot be overridden.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * Use the default `CheckAlways` strategy, in which change detection is automatic until\n     * explicitly deactivated.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(ChangeDetectionStrategy || (ChangeDetectionStrategy = {}));\n/**\n * Defines the possible states of the default change detector.\n * @see `ChangeDetectorRef`\n */\nvar ChangeDetectorStatus;\n(function (ChangeDetectorStatus) {\n    /**\n     * A state in which, after calling `detectChanges()`, the change detector\n     * state becomes `Checked`, and must be explicitly invoked or reactivated.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n    /**\n     * A state in which change detection is skipped until the change detector mode\n     * becomes `CheckOnce`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n    /**\n     * A state in which change detection continues automatically until explicitly\n     * deactivated.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n    /**\n     * A state in which a change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n    /**\n     * Indicates that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state do not detect changes.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n    /**\n     * Indicates that the change detector has been destroyed.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n})(ChangeDetectorStatus || (ChangeDetectorStatus = {}));\n/**\n * Reports whether a given strategy is currently the default for change detection.\n * @param changeDetectionStrategy The strategy to check.\n * @returns True if the given strategy is the current default, false otherwise.\n * @see `ChangeDetectorStatus`\n * @see `ChangeDetectorRef`\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nvar _global = __global || __window || __self;\nvar promise = Promise.resolve(0);\nvar _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n// JS has NaN !== NaN\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Convince closure compiler that the wrapped function has no side-effects.\n *\n * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n * It is important that the return value for the `noSideEffects` function be assigned\n * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n * compiler.\n */\nfunction noSideEffects(fn) {\n    return '' + { toString: fn };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @publicApi\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () { return stringify(this()); };\n    return forwardRefFn;\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @publicApi\n */\nfunction resolveForwardRef(type) {\n    var fn = type;\n    if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n        fn.__forward_ref__ === forwardRef) {\n        return fn();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * @Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponent{\n * }\n *\n * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n *\n * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n *\n * // Use browser's `fetch()` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into `template` strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param resourceResolver a function which is responsible for returning a `Promise` to the\n * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n */\nfunction resolveComponentResources(resourceResolver) {\n    // Store all promises which are fetching the resources.\n    var urlFetches = [];\n    // Cache so that we don't fetch the same resource more than once.\n    var urlMap = new Map();\n    function cachedResourceResolve(url) {\n        var promise = urlMap.get(url);\n        if (!promise) {\n            var resp = resourceResolver(url);\n            urlMap.set(url, promise = resp.then(unwrapResponse));\n            urlFetches.push(promise);\n        }\n        return promise;\n    }\n    componentResourceResolutionQueue.forEach(function (component) {\n        if (component.templateUrl) {\n            cachedResourceResolve(component.templateUrl).then(function (template) {\n                component.template = template;\n                component.templateUrl = undefined;\n            });\n        }\n        var styleUrls = component.styleUrls;\n        var styles = component.styles || (component.styles = []);\n        var styleOffset = component.styles.length;\n        styleUrls && styleUrls.forEach(function (styleUrl, index) {\n            styles.push(''); // pre-allocate array.\n            cachedResourceResolve(styleUrl).then(function (style) {\n                styles[styleOffset + index] = style;\n                styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                if (styleUrls.length == 0) {\n                    component.styleUrls = undefined;\n                }\n            });\n        });\n    });\n    componentResourceResolutionQueue.clear();\n    return Promise.all(urlFetches).then(function () { return null; });\n}\nvar componentResourceResolutionQueue = new Set();\nfunction maybeQueueResolutionOfComponentResources(metadata) {\n    if (componentNeedsResolution(metadata)) {\n        componentResourceResolutionQueue.add(metadata);\n    }\n}\nfunction componentNeedsResolution(component) {\n    return component.templateUrl || component.styleUrls && component.styleUrls.length;\n}\nfunction unwrapResponse(response) {\n    return typeof response == 'string' ? response : response.text();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/ts/metadata/encapsulation.ts region='longform'}\n *\n * @publicApi\n */\nvar ViewEncapsulation;\n(function (ViewEncapsulation) {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n     * selectors.\n     *\n     * This is the default option.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    /**\n     * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using the deprecated [Shadow DOM\n     * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n    /**\n     * Use Shadow DOM to encapsulate styles.\n     *\n     * For the DOM this means using modern [Shadow\n     * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n})(ViewEncapsulation || (ViewEncapsulation = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngDevModeResetPerfCounters() {\n    var newCounters = {\n        firstTemplatePass: 0,\n        tNode: 0,\n        tView: 0,\n        rendererCreateTextNode: 0,\n        rendererSetText: 0,\n        rendererCreateElement: 0,\n        rendererAddEventListener: 0,\n        rendererSetAttribute: 0,\n        rendererRemoveAttribute: 0,\n        rendererSetProperty: 0,\n        rendererSetClassName: 0,\n        rendererAddClass: 0,\n        rendererRemoveClass: 0,\n        rendererSetStyle: 0,\n        rendererRemoveStyle: 0,\n        rendererDestroy: 0,\n        rendererDestroyNode: 0,\n        rendererMoveNode: 0,\n        rendererRemoveNode: 0,\n        rendererCreateComment: 0,\n    };\n    // NOTE: Under Ivy we may have both window & global defined in the Node\n    //    environment since ensureDocument() in render3.ts sets global.window.\n    if (typeof window != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        window['ngDevMode'] = newCounters;\n    }\n    if (typeof global != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        global['ngDevMode'] = newCounters;\n    }\n    if (typeof self != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        self['ngDevMode'] = newCounters;\n    }\n    return newCounters;\n}\n/**\n * This checks to see if the `ngDevMode` has been set. If yes,\n * than we honor it, otherwise we default to dev mode with additional checks.\n *\n * The idea is that unless we are doing production build where we explicitly\n * set `ngDevMode == false` we should be helping the developer by providing\n * as much early warning and errors as possible.\n */\nif (typeof ngDevMode === 'undefined' || ngDevMode) {\n    ngDevModeResetPerfCounters();\n}\n\n/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n/**\n * This file contains reuseable \"empty\" symbols that can be used as default return values\n * in different parts of the rendering code. Because the same symbols are returned, this\n * allows for identity checks against these values to be consistently used by the framework\n * code.\n */\nvar EMPTY_OBJ = {};\nvar EMPTY_ARRAY = [];\n// freezing the values prevents any code from accidentally inserting new values in\nif (typeof ngDevMode !== 'undefined' && ngDevMode) {\n    Object.freeze(EMPTY_OBJ);\n    Object.freeze(EMPTY_ARRAY);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _renderCompCount = 0;\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n */\nfunction defineComponent(componentDefinition) {\n    var type = componentDefinition.type;\n    var typePrototype = type.prototype;\n    var declaredInputs = {};\n    var def = {\n        type: type,\n        providersResolver: null,\n        consts: componentDefinition.consts,\n        vars: componentDefinition.vars,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || null,\n        hostBindings: componentDefinition.hostBindings || null,\n        contentQueries: componentDefinition.contentQueries || null,\n        contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n        attributes: componentDefinition.attributes || null,\n        declaredInputs: declaredInputs,\n        inputs: null,\n        outputs: null,\n        exportAs: componentDefinition.exportAs || null,\n        onInit: typePrototype.ngOnInit || null,\n        doCheck: typePrototype.ngDoCheck || null,\n        afterContentInit: typePrototype.ngAfterContentInit || null,\n        afterContentChecked: typePrototype.ngAfterContentChecked || null,\n        afterViewInit: typePrototype.ngAfterViewInit || null,\n        afterViewChecked: typePrototype.ngAfterViewChecked || null,\n        onDestroy: typePrototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === ChangeDetectionStrategy.OnPush,\n        directiveDefs: null,\n        pipeDefs: null,\n        selectors: componentDefinition.selectors,\n        viewQuery: componentDefinition.viewQuery || null,\n        features: componentDefinition.features || null,\n        data: componentDefinition.data || {},\n        // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n        // next line. Also `None` should be 0 not 2.\n        encapsulation: componentDefinition.encapsulation || ViewEncapsulation.Emulated,\n        id: 'c',\n        styles: componentDefinition.styles || EMPTY_ARRAY,\n        _: null,\n    };\n    def._ = noSideEffects(function () {\n        var directiveTypes = componentDefinition.directives;\n        var feature = componentDefinition.features;\n        var pipeTypes = componentDefinition.pipes;\n        def.id += _renderCompCount++;\n        def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n            def.outputs = invertObject(componentDefinition.outputs),\n            feature && feature.forEach(function (fn) { return fn(def); });\n        def.directiveDefs = directiveTypes ?\n            function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef); } :\n            null;\n        def.pipeDefs = pipeTypes ?\n            function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n            null;\n    });\n    return def;\n}\nfunction extractDirectiveDef(type) {\n    var def = getComponentDef(type) || getDirectiveDef(type);\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n    }\n    return def;\n}\nfunction extractPipeDef(type) {\n    var def = getPipeDef(type);\n    if (ngDevMode && !def) {\n        throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n    }\n    return def;\n}\nfunction defineNgModule(def) {\n    var res = {\n        type: def.type,\n        bootstrap: def.bootstrap || EMPTY_ARRAY,\n        declarations: def.declarations || EMPTY_ARRAY,\n        imports: def.imports || EMPTY_ARRAY,\n        exports: def.exports || EMPTY_ARRAY,\n        transitiveCompileScopes: null,\n    };\n    return res;\n}\n/**\n * Inverts an inputs or outputs lookup such that the keys, which were the\n * minified keys, are part of the values, and the values are parsed so that\n * the publicName of the property is the new key\n *\n * e.g. for\n *\n * ```\n * class Comp {\n *   @Input()\n *   propName1: string;\n *\n *   @Input('publicName2')\n *   declaredPropName2: number;\n * }\n * ```\n *\n * will be serialized as\n *\n * ```\n * {\n *   propName1: 'propName1',\n *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n * }\n * ```\n *\n * which is than translated by the minifier as:\n *\n * ```\n * {\n *   minifiedPropName1: 'propName1',\n *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n * }\n * ```\n *\n * becomes: (public name => minifiedName)\n *\n * ```\n * {\n *  'propName1': 'minifiedPropName1',\n *  'publicName2': 'minifiedPropName2',\n * }\n * ```\n *\n * Optionally the function can take `secondary` which will result in: (public name => declared name)\n *\n * ```\n * {\n *  'propName1': 'propName1',\n *  'publicName2': 'declaredPropName2',\n * }\n * ```\n *\n\n */\nfunction invertObject(obj, secondary) {\n    if (obj == null)\n        return EMPTY_OBJ;\n    var newLookup = {};\n    for (var minifiedKey in obj) {\n        if (obj.hasOwnProperty(minifiedKey)) {\n            var publicName = obj[minifiedKey];\n            var declaredName = publicName;\n            if (Array.isArray(publicName)) {\n                declaredName = publicName[1];\n                publicName = publicName[0];\n            }\n            newLookup[publicName] = minifiedKey;\n            if (secondary) {\n                (secondary[publicName] = declaredName);\n            }\n        }\n    }\n    return newLookup;\n}\n/**\n * Create a base definition\n *\n * # Example\n * ```\n * class ShouldBeInherited {\n *   static ngBaseDef = defineBase({\n *      ...\n *   })\n * }\n * @param baseDefinition The base definition parameters\n */\nfunction defineBase(baseDefinition) {\n    var declaredInputs = {};\n    return {\n        inputs: invertObject(baseDefinition.inputs, declaredInputs),\n        declaredInputs: declaredInputs,\n        outputs: invertObject(baseDefinition.outputs),\n    };\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nvar defineDirective = defineComponent;\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n */\nfunction definePipe(pipeDef) {\n    return {\n        name: pipeDef.name,\n        factory: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    };\n}\n/**\n * The following getter methods retrieve the definition form the type. Currently the retrieval\n * honors inheritance, but in the future we may change the rule to require that definitions are\n * explicit. This would require some sort of migration strategy.\n */\nfunction getComponentDef(type) {\n    return type[NG_COMPONENT_DEF] || null;\n}\nfunction getDirectiveDef(type) {\n    return type[NG_DIRECTIVE_DEF] || null;\n}\nfunction getPipeDef(type) {\n    return type[NG_PIPE_DEF] || null;\n}\nfunction getNgModuleDef(type, throwNotFound) {\n    var ngModuleDef = type[NG_MODULE_DEF] || null;\n    if (!ngModuleDef && throwNotFound === true) {\n        throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n    }\n    return ngModuleDef;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\nfunction assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\nfunction assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\nfunction assertComponentType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n    if (!getComponentDef(actual)) {\n        throwError(msg);\n    }\n}\nfunction assertNgModuleType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n    if (!getNgModuleDef(actual)) {\n        throwError(msg);\n    }\n}\nfunction throwError(msg) {\n    // tslint:disable-next-line\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\nfunction assertDomNode(node) {\n    assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n}\nfunction assertPreviousIsParent(isParent) {\n    assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n}\nfunction assertHasParent(tNode) {\n    assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n}\nfunction assertDataInRange(arr, index) {\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Below are constants for LView indices to help us look up LView members\n// without having to remember the specific indices.\n// Uglify will inline these when minifying so there shouldn't be a cost.\nvar TVIEW = 0;\nvar FLAGS = 1;\nvar PARENT = 2;\nvar NEXT = 3;\nvar QUERIES = 4;\nvar HOST = 5;\nvar HOST_NODE = 6; // Rename to `T_HOST`?\nvar BINDING_INDEX = 7;\nvar CLEANUP = 8;\nvar CONTEXT = 9;\nvar INJECTOR = 10;\nvar RENDERER_FACTORY = 11;\nvar RENDERER = 12;\nvar SANITIZER = 13;\nvar TAIL = 14;\nvar CONTAINER_INDEX = 15;\nvar CONTENT_QUERIES = 16;\nvar DECLARATION_VIEW = 17;\n/** Size of LView's header. Necessary to adjust for it when setting slots.  */\nvar HEADER_OFFSET = 18;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n */\nvar ACTIVE_INDEX = 0;\nvar VIEWS = 1;\n// PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n// As we already have these constants in LView, we don't need to re-create them.\nvar NATIVE = 6;\nvar RENDER_PARENT = 7;\n// Because interfaces in TS/JS cannot be instanceof-checked this means that we\n// need to rely on predictable characteristics of data-structures to check if they\n// are what we expect for them to be. The `LContainer` interface code below has a\n// fixed length and the constant value below references that. Using the length value\n// below we can predictably gaurantee that we are dealing with an `LContainer` array.\n// This value MUST be kept up to date with the length of the `LContainer` array\n// interface below so that runtime type checking can work.\nvar LCONTAINER_LENGTH = 8;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This property will be monkey-patched on elements, components and directives\n */\nvar MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TNODE = 8;\nvar PARENT_INJECTOR = 8;\nvar INJECTOR_BLOOM_PARENT_SIZE = 9;\nvar NO_PARENT_INJECTOR = -1;\n/**\n * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n * `TView.data`. This allows us to store information about the current node's tokens (which\n * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n * shared, so they live in `LView`).\n *\n * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n * determines whether a directive is available on the associated node or not. This prevents us\n * from searching the directives array at this level unless it's probable the directive is in it.\n *\n * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n *\n * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n * will differ based on where it is flattened into the main array, so it's not possible to know\n * the indices ahead of time and save their types here. The interfaces are still included here\n * for documentation purposes.\n *\n * export interface LInjector extends Array<any> {\n *\n *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Cumulative bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Cumulative bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Cumulative bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Cumulative bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Cumulative bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Cumulative bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Cumulative bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // We need to store a reference to the injector's parent so DI can keep looking up\n *    // the injector tree until it finds the dependency it's looking for.\n *    [PARENT_INJECTOR]: number;\n * }\n *\n * export interface TInjector extends Array<any> {\n *\n *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Shared node bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Shared node bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Shared node bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Shared node bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Shared node bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Shared node bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Shared node bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // Necessary to find directive indices for a particular node.\n *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n *  }\n */\n/**\n* Factory for creating instances of injectors in the NodeInjector.\n*\n* This factory is complicated by the fact that it can resolve `multi` factories as well.\n*\n* NOTE: Some of the fields are optional which means that this class has two hidden classes.\n* - One without `multi` support (most common)\n* - One with `multi` values, (rare).\n*\n* Since VMs can cache up to 4 inline hidden classes this is OK.\n*\n* - Single factory: Only `resolving` and `factory` is defined.\n* - `providers` factory: `componentProviders` is a number and `index = -1`.\n* - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n*/\nvar NodeInjectorFactory = /** @class */ (function () {\n    function NodeInjectorFactory(\n    /**\n     * Factory to invoke in order to create a new instance.\n     */\n    factory, \n    /**\n     * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n     */\n    isViewProvider, injectImplementation) {\n        this.factory = factory;\n        /**\n         * Marker set to true during factory invocation to see if we get into recursive loop.\n         * Recursive loop causes an error to be displayed.\n         */\n        this.resolving = false;\n        this.canSeeViewProviders = isViewProvider;\n        this.injectImpl = injectImplementation;\n    }\n    return NodeInjectorFactory;\n}());\nvar FactoryPrototype = NodeInjectorFactory.prototype;\nfunction isFactory(obj) {\n    // See: https://jsperf.com/instanceof-vs-getprototypeof\n    return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns whether the values are different from a change detection stand point.\n *\n * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n */\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    if (typeof value == 'object' && typeof value.type == 'function')\n        return value.type.name || value.type;\n    return '' + value;\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n */\nfunction flatten(list) {\n    var result = [];\n    var i = 0;\n    while (i < list.length) {\n        var item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n/** Retrieves a value from any `LView` or `TData`. */\nfunction loadInternal(view, index) {\n    ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n    return view[index + HEADER_OFFSET];\n}\n/**\n * Takes the value of a slot in `LView` and returns the element node.\n *\n * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n * it might be wrapped in a styling context. Or if that node has a directive that injects\n * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n * it will be wrapped in LView. It could even have all three, so we keep looping\n * until we find something that isn't an array.\n *\n * @param value The initial value in `LView`\n */\nfunction readElementValue(value) {\n    while (Array.isArray(value)) {\n        value = value[HOST];\n    }\n    return value;\n}\n/**\n * Retrieves an element value from the provided `viewData`, by unwrapping\n * from any containers, component views, or style contexts.\n */\nfunction getNativeByIndex(index, lView) {\n    return readElementValue(lView[index + HEADER_OFFSET]);\n}\nfunction getNativeByTNode(tNode, hostView) {\n    return readElementValue(hostView[tNode.index]);\n}\nfunction getTNode(index, view) {\n    ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n    ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n    return view[TVIEW].data[index + HEADER_OFFSET];\n}\nfunction getComponentViewByIndex(nodeIndex, hostView) {\n    // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n    var slotValue = hostView[nodeIndex];\n    return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n}\nfunction isContentQueryHost(tNode) {\n    return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n}\nfunction isComponent(tNode) {\n    return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n}\nfunction isComponentDef(def) {\n    return def.template !== null;\n}\nfunction isLContainer(value) {\n    // Styling contexts are also arrays, but their first index contains an element node\n    return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n}\nfunction isRootView(target) {\n    return (target[FLAGS] & 128 /* IsRoot */) !== 0;\n}\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootView(target) {\n    ngDevMode && assertDefined(target, 'component');\n    var lView = Array.isArray(target) ? target : readPatchedLView(target);\n    while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n        lView = lView[PARENT];\n    }\n    return lView;\n}\nfunction getRootContext(viewOrComponent) {\n    var rootView = getRootView(viewOrComponent);\n    ngDevMode &&\n        assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n    return rootView[CONTEXT];\n}\n/**\n * Returns the monkey-patch value data present on the target (which could be\n * a component, directive or a DOM node).\n */\nfunction readPatchedData(target) {\n    ngDevMode && assertDefined(target, 'Target expected');\n    return target[MONKEY_PATCH_KEY_NAME];\n}\nfunction readPatchedLView(target) {\n    var value = readPatchedData(target);\n    if (value) {\n        return Array.isArray(value) ? value : value.lView;\n    }\n    return null;\n}\nfunction hasParentInjector(parentLocation) {\n    return parentLocation !== NO_PARENT_INJECTOR;\n}\nfunction getParentInjectorIndex(parentLocation) {\n    return parentLocation & 32767 /* InjectorIndexMask */;\n}\nfunction getParentInjectorViewOffset(parentLocation) {\n    return parentLocation >> 16 /* ViewOffsetShift */;\n}\n/**\n * Unwraps a parent injector location number to find the view offset from the current injector,\n * then walks up the declaration view tree until the view is found that contains the parent\n * injector.\n *\n * @param location The location of the parent injector, which contains the view offset\n * @param startView The LView instance from which to start walking up the view tree\n * @returns The LView instance that contains the parent injector\n */\nfunction getParentInjectorView(location, startView) {\n    var viewOffset = getParentInjectorViewOffset(location);\n    var parentView = startView;\n    // For most cases, the parent injector can be found on the host node (e.g. for component\n    // or container), but we must keep the loop here to support the rarer case of deeply nested\n    // <ng-template> tags or inline views, where the parent injector might live many views\n    // above the child injector.\n    while (viewOffset > 0) {\n        parentView = parentView[DECLARATION_VIEW];\n        viewOffset--;\n    }\n    return parentView;\n}\n/**\n * Unwraps a parent injector location number to find the view offset from the current injector,\n * then walks up the declaration view tree until the TNode of the parent injector is found.\n *\n * @param location The location of the parent injector, which contains the view offset\n * @param startView The LView instance from which to start walking up the view tree\n * @param startTNode The TNode instance of the starting element\n * @returns The TNode of the parent injector\n */\nfunction getParentInjectorTNode(location, startView, startTNode) {\n    if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n        // view offset is 0\n        var injectorIndex = startTNode.parent.injectorIndex;\n        var parentTNode_1 = startTNode.parent;\n        while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n            parentTNode_1 = parentTNode_1.parent;\n        }\n        return parentTNode_1;\n    }\n    var viewOffset = getParentInjectorViewOffset(location);\n    // view offset is 1\n    var parentView = startView;\n    var parentTNode = startView[HOST_NODE];\n    // view offset is superior to 1\n    while (viewOffset > 1) {\n        parentView = parentView[DECLARATION_VIEW];\n        parentTNode = parentView[HOST_NODE];\n        viewOffset--;\n    }\n    return parentTNode;\n}\nvar defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n    setTimeout // everything else\n).bind(_global);\n/**\n * Equivalent to ES6 spread, add each item to an array.\n *\n * @param items The items to add\n * @param arr The array to which you want to add the items\n */\nfunction addAllToArray(items, arr) {\n    for (var i = 0; i < items.length; i++) {\n        arr.push(items[i]);\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param lView LView for which we want a host element node\n * @returns The host node\n */\nfunction findComponentView(lView) {\n    var rootTNode = lView[HOST_NODE];\n    while (rootTNode && rootTNode.type === 2 /* View */) {\n        ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n        lView = lView[DECLARATION_VIEW];\n        rootTNode = lView[HOST_NODE];\n    }\n    return lView;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar R3ResolvedDependencyType;\n(function (R3ResolvedDependencyType) {\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n    R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n})(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getCompilerFacade() {\n    var globalNg = _global['ng'];\n    if (!globalNg || !globalNg.ÉµcompilerFacade) {\n        throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n            \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n            \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n            \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n    }\n    return globalNg.ÉµcompilerFacade;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Self = makeParamDecorator('Self');\n/**\n * SkipSelf decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection flags for DI.\n *\n * @publicApi\n */\nvar InjectFlags;\n(function (InjectFlags) {\n    // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n    InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n    /**\n     * Specifies that an injector should retrieve a dependency from any injector until reaching the\n     * host element of the current component. (Only used with Element Injector)\n     */\n    InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n    /** Don't descend into ancestors of the node requesting injection. */\n    InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n    /** Skip the node that is requesting injection. */\n    InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n    /** Inject `defaultValue` instead if token not found. */\n    InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n})(InjectFlags || (InjectFlags = {}));\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nvar _currentInjector = undefined;\nfunction setCurrentInjector(injector) {\n    var former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\n/**\n * Current implementation of inject.\n *\n * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n * way for two reasons:\n *  1. `Injector` should not depend on ivy logic.\n *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n */\nvar _injectImplementation;\n/**\n * Sets the current inject implementation.\n */\nfunction setInjectImplementation(impl) {\n    var previous = _injectImplementation;\n    _injectImplementation = impl;\n    return previous;\n}\nfunction injectInjectorOnly(token, flags) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    if (_currentInjector === undefined) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    else if (_currentInjector === null) {\n        return injectRootLimpMode(token, undefined, flags);\n    }\n    else {\n        return _currentInjector.get(token, flags & InjectFlags.Optional ? null : undefined, flags);\n    }\n}\nfunction inject(token, flags) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    return (_injectImplementation || injectInjectorOnly)(token, flags);\n}\n/**\n * Injects `root` tokens in limp mode.\n *\n * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n * `InjectableDef`.\n */\nfunction injectRootLimpMode(token, notFoundValue, flags) {\n    var injectableDef = getInjectableDef(token);\n    if (injectableDef && injectableDef.providedIn == 'root') {\n        return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n            injectableDef.value;\n    }\n    if (flags & InjectFlags.Optional)\n        return null;\n    if (notFoundValue !== undefined)\n        return notFoundValue;\n    throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n}\nfunction injectArgs(types) {\n    var args = [];\n    for (var i = 0; i < types.length; i++) {\n        var arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            var type = undefined;\n            var flags = InjectFlags.Default;\n            for (var j = 0; j < arg.length; j++) {\n                var meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                    flags |= InjectFlags.Optional;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                    flags |= InjectFlags.SkipSelf;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                    flags |= InjectFlags.Self;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(type, flags));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertNodeType(tNode, type) {\n    assertDefined(tNode, 'should be called with a TNode');\n    assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n}\nfunction assertNodeOfPossibleTypes(tNode) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertDefined(tNode, 'should be called with a TNode');\n    var found = types.some(function (type) { return tNode.type === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n}\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    if (type == 4 /* ElementContainer */)\n        return 'ElementContainer';\n    return '<unknown>';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param index The index of the directive in LView\n * @param hooks The static hooks map on the directive def\n * @param tView The current TView\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n */\nfunction queueLifecycleHooks(tView, tNode) {\n    if (tView.firstTemplatePass) {\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var def = tView.data[i];\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/** Queues afterContentInit and afterContentChecked hooks on TView */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/** Queues afterViewInit and afterViewChecked hooks on TView */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/** Queues onDestroy hooks on TView */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param currentView The current view\n */\nfunction executeInitHooks(currentView, tView, checkNoChangesMode) {\n    if (!checkNoChangesMode && currentView[FLAGS] & 32 /* RunInit */) {\n        executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\n        currentView[FLAGS] &= ~32 /* RunInit */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param currentView The current view\n */\nfunction executeHooks(currentView, allHooks, checkHooks, checkNoChangesMode) {\n    if (checkNoChangesMode)\n        return;\n    var hooksToCall = currentView[FLAGS] & 2 /* FirstLViewPass */ ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(currentView, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * the first LView pass.\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n */\nfunction callHooks(currentView, arr) {\n    for (var i = 0; i < arr.length; i += 2) {\n        arr[i + 1].call(currentView[arr[i]]);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store the element depth count. This is used to identify the root elements of the template\n * so that we can than attach `LView` to only those elements.\n */\nvar elementDepthCount;\nfunction getElementDepthCount() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return elementDepthCount;\n}\nfunction increaseElementDepthCount() {\n    elementDepthCount++;\n}\nfunction decreaseElementDepthCount() {\n    elementDepthCount--;\n}\nvar currentDirectiveDef = null;\nfunction getCurrentDirectiveDef() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return currentDirectiveDef;\n}\nfunction setCurrentDirectiveDef(def) {\n    currentDirectiveDef = def;\n}\n/**\n * Stores whether directives should be matched to elements.\n *\n * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n * directives on children of that element.\n *\n * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n * </div>\n * ```\n */\nvar bindingsEnabled;\nfunction getBindingsEnabled() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return bindingsEnabled;\n}\n/**\n * Enables directive matching on elements.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- disabledBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- enableBindings() -->\n * </div>\n * ```\n */\nfunction enableBindings() {\n    bindingsEnabled = true;\n}\n/**\n * Disables directive matching on element.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- disabledBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- enableBindings() -->\n * </div>\n * ```\n */\nfunction disableBindings() {\n    bindingsEnabled = false;\n}\nfunction getLView() {\n    return lView;\n}\n/**\n * Restores `contextViewData` to the given OpaqueViewState instance.\n *\n * Used in conjunction with the getCurrentView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n *\n * @param viewToRestore The OpaqueViewState instance to restore.\n */\nfunction restoreView(viewToRestore) {\n    contextLView = viewToRestore;\n}\n/** Used to set the parent property when nodes are created and track query results. */\nvar previousOrParentTNode;\nfunction getPreviousOrParentTNode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return previousOrParentTNode;\n}\nfunction setPreviousOrParentTNode(tNode) {\n    previousOrParentTNode = tNode;\n}\nfunction setTNodeAndViewData(tNode, view) {\n    previousOrParentTNode = tNode;\n    lView = view;\n}\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentTNode` points to a parent node.\n *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n */\nvar isParent;\nfunction getIsParent() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return isParent;\n}\nfunction setIsParent(value) {\n    isParent = value;\n}\n/**\n * Query instructions can ask for \"current queries\" in 2 different cases:\n * - when creating view queries (at the root of a component view, before any node is created - in\n * this case currentQueries points to view queries)\n * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n * create content queries).\n */\nfunction getOrCreateCurrentQueries(QueryType) {\n    var lView = getLView();\n    var currentQueries = lView[QUERIES];\n    // if this is the first content query on a node, any existing LQueries needs to be cloned\n    // in subsequent template passes, the cloning occurs before directive instantiation.\n    if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n        !isContentQueryHost(previousOrParentTNode)) {\n        currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n        previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n    }\n    return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n}\n/** Checks whether a given view is in creation mode */\nfunction isCreationMode(view) {\n    if (view === void 0) { view = lView; }\n    return (view[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n}\n/**\n * State of the current view being processed.\n *\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar lView;\n/**\n * The last viewData retrieved by nextContext().\n * Allows building nextContext() and reference() calls.\n *\n * e.g. const inner = x().$implicit; const outer = x().$implicit;\n */\nvar contextLView = null;\nfunction getContextLView() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return contextLView;\n}\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nvar checkNoChangesMode = false;\nfunction getCheckNoChangesMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return checkNoChangesMode;\n}\nfunction setCheckNoChangesMode(mode) {\n    checkNoChangesMode = mode;\n}\n/** Whether or not this is the first time the current view has been processed. */\nvar firstTemplatePass = true;\nfunction getFirstTemplatePass() {\n    return firstTemplatePass;\n}\nfunction setFirstTemplatePass(value) {\n    firstTemplatePass = value;\n}\n/**\n * The root index from which pure function instructions should calculate their binding\n * indices. In component views, this is TView.bindingStartIndex. In a host binding\n * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n */\nvar bindingRootIndex = -1;\n// top level variables should not be exported for performance reasons (PERF_NOTES.md)\nfunction getBindingRoot() {\n    return bindingRootIndex;\n}\nfunction setBindingRoot(value) {\n    bindingRootIndex = value;\n}\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nfunction enterView(newView, hostTNode) {\n    var oldView = lView;\n    if (newView) {\n        var tView = newView[TVIEW];\n        firstTemplatePass = tView.firstTemplatePass;\n        bindingRootIndex = tView.bindingStartIndex;\n    }\n    previousOrParentTNode = hostTNode;\n    isParent = true;\n    lView = contextLView = newView;\n    return oldView;\n}\nfunction nextContextImpl(level) {\n    if (level === void 0) { level = 1; }\n    contextLView = walkUpViews(level, contextLView);\n    return contextLView[CONTEXT];\n}\nfunction walkUpViews(nestingLevel, currentView) {\n    while (nestingLevel > 0) {\n        ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n        currentView = currentView[DECLARATION_VIEW];\n        nestingLevel--;\n    }\n    return currentView;\n}\n/**\n * Resets the application state.\n */\nfunction resetComponentState() {\n    isParent = false;\n    previousOrParentTNode = null;\n    elementDepthCount = 0;\n    bindingsEnabled = true;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param newView New state to become active\n */\nfunction leaveView(newView) {\n    var tView = lView[TVIEW];\n    if (isCreationMode(lView)) {\n        lView[FLAGS] &= ~1 /* CreationMode */;\n    }\n    else {\n        executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\n        // Views are clean and in update mode after being checked, so these bits are cleared\n        lView[FLAGS] &= ~(8 /* Dirty */ | 2 /* FirstLViewPass */);\n        lView[FLAGS] |= 32 /* RunInit */;\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    enterView(newView, null);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines if the call to `inject` should include `viewProviders` in its resolution.\n *\n * This is set to true when we try to instantiate a component. This value is reset in\n * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n * instantiated. This is done so that if we are injecting a token which was declared outside of\n * `viewProviders` we don't accidentally pull `viewProviders` in.\n *\n * Example:\n *\n * ```\n * @Injectable()\n * class MyService {\n *   constructor(public value: String) {}\n * }\n *\n * @Component({\n *   providers: [\n *     MyService,\n *     {provide: String, value: 'providers' }\n *   ]\n *   viewProviders: [\n *     {provide: String, value: 'viewProviders'}\n *   ]\n * })\n * class MyComponent {\n *   constructor(myService: MyService, value: String) {\n *     // We expect that Component can see into `viewProviders`.\n *     expect(value).toEqual('viewProviders');\n *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n *     expect(myService.value).toEqual('providers');\n *   }\n * }\n *\n * ```\n */\nvar includeViewProviders = true;\nfunction setIncludeViewProviders(v) {\n    var oldValue = includeViewProviders;\n    includeViewProviders = v;\n    return oldValue;\n}\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nvar BLOOM_SIZE = 256;\nvar BLOOM_MASK = BLOOM_SIZE - 1;\n/** Counter used to generate unique IDs for directives. */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injectorIndex The index of the node injector where this token should be registered\n * @param tView The TView for the injector's bloom filters\n * @param type The directive token to register\n */\nfunction bloomAdd(injectorIndex, tView, type) {\n    ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n    var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = type[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n    var bloomBit = id & BLOOM_MASK;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    var b7 = bloomBit & 0x80;\n    var b6 = bloomBit & 0x40;\n    var b5 = bloomBit & 0x20;\n    var tData = tView.data;\n    if (b7) {\n        b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n            (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n    }\n    else {\n        b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n            (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n    }\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param tNode for which an injector should be retrieved / created.\n * @param hostView View where the node is stored\n * @returns Node injector\n */\nfunction getOrCreateNodeInjectorForNode(tNode, hostView) {\n    var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n    if (existingInjectorIndex !== -1) {\n        return existingInjectorIndex;\n    }\n    var tView = hostView[TVIEW];\n    if (tView.firstTemplatePass) {\n        tNode.injectorIndex = hostView.length;\n        insertBloom(tView.data, tNode); // foundation for node bloom\n        insertBloom(hostView, null); // foundation for cumulative bloom\n        insertBloom(tView.blueprint, null);\n        ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n    }\n    var parentLoc = getParentInjectorLocation(tNode, hostView);\n    var parentIndex = getParentInjectorIndex(parentLoc);\n    var parentLView = getParentInjectorView(parentLoc, hostView);\n    var injectorIndex = tNode.injectorIndex;\n    // If a parent injector can't be found, its location is set to -1.\n    // In that case, we don't need to set up a cumulative bloom\n    if (hasParentInjector(parentLoc)) {\n        var parentData = parentLView[TVIEW].data;\n        // Creates a cumulative bloom filter that merges the parent's bloom filter\n        // and its own cumulative bloom (which contains tokens for all ancestors)\n        for (var i = 0; i < 8; i++) {\n            hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n        }\n    }\n    hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n    return injectorIndex;\n}\nfunction insertBloom(arr, footer) {\n    arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n}\nfunction getInjectorIndex(tNode, hostView) {\n    if (tNode.injectorIndex === -1 ||\n        // If the injector index is the same as its parent's injector index, then the index has been\n        // copied down from the parent node. No injector has been created yet on this node.\n        (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n        // After the first template pass, the injector index might exist but the parent values\n        // might not have been calculated yet for this instance\n        hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n        return -1;\n    }\n    else {\n        return tNode.injectorIndex;\n    }\n}\n/**\n * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n * parent injector initially.\n *\n * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n */\nfunction getParentInjectorLocation(tNode, view) {\n    if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n        return tNode.parent.injectorIndex; // ViewOffset is 0\n    }\n    // For most cases, the parent injector index can be found on the host node (e.g. for component\n    // or container), so this loop will be skipped, but we must keep the loop here to support\n    // the rarer case of deeply nested <ng-template> tags or inline views.\n    var hostTNode = view[HOST_NODE];\n    var viewOffset = 1;\n    while (hostTNode && hostTNode.injectorIndex === -1) {\n        view = view[DECLARATION_VIEW];\n        hostTNode = view ? view[HOST_NODE] : null;\n        viewOffset++;\n    }\n    return hostTNode ?\n        hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n        -1;\n}\n/**\n * Makes a type or an injection token public to the DI system by adding it to an\n * injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param token The type or the injection token to be made public\n */\nfunction diPublicInInjector(injectorIndex, view, token) {\n    bloomAdd(injectorIndex, view[TVIEW], token);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @publicApi\n */\nfunction injectAttributeImpl(tNode, attrNameToInject) {\n    ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n    ngDevMode && assertDefined(tNode, 'expecting tNode');\n    var attrs = tNode.attrs;\n    if (attrs) {\n        for (var i = 0; i < attrs.length; i = i + 2) {\n            var attrName = attrs[i];\n            if (attrName === 3 /* SelectOnly */)\n                break;\n            if (attrName == attrNameToInject) {\n                return attrs[i + 1];\n            }\n        }\n    }\n    return null;\n}\n/**\n * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n *\n * Look for the injector providing the token by walking up the node injector tree and then\n * the module injector tree.\n *\n * @param tNode The Node where the search for the injector should start\n * @param lView The `LView` that contains the `tNode`\n * @param token The token to look for\n * @param flags Injection flags\n * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n */\nfunction getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    if (tNode) {\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lView);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & InjectFlags.Optional)) {\n                    throw new Error(\"No provider for \" + stringify$1(token) + \"!\");\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element\n            // injector tree. This is used to know if viewProviders can be accessed on the current\n            // injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lView);\n            var parentLocation = NO_PARENT_INJECTOR;\n            var hostTElementNode = flags & InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n            // If we should skip this injector, or if there is no injector on this node, start by\n            // searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                    lView[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, false)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lView[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lView[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                    bloomHasToken(bloomHash, injectorIndex, lView)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n    }\n    if (flags & InjectFlags.Optional && notFoundValue === undefined) {\n        // This must be set or the NullInjector will throw for optional deps\n        notFoundValue = null;\n    }\n    if ((flags & (InjectFlags.Self | InjectFlags.Host)) === 0) {\n        var moduleInjector = lView[INJECTOR];\n        if (moduleInjector) {\n            return moduleInjector.get(token, notFoundValue, flags & InjectFlags.Optional);\n        }\n        else {\n            return injectRootLimpMode(token, notFoundValue, flags & InjectFlags.Optional);\n        }\n    }\n    if (flags & InjectFlags.Optional) {\n        return notFoundValue;\n    }\n    else {\n        throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n    }\n}\nvar NOT_FOUND = {};\nfunction searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n    var currentTView = lView[TVIEW];\n    var tNode = currentTView.data[injectorIndex + TNODE];\n    // First, we need to determine if view providers can be accessed by the starting element.\n    // There are two possibities\n    var canAccessViewProviders = previousTView == null ?\n        // 1) This is the first invocation `previousTView == null` which means that we are at the\n        // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n        // to look into the ViewProviders is if:\n        // - we are on a component\n        // - AND the injector set `includeViewProviders` to true (implying that the token can see\n        // ViewProviders because it is the Component or a Service which itself was declared in\n        // ViewProviders)\n        (isComponent(tNode) && includeViewProviders) :\n        // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n        // In such a case we are only allowed to look into the ViewProviders if:\n        // - We just crossed from child View to Parent View `previousTView != currentTView`\n        // - AND the parent TNode is an Element.\n        // This means that we just came from the Component's View and therefore are allowed to see\n        // into the ViewProviders.\n        (previousTView != currentTView && (tNode.type === 3 /* Element */));\n    // This special case happens when there is a @host on the inject and when we are searching\n    // on the host element node.\n    var isHostSpecialCase = (flags & InjectFlags.Host) && hostTElementNode === tNode;\n    var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n    if (injectableIdx !== null) {\n        return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n    }\n    else {\n        return NOT_FOUND;\n    }\n}\n/**\n * Searches for the given token among the node's directives and providers.\n *\n * @param tNode TNode on which directives are present.\n * @param lView The view we are currently processing\n * @param token Provider token or type of a directive to look for.\n * @param canAccessViewProviders Whether view providers should be considered.\n * @param isHostSpecialCase Whether the host special case applies.\n * @returns Index of a found directive or provider, or null when none found.\n */\nfunction locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n    var tView = lView[TVIEW];\n    var nodeProviderIndexes = tNode.providerIndexes;\n    var tInjectables = tView.data;\n    var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n    var directivesStart = tNode.directiveStart;\n    var directiveEnd = tNode.directiveEnd;\n    var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n    var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n    // When the host special case applies, only the viewProviders and the component are visible\n    var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n    for (var i = startingIndex; i < endIndex; i++) {\n        var providerTokenOrDef = tInjectables[i];\n        if (i < directivesStart && token === providerTokenOrDef ||\n            i >= directivesStart && providerTokenOrDef.type === token) {\n            return i;\n        }\n    }\n    if (isHostSpecialCase) {\n        var dirDef = tInjectables[directivesStart];\n        if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n            return directivesStart;\n        }\n    }\n    return null;\n}\n/**\n* Retrieve or instantiate the injectable from the `lData` at particular `index`.\n*\n* This function checks to see if the value has already been instantiated and if so returns the\n* cached `injectable`. Otherwise if it detects that the value is still a factory it\n* instantiates the `injectable` and caches the value.\n*/\nfunction getNodeInjectable(tData, lData, index, tNode) {\n    var value = lData[index];\n    if (isFactory(value)) {\n        var factory = value;\n        if (factory.resolving) {\n            throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n        }\n        var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n        factory.resolving = true;\n        var previousInjectImplementation = void 0;\n        if (factory.injectImpl) {\n            previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n        }\n        var savePreviousOrParentTNode = getPreviousOrParentTNode();\n        var saveLView = getLView();\n        setTNodeAndViewData(tNode, lData);\n        try {\n            value = lData[index] = factory.factory(null, tData, lData, tNode);\n        }\n        finally {\n            if (factory.injectImpl)\n                setInjectImplementation(previousInjectImplementation);\n            setIncludeViewProviders(previousIncludeViewProviders);\n            factory.resolving = false;\n            setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n        }\n    }\n    return value;\n}\n/**\n * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n * the directive might be provided by the injector.\n *\n * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n * is returned as the node injector can not possibly provide that token.\n *\n * @param token the injection token\n * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n */\nfunction bloomHashBitOrFactory(token) {\n    ngDevMode && assertDefined(token, 'token must be defined');\n    if (typeof token === 'string') {\n        return token.charCodeAt(0) || 0;\n    }\n    var tokenId = token[NG_ELEMENT_ID];\n    return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n}\nfunction bloomHasToken(bloomHash, injectorIndex, injectorView) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomHash;\n    var b7 = bloomHash & 0x80;\n    var b6 = bloomHash & 0x40;\n    var b5 = bloomHash & 0x20;\n    // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n    // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n    // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n    var value;\n    if (b7) {\n        value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n            (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n    }\n    else {\n        value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n            (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n    }\n    // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n    // this injector is a potential match.\n    return !!(value & mask);\n}\n/** Returns true if flags prevent parent injector from being searched for tokens */\nfunction shouldSearchParent(flags, isFirstHostTNode) {\n    return !(flags & InjectFlags.Self) && !(flags & InjectFlags.Host && isFirstHostTNode);\n}\nfunction injectInjector() {\n    var tNode = getPreviousOrParentTNode();\n    return new NodeInjector(tNode, getLView());\n}\nvar NodeInjector = /** @class */ (function () {\n    function NodeInjector(_tNode, _lView) {\n        this._tNode = _tNode;\n        this._lView = _lView;\n    }\n    NodeInjector.prototype.get = function (token, notFoundValue) {\n        return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n    };\n    return NodeInjector;\n}());\nfunction getFactoryOf(type) {\n    var typeAny = type;\n    var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n        getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n    if (!def || def.factory === undefined) {\n        return null;\n    }\n    return def.factory;\n}\nfunction getInheritedFactory(type) {\n    var proto = Object.getPrototypeOf(type.prototype).constructor;\n    var factory = getFactoryOf(proto);\n    if (factory !== null) {\n        return factory;\n    }\n    else {\n        // There is no factory defined. Either this was improper usage of inheritance\n        // (no Angular decorator on the superclass) or there is no constructor at all\n        // in the inheritance chain. Since the two cases cannot be distinguished, the\n        // latter has to be assumed.\n        return function (t) { return new t(); };\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n *\n * This function will examine the provided DOM element, component, or directive instance\\'s\n * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n * value will be that of the newly created `LContext`.\n *\n * If the monkey-patched value is the `LView` instance then the context value for that\n * target will be created and the monkey-patch reference will be updated. Therefore when this\n * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n * directive\\'s monkey-patch values.\n *\n * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n * is found which contains a monkey-patch reference. When that occurs then the provided element\n * will be updated with a new context (which is then returned). If the monkey-patch value is not\n * detected for a component/directive instance then it will throw an error (all components and\n * directives should be automatically monkey-patched by ivy).\n *\n * @param target Component, Directive or DOM Node.\n */\nfunction getLContext(target) {\n    var mpValue = readPatchedData(target);\n    if (mpValue) {\n        // only when it's an array is it considered an LView instance\n        // ... otherwise it's an already constructed LContext instance\n        if (Array.isArray(mpValue)) {\n            var lView = mpValue;\n            var nodeIndex = void 0;\n            var component = undefined;\n            var directives = undefined;\n            if (isComponentInstance(target)) {\n                nodeIndex = findViaComponent(lView, target);\n                if (nodeIndex == -1) {\n                    throw new Error('The provided component was not found in the application');\n                }\n                component = target;\n            }\n            else if (isDirectiveInstance(target)) {\n                nodeIndex = findViaDirective(lView, target);\n                if (nodeIndex == -1) {\n                    throw new Error('The provided directive was not found in the application');\n                }\n                directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n            }\n            else {\n                nodeIndex = findViaNativeElement(lView, target);\n                if (nodeIndex == -1) {\n                    return null;\n                }\n            }\n            // the goal is not to fill the entire context full of data because the lookups\n            // are expensive. Instead, only the target data (the element, component, container, ICU\n            // expression or directive details) are filled into the context. If called multiple times\n            // with different target values then the missing target data will be filled in.\n            var native = readElementValue(lView[nodeIndex]);\n            var existingCtx = readPatchedData(native);\n            var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                existingCtx :\n                createLContext(lView, nodeIndex, native);\n            // only when the component has been discovered then update the monkey-patch\n            if (component && context.component === undefined) {\n                context.component = component;\n                attachPatchData(context.component, context);\n            }\n            // only when the directives have been discovered then update the monkey-patch\n            if (directives && context.directives === undefined) {\n                context.directives = directives;\n                for (var i = 0; i < directives.length; i++) {\n                    attachPatchData(directives[i], context);\n                }\n            }\n            attachPatchData(context.native, context);\n            mpValue = context;\n        }\n    }\n    else {\n        var rElement = target;\n        ngDevMode && assertDomNode(rElement);\n        // if the context is not found then we need to traverse upwards up the DOM\n        // to find the nearest element that has already been monkey patched with data\n        var parent_1 = rElement;\n        while (parent_1 = parent_1.parentNode) {\n            var parentContext = readPatchedData(parent_1);\n            if (parentContext) {\n                var lView = void 0;\n                if (Array.isArray(parentContext)) {\n                    lView = parentContext;\n                }\n                else {\n                    lView = parentContext.lView;\n                }\n                // the edge of the app was also reached here through another means\n                // (maybe because the DOM was changed manually).\n                if (!lView) {\n                    return null;\n                }\n                var index = findViaNativeElement(lView, rElement);\n                if (index >= 0) {\n                    var native = readElementValue(lView[index]);\n                    var context = createLContext(lView, index, native);\n                    attachPatchData(native, context);\n                    mpValue = context;\n                    break;\n                }\n            }\n        }\n    }\n    return mpValue || null;\n}\n/**\n * Creates an empty instance of a `LContext` context\n */\nfunction createLContext(lView, nodeIndex, native) {\n    return {\n        lView: lView,\n        nodeIndex: nodeIndex,\n        native: native,\n        component: undefined,\n        directives: undefined,\n        localRefs: undefined,\n    };\n}\n/**\n * Takes a component instance and returns the view for that component.\n *\n * @param componentInstance\n * @returns The component's view\n */\nfunction getComponentViewByInstance(componentInstance) {\n    var lView = readPatchedData(componentInstance);\n    var view;\n    if (Array.isArray(lView)) {\n        var nodeIndex = findViaComponent(lView, componentInstance);\n        view = getComponentViewByIndex(nodeIndex, lView);\n        var context = createLContext(lView, nodeIndex, view[HOST]);\n        context.component = componentInstance;\n        attachPatchData(componentInstance, context);\n        attachPatchData(context.native, context);\n    }\n    else {\n        var context = lView;\n        view = getComponentViewByIndex(context.nodeIndex, context.lView);\n    }\n    return view;\n}\n/**\n * Assigns the given data to the given target (which could be a component,\n * directive or DOM node instance) using monkey-patching.\n */\nfunction attachPatchData(target, data) {\n    target[MONKEY_PATCH_KEY_NAME] = data;\n}\nfunction isComponentInstance(instance) {\n    return instance && instance.constructor && instance.constructor.ngComponentDef;\n}\nfunction isDirectiveInstance(instance) {\n    return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n}\n/**\n * Locates the element within the given LView and returns the matching index\n */\nfunction findViaNativeElement(lView, target) {\n    var tNode = lView[TVIEW].firstChild;\n    while (tNode) {\n        var native = getNativeByTNode(tNode, lView);\n        if (native === target) {\n            return tNode.index;\n        }\n        tNode = traverseNextElement(tNode);\n    }\n    return -1;\n}\n/**\n * Locates the next tNode (child, sibling or parent).\n */\nfunction traverseNextElement(tNode) {\n    if (tNode.child) {\n        return tNode.child;\n    }\n    else if (tNode.next) {\n        return tNode.next;\n    }\n    else {\n        // Let's take the following template: <div><span>text</span></div><component/>\n        // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n        // in this case the parent `div`, so that we can find the component.\n        while (tNode.parent && !tNode.parent.next) {\n            tNode = tNode.parent;\n        }\n        return tNode.parent && tNode.parent.next;\n    }\n}\n/**\n * Locates the component within the given LView and returns the matching index\n */\nfunction findViaComponent(lView, componentInstance) {\n    var componentIndices = lView[TVIEW].components;\n    if (componentIndices) {\n        for (var i = 0; i < componentIndices.length; i++) {\n            var elementComponentIndex = componentIndices[i];\n            var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n            if (componentView[CONTEXT] === componentInstance) {\n                return elementComponentIndex;\n            }\n        }\n    }\n    else {\n        var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n        var rootComponent = rootComponentView[CONTEXT];\n        if (rootComponent === componentInstance) {\n            // we are dealing with the root element here therefore we know that the\n            // element is the very first element after the HEADER data in the lView\n            return HEADER_OFFSET;\n        }\n    }\n    return -1;\n}\n/**\n * Locates the directive within the given LView and returns the matching index\n */\nfunction findViaDirective(lView, directiveInstance) {\n    // if a directive is monkey patched then it will (by default)\n    // have a reference to the LView of the current view. The\n    // element bound to the directive being search lives somewhere\n    // in the view data. We loop through the nodes and check their\n    // list of directives for the instance.\n    var tNode = lView[TVIEW].firstChild;\n    while (tNode) {\n        var directiveIndexStart = tNode.directiveStart;\n        var directiveIndexEnd = tNode.directiveEnd;\n        for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n            if (lView[i] === directiveInstance) {\n                return tNode.index;\n            }\n        }\n        tNode = traverseNextElement(tNode);\n    }\n    return -1;\n}\n/**\n * Returns a list of directives extracted from the given view based on the\n * provided list of directive index values.\n *\n * @param nodeIndex The node index\n * @param lView The target view data\n * @param includeComponents Whether or not to include components in returned directives\n */\nfunction getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n    var tNode = lView[TVIEW].data[nodeIndex];\n    var directiveStartIndex = tNode.directiveStart;\n    if (directiveStartIndex == 0)\n        return EMPTY_ARRAY;\n    var directiveEndIndex = tNode.directiveEnd;\n    if (!includeComponents && tNode.flags & 1 /* isComponent */)\n        directiveStartIndex++;\n    return lView.slice(directiveStartIndex, directiveEndIndex);\n}\nfunction getComponentAtNodeIndex(nodeIndex, lView) {\n    var tNode = lView[TVIEW].data[nodeIndex];\n    var directiveStartIndex = tNode.directiveStart;\n    return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n}\n/**\n * Returns a map of local references (local reference name => element or directive instance) that\n * exist on a given element.\n */\nfunction discoverLocalRefs(lView, nodeIndex) {\n    var tNode = lView[TVIEW].data[nodeIndex];\n    if (tNode && tNode.localNames) {\n        var result = {};\n        for (var i = 0; i < tNode.localNames.length; i += 2) {\n            var localRefName = tNode.localNames[i];\n            var directiveIndex = tNode.localNames[i + 1];\n            result[localRefName] =\n                directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n        }\n        return result;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns the component instance associated with a given DOM host element.\n * Elements which don't represent components return `null`.\n *\n * @param element Host DOM element from which the component should be retrieved.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n * ```\n *\n * @publicApi\n */\nfunction getComponent(element) {\n    var context = loadLContextFromNode(element);\n    if (context.component === undefined) {\n        context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n    }\n    return context.component;\n}\n/**\n * Returns the component instance associated with a given DOM host element.\n * Elements which don't represent components return `null`.\n *\n * @param element Host DOM element from which the component should be retrieved.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n * ```\n *\n * @publicApi\n */\nfunction getContext(element) {\n    var context = loadLContextFromNode(element);\n    return context.lView[CONTEXT];\n}\n/**\n * Returns the component instance associated with view which owns the DOM element (`null`\n * otherwise).\n *\n * @param element DOM element which is owned by an existing component's view.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n * expect(getViewComponent(<my-app>)).toEqual(null);\n * ```\n *\n * @publicApi\n */\nfunction getViewComponent(element) {\n    var context = loadLContext(element);\n    var lView = context.lView;\n    while (lView[PARENT] && lView[HOST] === null) {\n        // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n        lView = lView[PARENT];\n    }\n    return lView[FLAGS] & 128 /* IsRoot */ ? null : lView[CONTEXT];\n}\n/**\n * Returns the `RootContext` instance that is associated with\n * the application where the target is situated.\n *\n */\nfunction getRootContext$1(target) {\n    var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n    var rootLView = getRootView$1(lViewData);\n    return rootLView[CONTEXT];\n}\n/**\n * Retrieve all root components.\n *\n * Root components are those which have been bootstrapped by Angular.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nfunction getRootComponents(target) {\n    return __spread(getRootContext$1(target).components);\n}\n/**\n * Retrieves an `Injector` associated with the element, component or directive.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nfunction getInjector(target) {\n    var context = loadLContext(target);\n    var tNode = context.lView[TVIEW].data[context.nodeIndex];\n    return new NodeInjector(tNode, context.lView);\n}\n/**\n * Retrieve a set of injection tokens at a given DOM node.\n *\n * @param element Element for which the injection tokens should be retrieved.\n * @publicApi\n */\nfunction getInjectionTokens(element) {\n    var context = loadLContext(element, false);\n    if (!context)\n        return [];\n    var lView = context.lView;\n    var tView = lView[TVIEW];\n    var tNode = tView.data[context.nodeIndex];\n    var providerTokens = [];\n    var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n    var endIndex = tNode.directiveEnd;\n    for (var i = startIndex; i < endIndex; i++) {\n        var value = tView.data[i];\n        if (isDirectiveDefHack(value)) {\n            // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n            // design flaw.  We should always store same type so that we can be monomorphic. The issue\n            // is that for Components/Directives we store the def instead the type. The correct behavior\n            // is that we should always be storing injectable type in this location.\n            value = value.type;\n        }\n        providerTokens.push(value);\n    }\n    return providerTokens;\n}\n/**\n * Retrieves directives associated with a given DOM host element.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nfunction getDirectives(target) {\n    var context = loadLContext(target);\n    if (context.directives === undefined) {\n        context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n    }\n    return context.directives || [];\n}\nfunction loadLContext(target, throwOnNotFound) {\n    if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n    var context = getLContext(target);\n    if (!context && throwOnNotFound) {\n        throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n            'Invalid ng target');\n    }\n    return context;\n}\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param componentOrView any component or view\n *\n */\nfunction getRootView$1(componentOrView) {\n    var lView;\n    if (Array.isArray(componentOrView)) {\n        ngDevMode && assertDefined(componentOrView, 'lView');\n        lView = componentOrView;\n    }\n    else {\n        ngDevMode && assertDefined(componentOrView, 'component');\n        lView = readPatchedLView(componentOrView);\n    }\n    while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n        lView = lView[PARENT];\n    }\n    return lView;\n}\n/**\n * Retrieve map of local references.\n *\n * The references are retrieved as a map of local reference name to element or directive instance.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nfunction getLocalRefs(target) {\n    var context = loadLContext(target);\n    if (context.localRefs === undefined) {\n        context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n    }\n    return context.localRefs || {};\n}\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param directive Component or Directive for which the host element should be retrieved.\n *\n * @publicApi\n */\nfunction getHostElement(directive) {\n    return getLContext(directive).native;\n}\nfunction loadLContextFromNode(node) {\n    if (!(node instanceof Node))\n        throw new Error('Expecting instance of DOM Node');\n    return loadLContext(node);\n}\nfunction isBrowserEvents(listener) {\n    // Browser events are those which don't have `useCapture` as boolean.\n    return typeof listener.useCapture === 'boolean';\n}\n/**\n * Retrieves a list of DOM listeners.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div (click)=\"doSomething()\">\n *     </div>\n * </mp-app>\n *\n * expect(getListeners(<div>)).toEqual({\n *   name: 'click',\n *   element: <div>,\n *   callback: () => doSomething(),\n *   useCapture: false\n * });\n * ```\n *\n * @param element Element for which the DOM listeners should be retrieved.\n * @publicApi\n */\nfunction getListeners(element) {\n    var lContext = loadLContextFromNode(element);\n    var lView = lContext.lView;\n    var tView = lView[TVIEW];\n    var lCleanup = lView[CLEANUP];\n    var tCleanup = tView.cleanup;\n    var listeners = [];\n    if (tCleanup && lCleanup) {\n        for (var i = 0; i < tCleanup.length;) {\n            var firstParam = tCleanup[i++];\n            var secondParam = tCleanup[i++];\n            if (typeof firstParam === 'string') {\n                var name_1 = firstParam;\n                var listenerElement = readElementValue(lView[secondParam]);\n                var callback = lCleanup[tCleanup[i++]];\n                var useCaptureOrIndx = tCleanup[i++];\n                // if useCaptureOrIndx is boolean then report it as is.\n                // if useCaptureOrIndx is positive number then it in unsubscribe method\n                // if useCaptureOrIndx is negative number then it is a Subscription\n                var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                    useCaptureOrIndx :\n                    (useCaptureOrIndx >= 0 ? false : null);\n                if (element == listenerElement) {\n                    listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                }\n            }\n        }\n    }\n    listeners.sort(sortListeners);\n    return listeners;\n}\nfunction sortListeners(a, b) {\n    if (a.name == b.name)\n        return 0;\n    return a.name < b.name ? -1 : 1;\n}\n/**\n * This function should not exist because it is megamorphic and only mostly correct.\n *\n * See call site for more info.\n */\nfunction isDirectiveDefHack(obj) {\n    return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction devModeEqual(a, b) {\n    var isListLikeIterableA = isListLikeIterable(a);\n    var isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n * @publicApi\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n *\n * @publicApi\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n    return SimpleChange;\n}());\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nfunction areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var item1 = iterator1.next();\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/** Called when directives inject each other (creating a circular dependency) */\n/** Called when there are multiple component selectors that match a given node */\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n}\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nfunction throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (creationMode) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    // TODO: include debug context\n    throw new Error(msg);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A special value which designates that a value has not changed. */\nvar NO_CHANGE = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(misko): consider inlining\n/** Updates binding and returns the value. */\nfunction updateBinding(lView, bindingIndex, value) {\n    return lView[bindingIndex] = value;\n}\n/** Gets the current binding value. */\nfunction getBinding(lView, bindingIndex) {\n    ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n    ngDevMode &&\n        assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return lView[bindingIndex];\n}\n/** Updates binding if changed, then returns whether it was updated. */\nfunction bindingUpdated(lView, bindingIndex, value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    ngDevMode &&\n        assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n    if (lView[bindingIndex] === NO_CHANGE) {\n        // initial pass\n        lView[bindingIndex] = value;\n    }\n    else if (isDifferent(lView[bindingIndex], value)) {\n        if (ngDevMode && getCheckNoChangesMode()) {\n            if (!devModeEqual(lView[bindingIndex], value)) {\n                throwErrorIfNoChangesMode(isCreationMode(lView), lView[bindingIndex], value);\n            }\n        }\n        lView[bindingIndex] = value;\n    }\n    else {\n        return false;\n    }\n    return true;\n}\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nfunction bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n    var different = bindingUpdated(lView, bindingIndex, exp1);\n    return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n}\n/** Updates 3 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n    var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n    return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n}\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n    var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n    return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: cleanup once the code is merged in angular/angular\nvar RendererStyleFlags3;\n(function (RendererStyleFlags3) {\n    RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nfunction isProceduralRenderer(renderer) {\n    return !!(renderer.listen);\n}\nvar domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Retrieves the parent element of a given node. */\nfunction getParentNative(tNode, currentView) {\n    if (tNode.parent == null) {\n        return getHostNative(currentView);\n    }\n    else {\n        var parentTNode = getFirstParentNative(tNode);\n        return getNativeByTNode(parentTNode, currentView);\n    }\n}\n/**\n * Get the first parent of a node that isn't an IcuContainer TNode\n */\nfunction getFirstParentNative(tNode) {\n    var parent = tNode.parent;\n    while (parent && parent.type === 5 /* IcuContainer */) {\n        parent = parent.parent;\n    }\n    return parent;\n}\n/**\n * Gets the host element given a view. Will return null if the current view is an embedded view,\n * which does not have a host element.\n */\nfunction getHostNative(currentView) {\n    var hostTNode = currentView[HOST_NODE];\n    return hostTNode && hostTNode.type !== 2 /* View */ ?\n        getNativeByTNode(hostTNode, currentView[PARENT]) :\n        null;\n}\nfunction getLContainer(tNode, embeddedView) {\n    if (tNode.index === -1) {\n        // This is a dynamically created view inside a dynamic container.\n        // If the host index is -1, the view has not yet been inserted, so it has no parent.\n        var containerHostIndex = embeddedView[CONTAINER_INDEX];\n        return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n    }\n    else {\n        // This is a inline view node (e.g. embeddedViewStart)\n        return embeddedView[PARENT][tNode.parent.index];\n    }\n}\n/**\n * Retrieves render parent for a given view.\n * Might be null if a view is not yet attached to any container.\n */\nfunction getContainerRenderParent(tViewNode, view) {\n    var container = getLContainer(tViewNode, view);\n    return container ? container[RENDER_PARENT] : null;\n}\n/**\n * Stack used to keep track of projection nodes in walkTNodeTree.\n *\n * This is deliberately created outside of walkTNodeTree to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n */\nvar projectionNodeStack = [];\n/**\n * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n * one found, or on all of them.\n *\n * @param viewToWalk the view to walk\n * @param action identifies the action to be performed on the elements\n * @param renderer the current renderer.\n * @param renderParent Optional the render parent node to be set in all LContainers found,\n * required for action modes Insert and Destroy.\n * @param beforeNode Optional the node before which elements should be added, required for action\n * Insert.\n */\nfunction walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n    var rootTNode = viewToWalk[TVIEW].node;\n    var projectionNodeIndex = -1;\n    var currentView = viewToWalk;\n    var tNode = rootTNode.child;\n    while (tNode) {\n        var nextTNode = null;\n        if (tNode.type === 3 /* Element */) {\n            executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n            var nodeOrContainer = currentView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                // This element has an LContainer, and its comment needs to be handled\n                executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            var lContainer = currentView[tNode.index];\n            executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n            if (renderParent)\n                lContainer[RENDER_PARENT] = renderParent;\n            if (lContainer[VIEWS].length) {\n                currentView = lContainer[VIEWS][0];\n                nextTNode = currentView[TVIEW].node;\n                // When the walker enters a container, then the beforeNode has to become the local native\n                // comment node.\n                beforeNode = lContainer[NATIVE];\n            }\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            var componentView = findComponentView(currentView);\n            var componentHost = componentView[HOST_NODE];\n            var head = componentHost.projection[tNode.projection];\n            // Must store both the TNode and the view because this projection node could be nested\n            // deeply inside embedded views, and we need to get back down to this particular nested view.\n            projectionNodeStack[++projectionNodeIndex] = tNode;\n            projectionNodeStack[++projectionNodeIndex] = currentView;\n            if (head) {\n                currentView = componentView[PARENT];\n                nextTNode = currentView[TVIEW].data[head.index];\n            }\n        }\n        else {\n            // Otherwise, this is a View or an ElementContainer\n            nextTNode = tNode.child;\n        }\n        if (nextTNode === null) {\n            // this last node was projected, we need to get back down to its projection node\n            if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                currentView = projectionNodeStack[projectionNodeIndex--];\n                tNode = projectionNodeStack[projectionNodeIndex--];\n            }\n            nextTNode = tNode.next;\n            /**\n             * Find the next node in the TNode tree, taking into account the place where a node is\n             * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n             *\n             * If there is no sibling node, then it goes to the next sibling of the parent node...\n             * until it reaches rootNode (at which point null is returned).\n             */\n            while (!nextTNode) {\n                // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                tNode = tNode.parent || currentView[TVIEW].node;\n                if (tNode === null || tNode === rootTNode)\n                    return null;\n                // When exiting a container, the beforeNode must be restored to the previous value\n                if (tNode.type === 0 /* Container */) {\n                    currentView = currentView[PARENT];\n                    beforeNode = currentView[tNode.index][NATIVE];\n                }\n                if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                    currentView = currentView[NEXT];\n                    nextTNode = currentView[TVIEW].node;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n            }\n        }\n        tNode = nextTNode;\n    }\n}\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n */\nfunction executeNodeAction(action, renderer, parent, node, beforeNode) {\n    if (action === 0 /* Insert */) {\n        isProceduralRenderer(renderer) ?\n            renderer.insertBefore(parent, node, beforeNode) :\n            parent.insertBefore(node, beforeNode, true);\n    }\n    else if (action === 1 /* Detach */) {\n        isProceduralRenderer(renderer) ?\n            renderer.removeChild(parent, node) :\n            parent.removeChild(node);\n    }\n    else if (action === 2 /* Destroy */) {\n        ngDevMode && ngDevMode.rendererDestroyNode++;\n        renderer.destroyNode(node);\n    }\n}\nfunction createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n        renderer.createTextNode(stringify$1(value));\n}\nfunction addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n    var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n    ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n    if (renderParent) {\n        var renderer = viewToWalk[RENDERER];\n        walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n    }\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nfunction destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    if (rootView[TVIEW].childIndex === -1) {\n        return cleanUpView(rootView);\n    }\n    var viewOrContainer = getLViewChild(rootView);\n    while (viewOrContainer) {\n        var next = null;\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            // If LView, traverse down to child.\n            var view = viewOrContainer;\n            if (view[TVIEW].childIndex > -1)\n                next = getLViewChild(view);\n        }\n        else {\n            // If container, traverse down to its first LView.\n            var container = viewOrContainer;\n            if (container[VIEWS].length)\n                next = container[VIEWS][0];\n        }\n        if (next == null) {\n            // Only clean up view when moving to the side or up, as destroy hooks\n            // should be called in order from the bottom up.\n            while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && viewOrContainer[NEXT];\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param lView The view to insert\n * @param lContainer The container into which the view should be inserted\n * @param parentView The new parent of the inserted view\n * @param index The index at which to insert the view\n * @param containerIndex The index of the container node, if dynamic\n */\nfunction insertView(lView, lContainer, parentView, index, containerIndex) {\n    var views = lContainer[VIEWS];\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        views[index - 1][NEXT] = lView;\n    }\n    if (index < views.length) {\n        lView[NEXT] = views[index];\n        views.splice(index, 0, lView);\n    }\n    else {\n        views.push(lView);\n        lView[NEXT] = null;\n    }\n    // Dynamically inserted views need a reference to their parent container's host so it's\n    // possible to jump from a view to its container's next when walking the node tree.\n    if (containerIndex > -1) {\n        lView[CONTAINER_INDEX] = containerIndex;\n        lView[PARENT] = parentView;\n    }\n    // Notify query that a new view has been added\n    if (lView[QUERIES]) {\n        lView[QUERIES].insertView(index);\n    }\n    // Sets the attached flag\n    lView[FLAGS] |= 16 /* Attached */;\n}\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param lContainer The container from which to detach a view\n * @param removeIndex The index of the view to detach\n * @param detached Whether or not this view is already detached.\n * @returns Detached LView instance.\n */\nfunction detachView(lContainer, removeIndex, detached) {\n    var views = lContainer[VIEWS];\n    var viewToDetach = views[removeIndex];\n    if (removeIndex > 0) {\n        views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n    }\n    views.splice(removeIndex, 1);\n    if (!detached) {\n        addRemoveViewFromContainer(viewToDetach, false);\n    }\n    if (viewToDetach[QUERIES]) {\n        viewToDetach[QUERIES].removeView();\n    }\n    viewToDetach[CONTAINER_INDEX] = -1;\n    viewToDetach[PARENT] = null;\n    // Unsets the attached flag\n    viewToDetach[FLAGS] &= ~16 /* Attached */;\n    return viewToDetach;\n}\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param lContainer The container from which to remove a view\n * @param tContainer The TContainer node associated with the LContainer\n * @param removeIndex The index of the view to remove\n */\nfunction removeView(lContainer, containerHost, removeIndex) {\n    var view = lContainer[VIEWS][removeIndex];\n    detachView(lContainer, removeIndex, !!containerHost.detached);\n    destroyLView(view);\n}\n/** Gets the child of the given LView */\nfunction getLViewChild(lView) {\n    var childIndex = lView[TVIEW].childIndex;\n    return childIndex === -1 ? null : lView[childIndex];\n}\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param view The view to be destroyed.\n */\nfunction destroyLView(view) {\n    var renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n        walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n    }\n    destroyViewTree(view);\n    // Sets the destroyed flag\n    view[FLAGS] |= 64 /* Destroyed */;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param state The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    var tNode;\n    if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n        tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return getLContainer(tNode, state);\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state[PARENT] === rootView ? null : state[PARENT];\n    }\n}\n/**\n * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n * can be propagated to @Output listeners.\n *\n * @param view The LView to clean up\n */\nfunction cleanUpView(viewOrContainer) {\n    if (viewOrContainer.length >= HEADER_OFFSET) {\n        var view = viewOrContainer;\n        executeOnDestroys(view);\n        executePipeOnDestroys(view);\n        removeListeners(view);\n        var hostTNode = view[HOST_NODE];\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            view[RENDERER].destroy();\n        }\n    }\n}\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(lView) {\n    var tCleanup = lView[TVIEW].cleanup;\n    if (tCleanup != null) {\n        var lCleanup = lView[CLEANUP];\n        for (var i = 0; i < tCleanup.length - 1; i += 2) {\n            if (typeof tCleanup[i] === 'string') {\n                // This is a listener with the native renderer\n                var idx = tCleanup[i + 1];\n                var listener = lCleanup[tCleanup[i + 2]];\n                var native = readElementValue(lView[idx]);\n                var useCaptureOrSubIdx = tCleanup[i + 3];\n                if (typeof useCaptureOrSubIdx === 'boolean') {\n                    // DOM listener\n                    native.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                }\n                else {\n                    if (useCaptureOrSubIdx >= 0) {\n                        // unregister\n                        lCleanup[useCaptureOrSubIdx]();\n                    }\n                    else {\n                        // Subscription\n                        lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                    }\n                }\n                i += 2;\n            }\n            else if (typeof tCleanup[i] === 'number') {\n                // This is a listener with renderer2 (cleanup fn can be found by index)\n                var cleanupFn = lCleanup[tCleanup[i]];\n                cleanupFn();\n            }\n            else {\n                // This is a cleanup function that is grouped with the index of its context\n                var context = lCleanup[tCleanup[i + 1]];\n                tCleanup[i].call(context);\n            }\n        }\n        lView[CLEANUP] = null;\n    }\n}\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view) {\n    var tView = view[TVIEW];\n    var destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(view, destroyHooks);\n    }\n}\n/** Calls pipe destroy hooks for this view */\nfunction executePipeOnDestroys(lView) {\n    var pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks(lView, pipeDestroyHooks);\n    }\n}\nfunction getRenderParent(tNode, currentView) {\n    if (canInsertNativeNode(tNode, currentView)) {\n        // If we are asked for a render parent of the root component we need to do low-level DOM\n        // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n        // parent of the topmost host node if the root component injects ViewContainerRef.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        var hostTNode = currentView[HOST_NODE];\n        var tNodeParent = tNode.parent;\n        if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n            tNode = getHighestElementContainer(tNodeParent);\n        }\n        return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n            getContainerRenderParent(hostTNode, currentView) :\n            getParentNative(tNode, currentView);\n    }\n    return null;\n}\nfunction canInsertNativeChildOfElement(tNode) {\n    // If the parent is null, then we are inserting across views. This happens when we\n    // insert a root element of the component view into the component host element and it\n    // should always be eager.\n    if (tNode.parent == null ||\n        // We should also eagerly insert if the parent is a regular, non-component element\n        // since we know that this relationship will never be broken.\n        tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 1 /* isComponent */)) {\n        return true;\n    }\n    // Parent is a Component. Component's content nodes are not inserted immediately\n    // because they will be projected, and so doing insert at this point would be wasteful.\n    // Since the projection would than move it to its final destination.\n    return false;\n}\n/**\n * We might delay insertion of children for a given view if it is disconnected.\n * This might happen for 2 main reasons:\n * - view is not inserted into any container (view was created but not inserted yet)\n * - view is inserted into a container but the container itself is not inserted into the DOM\n * (container might be part of projection or child of a view that is not inserted yet).\n *\n * In other words we can insert children of a given view if this view was inserted into a container\n * and\n * the container itself has its render parent determined.\n */\nfunction canInsertNativeChildOfView(viewTNode, view) {\n    // Because we are inserting into a `View` the `View` may be disconnected.\n    var container = getLContainer(viewTNode, view);\n    if (container == null || container[RENDER_PARENT] == null) {\n        // The `View` is not inserted into a `Container` or the parent `Container`\n        // itself is disconnected. So we have to delay.\n        return false;\n    }\n    // The parent `Container` is in inserted state, so we can eagerly insert into\n    // this location.\n    return true;\n}\n/**\n * Returns whether a native element can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is mare for projection but has not been inserted\n *   into destination.\n *\n\n *\n * @param tNode The tNode of the node that we want to insert.\n * @param currentView Current LView being processed.\n * @return boolean Whether the node should be inserted now (or delayed until later).\n */\nfunction canInsertNativeNode(tNode, currentView) {\n    var currentNode = tNode;\n    var parent = tNode.parent;\n    if (tNode.parent) {\n        if (tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        else if (tNode.parent.type === 5 /* IcuContainer */) {\n            currentNode = getFirstParentNative(currentNode);\n            parent = currentNode.parent;\n        }\n    }\n    if (parent === null)\n        parent = currentView[HOST_NODE];\n    if (parent && parent.type === 2 /* View */) {\n        return canInsertNativeChildOfView(parent, currentView);\n    }\n    else {\n        // Parent is a regular element or a component\n        return canInsertNativeChildOfElement(currentNode);\n    }\n}\n/**\n * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n * This is a utility function that can be used when native nodes were determined - it abstracts an\n * actual renderer being used.\n */\nfunction nativeInsertBefore(renderer, parent, child, beforeNode) {\n    if (isProceduralRenderer(renderer)) {\n        renderer.insertBefore(parent, child, beforeNode);\n    }\n    else {\n        parent.insertBefore(child, beforeNode, true);\n    }\n}\n/**\n * Returns a native parent of a given native node.\n */\nfunction nativeParentNode(renderer, node) {\n    return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n}\n/**\n * Returns a native sibling of a given native node.\n */\nfunction nativeNextSibling(renderer, node) {\n    return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}.\n *\n * @param childEl The child that should be appended\n * @param childTNode The TNode of the child element\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nfunction appendChild(childEl, childTNode, currentView) {\n    if (childEl === void 0) { childEl = null; }\n    if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n        var renderer = currentView[RENDERER];\n        var parentEl = getParentNative(childTNode, currentView);\n        var parentTNode = childTNode.parent || currentView[HOST_NODE];\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, currentView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(currentView);\n            nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */) {\n            var renderParent = getRenderParent(childTNode, currentView);\n            nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n        }\n        else if (parentTNode.type === 5 /* IcuContainer */) {\n            var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n            nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n        }\n        else {\n            isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                parentEl.appendChild(childEl);\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Gets the top-level ng-container if ng-containers are nested.\n *\n * @param ngContainer The TNode of the starting ng-container\n * @returns tNode The TNode of the highest level ng-container\n */\nfunction getHighestElementContainer(ngContainer) {\n    while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n        ngContainer = ngContainer.parent;\n    }\n    return ngContainer;\n}\nfunction getBeforeNodeForView(index, views, containerNative) {\n    if (index + 1 < views.length) {\n        var view = views[index + 1];\n        var viewTNode = view[HOST_NODE];\n        return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n    }\n    else {\n        return containerNative;\n    }\n}\n/**\n * Removes the `child` element from the DOM if not in view and not projected.\n *\n * @param childTNode The TNode of the child to remove\n * @param childEl The child that should be removed\n * @param currentView The current LView\n * @returns Whether or not the child was removed\n */\nfunction removeChild(childTNode, childEl, currentView) {\n    // We only remove the element if not in View or not projected.\n    if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n        var parentNative = getParentNative(childTNode, currentView);\n        var renderer = currentView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n            parentNative.removeChild(childEl);\n        return true;\n    }\n    return false;\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param projectedTNode The TNode to be projected\n * @param tProjectionNode The projection (ng-content) TNode\n * @param currentView Current LView\n * @param projectionView Projection view (view above current)\n */\nfunction appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n    var native = getNativeByTNode(projectedTNode, projectionView);\n    appendChild(native, tProjectionNode, currentView);\n    // the projected contents are processed while in the shadow view (which is the currentView)\n    // therefore we need to extract the view where the host element lives since it's the\n    // logical container of the content projected views\n    attachPatchData(native, projectionView);\n    var renderParent = getRenderParent(tProjectionNode, currentView);\n    var nodeOrContainer = projectionView[projectedTNode.index];\n    if (projectedTNode.type === 0 /* Container */) {\n        // The node we are adding is a container and we are adding it to an element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assign the final projection location in those cases.\n        nodeOrContainer[RENDER_PARENT] = renderParent;\n        var views = nodeOrContainer[VIEWS];\n        for (var i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n        }\n    }\n    else {\n        if (projectedTNode.type === 4 /* ElementContainer */) {\n            var ngContainerChildTNode = projectedTNode.child;\n            while (ngContainerChildTNode) {\n                appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                ngContainerChildTNode = ngContainerChildTNode.next;\n            }\n        }\n        if (isLContainer(nodeOrContainer)) {\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_TEMPLATE_SELECTOR = 'ng-template';\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    var nodeClassesLen = nodeClassAttrVal.length;\n    var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n    var matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n     {\n        return false;\n    }\n    return true;\n}\n/**\n * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n *\n * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n * is of expected type:\n * - whether tNode has either Element or ElementContainer type\n * - or if we want to match \"ng-template\" tag, we check for Container type\n */\nfunction hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n    return currentSelector === tNode.tagName &&\n        (isProjectionMode ||\n            (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n            (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data to match\n * @param selector\n * @returns true if node matches the selector.\n */\nfunction isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n    ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n    var mode = 4 /* ELEMENT */;\n    var nodeAttrs = tNode.attrs;\n    var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n    // When processing \":not\" selectors, we skip to the next \":not\" if the\n    // current one doesn't match\n    var skipToNextSelector = false;\n    for (var i = 0; i < selector.length; i++) {\n        var current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = current | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                current === '' && selector.length === 1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n            var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            if (selectorAttrValue !== '') {\n                var nodeAttrValue = void 0;\n                var maybeAttrName = nodeAttrs[attrIndexInNode];\n                if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                    nodeAttrValue = '';\n                }\n                else {\n                    ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                    nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                }\n                if (mode & 8 /* CLASS */ &&\n                    !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\n/**\n * Examines an attributes definition array from a node to find the index of the\n * attribute with the specified name.\n *\n * NOTE: Will not find namespaced attributes.\n *\n * @param name the name of the attribute to find\n * @param attrs the attribute array to examine\n */\nfunction findAttrIndexInNode(name, attrs) {\n    if (attrs === null)\n        return -1;\n    var selectOnlyMode = false;\n    var i = 0;\n    while (i < attrs.length) {\n        var maybeAttrName = attrs[i];\n        if (maybeAttrName === name) {\n            return i;\n        }\n        else if (maybeAttrName === 0 /* NamespaceURI */) {\n            // NOTE(benlesh): will not find namespaced attributes. This is by design.\n            i += 4;\n        }\n        else {\n            if (maybeAttrName === 3 /* SelectOnly */) {\n                selectOnlyMode = true;\n            }\n            i += selectOnlyMode ? 1 : 2;\n        }\n    }\n    return -1;\n}\nfunction isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n    if (isProjectionMode === void 0) { isProjectionMode = false; }\n    for (var i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getProjectAsAttrValue(tNode) {\n    var nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return nodeAttrs[ngProjectAsAttrIdx + 1];\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n */\nfunction matchingSelectorIndex(tNode, selectors, textSelectors) {\n    var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (var i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null &&\n                isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/**\n * Combines the binding value and a factory for an animation player.\n *\n * Used to bind a player to an element template binding (currently only\n * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n * supported). The provided `factoryFn` function will be run once all\n * the associated bindings have been evaluated on the element and is\n * designed to return a player which will then be placed on the element.\n *\n * @param factoryFn The function that is used to create a player\n *   once all the rendering-related (styling values) have been\n *   processed for the element binding.\n * @param value The raw value that will be exposed to the binding\n *   so that the binding can update its internal values when\n *   any changes are evaluated.\n */\nfunction bindPlayerFactory(factoryFn, value) {\n    return new BoundPlayerFactory(factoryFn, value);\n}\nvar BoundPlayerFactory = /** @class */ (function () {\n    function BoundPlayerFactory(fn, value) {\n        this.fn = fn;\n        this.value = value;\n    }\n    return BoundPlayerFactory;\n}());\n\nvar CorePlayerHandler = /** @class */ (function () {\n    function CorePlayerHandler() {\n        this._players = [];\n    }\n    CorePlayerHandler.prototype.flushPlayers = function () {\n        for (var i = 0; i < this._players.length; i++) {\n            var player = this._players[i];\n            if (!player.parent && player.state === 0 /* Pending */) {\n                player.play();\n            }\n        }\n        this._players.length = 0;\n    };\n    CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n    return CorePlayerHandler;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANIMATION_PROP_PREFIX = '@';\nfunction createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n    return [\n        0,\n        [null, -1, false, sanitizer || null],\n        initialStyles || [null],\n        initialClasses || [null],\n        [0, 0],\n        element || null,\n        null,\n        null,\n        null,\n    ];\n}\n/**\n * Used clone a copy of a pre-computed template of a styling context.\n *\n * A pre-computed template is designed to be computed once for a given element\n * (instructions.ts has logic for caching this).\n */\nfunction allocStylingContext(element, templateStyleContext) {\n    // each instance gets a copy\n    var context = templateStyleContext.slice();\n    context[5 /* ElementPosition */] = element;\n    // this will prevent any other directives from extending the context\n    context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n    return context;\n}\n/**\n * Retrieve the `StylingContext` at a given index.\n *\n * This method lazily creates the `StylingContext`. This is because in most cases\n * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n * which would create unnecessary memory pressure.\n *\n * @param index Index of the style allocation. See: `elementStyling`.\n * @param viewData The view to search for the styling context\n */\nfunction getStylingContext(index, viewData) {\n    var storageIndex = index;\n    var slotValue = viewData[storageIndex];\n    var wrapper = viewData;\n    while (Array.isArray(slotValue)) {\n        wrapper = slotValue;\n        slotValue = slotValue[HOST];\n    }\n    if (isStylingContext(wrapper)) {\n        return wrapper;\n    }\n    else {\n        // This is an LView or an LContainer\n        var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n        if (wrapper !== viewData) {\n            storageIndex = HOST;\n        }\n        return wrapper[storageIndex] = stylingTemplate ?\n            allocStylingContext(slotValue, stylingTemplate) :\n            createEmptyStylingContext(slotValue);\n    }\n}\nfunction isStylingContext(value) {\n    // Not an LView or an LContainer\n    return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n        Array.isArray(value[2 /* InitialStyleValuesPosition */]);\n}\nfunction isAnimationProp(name) {\n    return name[0] === ANIMATION_PROP_PREFIX;\n}\nfunction addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n    ref = ref || element;\n    if (playerContextIndex) {\n        playerContext[playerContextIndex] = player;\n    }\n    else {\n        playerContext.push(player);\n    }\n    if (player) {\n        player.addEventListener(200 /* Destroyed */, function () {\n            var index = playerContext.indexOf(player);\n            var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            // if the player is being removed from the factory side of the context\n            // (which is where the [style] and [class] bindings do their thing) then\n            // that side of the array cannot be resized since the respective bindings\n            // have pointer index values that point to the associated factory instance\n            if (index) {\n                if (index < nonFactoryPlayerIndex) {\n                    playerContext[index] = null;\n                }\n                else {\n                    playerContext.splice(index, 1);\n                }\n            }\n            player.destroy();\n        });\n        var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n        playerHandler.queuePlayer(player, ref);\n        return true;\n    }\n    return false;\n}\nfunction getPlayersInternal(playerContext) {\n    var players = [];\n    var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n    // add all factory-based players (which are apart of [style] and [class] bindings)\n    for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n        var player = playerContext[i];\n        if (player) {\n            players.push(player);\n        }\n    }\n    // add all custom players (not apart of [style] and [class] bindings)\n    for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n        players.push(playerContext[i]);\n    }\n    return players;\n}\nfunction getOrCreatePlayerContext(target, context) {\n    context = context || getLContext(target);\n    if (!context) {\n        ngDevMode && throwInvalidRefError();\n        return null;\n    }\n    var lView = context.lView, nodeIndex = context.nodeIndex;\n    var stylingContext = getStylingContext(nodeIndex, lView);\n    return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n}\nfunction getPlayerContext(stylingContext) {\n    return stylingContext[8 /* PlayerContext */];\n}\nfunction allocPlayerContext(data) {\n    return data[8 /* PlayerContext */] =\n        [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n}\nfunction throwInvalidRefError() {\n    throw new Error('Only elements that exist in an Angular application can be used for animations');\n}\nfunction hasStyling(attrs) {\n    for (var i = 0; i < attrs.length; i++) {\n        var attr = attrs[i];\n        if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n            return true;\n    }\n    return false;\n}\nfunction hasClassInput(tNode) {\n    return tNode.flags & 8 /* hasClassInput */ ? true : false;\n}\n\n/**\n * This file includes the code to power all styling-binding operations in Angular.\n *\n * These include:\n * [style]=\"myStyleObj\"\n * [class]=\"myClassObj\"\n * [style.prop]=\"myPropValue\"\n * [class.name]=\"myClassValue\"\n *\n * There are many different ways in which these functions below are called. Please see\n * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n */\n/**\n * Creates a new StylingContext an fills it with the provided static styling attribute values.\n */\nfunction initializeStaticContext(attrs) {\n    var context = createEmptyStylingContext();\n    var initialClasses = context[3 /* InitialClassValuesPosition */] =\n        [null];\n    var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n        [null];\n    // The attributes array has marker values (numbers) indicating what the subsequent\n    // values represent. When we encounter a number, we set the mode to that type of attribute.\n    var mode = -1;\n    for (var i = 0; i < attrs.length; i++) {\n        var attr = attrs[i];\n        if (typeof attr == 'number') {\n            mode = attr;\n        }\n        else if (mode === 2 /* Styles */) {\n            initialStyles.push(attr, attrs[++i]);\n        }\n        else if (mode === 1 /* Classes */) {\n            initialClasses.push(attr, true);\n        }\n        else if (mode === 3 /* SelectOnly */) {\n            break;\n        }\n    }\n    return context;\n}\n/**\n * Designed to update an existing styling context with new static styling\n * data (classes and styles).\n *\n * @param context the existing styling context\n * @param attrs an array of new static styling attributes that will be\n *              assigned to the context\n * @param directive the directive instance with which static data is associated with.\n */\nfunction patchContextWithStaticAttrs(context, attrs, directive) {\n    // If the styling context has already been patched with the given directive's bindings,\n    // then there is no point in doing it again. The reason why this may happen (the directive\n    // styling being patched twice) is because the `stylingBinding` function is called each time\n    // an element is created (both within a template function and within directive host bindings).\n    var directives = context[1 /* DirectiveRegistryPosition */];\n    if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n        // this is a new directive which we have not seen yet.\n        directives.push(directive, -1, false, null);\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n            }\n        }\n    }\n}\n/**\n * Designed to add a style or class value into the existing set of initial styles.\n *\n * The function will search and figure out if a style/class value is already present\n * within the provided initial styling array. If and when a style/class value is not\n * present (or if it's value is falsy) then it will be inserted/updated in the list\n * of initial styling values.\n */\nfunction patchInitialStylingValue(initialStyling, prop, value) {\n    // Even values are keys; Odd numbers are values; Search keys only\n    for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n        var key = initialStyling[i];\n        if (key === prop) {\n            var existingValue = initialStyling[i + 1 /* ValueOffset */];\n            // If there is no previous style value (when `null`) or no previous class\n            // applied (when `false`) then we update the the newly given value.\n            if (existingValue == null || existingValue == false) {\n                initialStyling[i + 1 /* ValueOffset */] = value;\n            }\n            return;\n        }\n        i = i + 2 /* Size */;\n    }\n    // We did not find existing key, add a new one.\n    initialStyling.push(prop, value);\n}\n/**\n * Runs through the initial styling data present in the context and renders\n * them via the renderer on the element.\n */\nfunction renderInitialStylesAndClasses(element, context, renderer) {\n    var initialClasses = context[3 /* InitialClassValuesPosition */];\n    renderInitialStylingValues(element, renderer, initialClasses, true);\n    var initialStyles = context[2 /* InitialStyleValuesPosition */];\n    renderInitialStylingValues(element, renderer, initialStyles, false);\n}\n/**\n * This is a helper function designed to render each entry present within the\n * provided list of initialStylingValues.\n */\nfunction renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n    for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n        var value = initialStylingValues[i + 1 /* ValueOffset */];\n        if (value) {\n            if (isEntryClassBased) {\n                setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            else {\n                setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n            }\n        }\n    }\n}\n/**\n * Adds in new binding values to a styling context.\n *\n * If a directive value is provided then all provided class/style binding names will\n * reference the provided directive.\n *\n * @param context the existing styling context\n * @param directiveRef the directive that the new bindings will reference\n * @param classBindingNames an array of class binding names that will be added to the context\n * @param styleBindingNames an array of style binding names that will be added to the context\n * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n *    instance will only be active if and when the directive updates the bindings that it owns.\n */\nfunction updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n    if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n        return;\n    // this means the context has already been patched with the directive's bindings\n    var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n    if (directiveIndex === -1) {\n        // this means the directive has already been patched in ... No point in doing anything\n        return;\n    }\n    // there are alot of variables being used below to track where in the context the new\n    // binding values will be placed. Because the context consists of multiple types of\n    // entries (single classes/styles and multi classes/styles) alot of the index positions\n    // need to be computed ahead of time and the context needs to be extended before the values\n    // are inserted in.\n    var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n    var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n    var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n    var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n    var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n    var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n    var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n    var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n    var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n    // because we're inserting more bindings into the context, this means that the\n    // binding values need to be referenced the singlePropOffsetValues array so that\n    // the template/directive can easily find them inside of the `elementStyleProp`\n    // and the `elementClassProp` functions without iterating through the entire context.\n    // The first step to setting up these reference points is to mark how many bindings\n    // are being added. Even if these bindings already exist in the context, the directive\n    // or template code will still call them unknowingly. Therefore the total values need\n    // to be registered so that we know how many bindings are assigned to each directive.\n    var currentSinglePropsLength = singlePropOffsetValues.length;\n    singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n    // the code below will check to see if a new style binding already exists in the context\n    // if so then there is no point in inserting it into the context again. Whether or not it\n    // exists the styling offset code will now know exactly where it is\n    var insertionOffset = 0;\n    var filteredStyleBindingNames = [];\n    if (styleBindingNames && styleBindingNames.length) {\n        for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n            var name_1 = styleBindingNames[i_1];\n            var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n            if (singlePropIndex == -1) {\n                singlePropIndex = singleClassesStartIndex + insertionOffset;\n                insertionOffset += 4 /* Size */;\n                filteredStyleBindingNames.push(name_1);\n            }\n            singlePropOffsetValues.push(singlePropIndex);\n        }\n    }\n    // just like with the style binding loop above, the new class bindings get the same treatment...\n    var filteredClassBindingNames = [];\n    if (classBindingNames && classBindingNames.length) {\n        for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n            var name_2 = classBindingNames[i_2];\n            var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n            if (singlePropIndex == -1) {\n                singlePropIndex = multiStylesStartIndex + insertionOffset;\n                insertionOffset += 4 /* Size */;\n                filteredClassBindingNames.push(name_2);\n            }\n            else {\n                singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n            }\n            singlePropOffsetValues.push(singlePropIndex);\n        }\n    }\n    // because new styles are being inserted, this means the existing collection of style offset\n    // index values are incorrect (they point to the wrong values). The code below will run through\n    // the entire offset array and update the existing set of index values to point to their new\n    // locations while taking the new binding values into consideration.\n    var i = 2 /* ValueStartPosition */;\n    if (filteredStyleBindingNames.length) {\n        while (i < currentSinglePropsLength) {\n            var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n            var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n            if (totalClasses) {\n                var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                for (var j = start; j < start + totalClasses; j++) {\n                    singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n            }\n            var total = totalStyles + totalClasses;\n            i += 2 /* ValueStartPosition */ + total;\n        }\n    }\n    var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n    // in the event that there are new style values being inserted, all existing class and style\n    // bindings need to have their pointer values offsetted with the new amount of space that is\n    // used for the new style/class bindings.\n    for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n        var isMultiBased = i_3 >= multiStylesStartIndex;\n        var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n        var flag = getPointers(context, i_3);\n        var staticIndex = getInitialIndex(flag);\n        var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n        if (isMultiBased) {\n            singleOrMultiIndex +=\n                isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n        }\n        else {\n            singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n        }\n        setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n    }\n    // this is where we make space in the context for the new style bindings\n    for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n        context.splice(multiClassesStartIndex, 0, null);\n        context.splice(singleClassesStartIndex, 0, null);\n        singleClassesStartIndex++;\n        multiStylesStartIndex++;\n        multiClassesStartIndex += 2; // both single + multi slots were inserted\n    }\n    // this is where we make space in the context for the new class bindings\n    for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n        context.splice(multiStylesStartIndex, 0, null);\n        context.push(null);\n        multiStylesStartIndex++;\n        multiClassesStartIndex++;\n    }\n    var initialClasses = context[3 /* InitialClassValuesPosition */];\n    var initialStyles = context[2 /* InitialStyleValuesPosition */];\n    // the code below will insert each new entry into the context and assign the appropriate\n    // flags and index values to them. It's important this runs at the end of this function\n    // because the context, property offset and index values have all been computed just before.\n    for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n        var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n        var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n        var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n            filteredStyleBindingNames[adjustedIndex];\n        var multiIndex = void 0, singleIndex = void 0;\n        if (entryIsClassBased) {\n            multiIndex = multiClassesStartIndex +\n                ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            singleIndex = singleClassesStartIndex +\n                ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n        }\n        else {\n            multiIndex =\n                multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            singleIndex = singleStylesStartIndex +\n                ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n        }\n        // if a property is not found in the initial style values list then it\n        // is ALWAYS added incase a follow-up directive introduces the same initial\n        // style/class value later on.\n        var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n        var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n        if (indexForInitial === -1) {\n            indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n            initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n        }\n        else {\n            indexForInitial += 1 /* ValueOffset */;\n        }\n        var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n        setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n        setProp(context, singleIndex, propName);\n        setValue(context, singleIndex, null);\n        setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n        setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n        setProp(context, multiIndex, propName);\n        setValue(context, multiIndex, null);\n        setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n    }\n    // the total classes/style values are updated so the next time the context is patched\n    // additional style/class bindings from another directive then it knows exactly where\n    // to insert them in the context\n    singlePropOffsetValues[1 /* ClassesCountPosition */] =\n        totalCurrentClassBindings + filteredClassBindingNames.length;\n    singlePropOffsetValues[0 /* StylesCountPosition */] =\n        totalCurrentStyleBindings + filteredStyleBindingNames.length;\n    // there is no initial value flag for the master index since it doesn't\n    // reference an initial style value\n    var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n        (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n    setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n}\n/**\n * Searches through the existing registry of directives\n */\nfunction findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n    var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n    var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n    var directiveIndex;\n    var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n    if (detectedIndex === -1) {\n        directiveIndex = directiveRefs.length / 4 /* Size */;\n        directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n    }\n    else {\n        var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n        if (directiveRefs[singlePropStartPosition] >= 0) {\n            // the directive has already been patched into the context\n            return -1;\n        }\n        directiveIndex = detectedIndex / 4 /* Size */;\n        // because the directive already existed this means that it was set during elementHostAttrs or\n        // elementStart which means that the binding values were not here. Therefore, the values below\n        // need to be applied so that single class and style properties can be assigned later.\n        var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n        directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n        // the sanitizer is also apart of the binding process and will be used when bindings are\n        // applied.\n        var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n        directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n    }\n    return directiveIndex;\n}\nfunction getMatchingBindingIndex(context, bindingName, start, end) {\n    for (var j = start; j < end; j += 4 /* Size */) {\n        if (getProp(context, j) === bindingName)\n            return j;\n    }\n    return -1;\n}\n/**\n * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n * applied to the element once `renderStyling` is called.\n *\n * All missing styles/class (any values that are not provided in the new `styles`\n * or `classes` params) will resolve to `null` within their respective positions\n * in the context.\n *\n * @param context The styling context that will be updated with the\n *    newly provided style values.\n * @param classesInput The key/value map of CSS class names that will be used for the update.\n * @param stylesInput The key/value map of CSS styles that will be used for the update.\n */\nfunction updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n    stylesInput = stylesInput || null;\n    var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n    var element = context[5 /* ElementPosition */];\n    var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n        new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n        null;\n    var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n        new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n        null;\n    var classesValue = classesPlayerBuilder ?\n        classesInput.value :\n        classesInput;\n    var stylesValue = stylesPlayerBuilder ? stylesInput['value'] : stylesInput;\n    // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n    var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n        classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n    var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n    if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n        return;\n    context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n    context[7 /* CachedStyleValue */] = stylesValue;\n    var classNames = EMPTY_ARRAY;\n    var applyAllClasses = false;\n    var playerBuildersAreDirty = false;\n    var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n    if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n        setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n        playerBuildersAreDirty = true;\n    }\n    var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n    if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n        setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n        playerBuildersAreDirty = true;\n    }\n    // each time a string-based value pops up then it shouldn't require a deep\n    // check of what's changed.\n    if (!ignoreAllClassUpdates) {\n        if (typeof classesValue == 'string') {\n            classNames = classesValue.split(/\\s+/);\n            // this boolean is used to avoid having to create a key/value map of `true` values\n            // since a classname string implies that all those classes are added\n            applyAllClasses = true;\n        }\n        else {\n            classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n        }\n    }\n    var classes = (classesValue || EMPTY_OBJ);\n    var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n    var styles = stylesValue || EMPTY_OBJ;\n    var classesStartIndex = styleProps.length;\n    var multiStartIndex = getMultiStartIndex(context);\n    var dirty = false;\n    var ctxIndex = multiStartIndex;\n    var propIndex = 0;\n    var propLimit = styleProps.length + classNames.length;\n    // the main loop here will try and figure out how the shape of the provided\n    // styles differ with respect to the context. Later if the context/styles/classes\n    // are off-balance then they will be dealt in another loop after this one\n    while (ctxIndex < context.length && propIndex < propLimit) {\n        var isClassBased = propIndex >= classesStartIndex;\n        var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n        // when there is a cache-hit for a string-based class then we should\n        // avoid doing any work diffing any of the changes\n        if (processValue) {\n            var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n            var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n            var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n            var prop = getProp(context, ctxIndex);\n            if (prop === newProp) {\n                var value = getValue(context, ctxIndex);\n                var flag = getPointers(context, ctxIndex);\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                if (hasValueChanged(flag, value, newValue)) {\n                    setValue(context, ctxIndex, newValue);\n                    playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                    var initialValue = getInitialValue(context, flag);\n                    // SKIP IF INITIAL CHECK\n                    // If the former `value` is `null` then it means that an initial value\n                    // could be being rendered on screen. If that is the case then there is\n                    // no point in updating the value incase it matches. In other words if the\n                    // new value is the exact same as the previously rendered value (which\n                    // happens to be the initial value) then do nothing.\n                    if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                        setDirty(context, ctxIndex, true);\n                        dirty = true;\n                    }\n                }\n            }\n            else {\n                var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                if (indexOfEntry > 0) {\n                    // it was found at a later point ... just swap the values\n                    var valueToCompare = getValue(context, indexOfEntry);\n                    var flagToCompare = getPointers(context, indexOfEntry);\n                    swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                    if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                        var initialValue = getInitialValue(context, flagToCompare);\n                        setValue(context, ctxIndex, newValue);\n                        // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                        if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    // we only care to do this if the insertion is in the middle\n                    var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                    playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                    insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n        }\n        ctxIndex += 4 /* Size */;\n        propIndex++;\n    }\n    // this means that there are left-over values in the context that\n    // were not included in the provided styles/classes and in this\n    // case the  goal is to \"remove\" them from the context (by nullifying)\n    while (ctxIndex < context.length) {\n        var flag = getPointers(context, ctxIndex);\n        var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n        var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n        if (processValue) {\n            var value = getValue(context, ctxIndex);\n            var doRemoveValue = valueExists(value, isClassBased);\n            if (doRemoveValue) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                // we keep the player factory the same so that the `nulled` value can\n                // be instructed into the player because removing a style and/or a class\n                // is a valid animation player instruction.\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n        }\n        ctxIndex += 4 /* Size */;\n    }\n    // this means that there are left-over properties in the context that\n    // were not detected in the context during the loop above. In that\n    // case we want to add the new entries into the list\n    var sanitizer = getStyleSanitizer(context, directiveIndex);\n    while (propIndex < propLimit) {\n        var isClassBased = propIndex >= classesStartIndex;\n        var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n        if (processValue) {\n            var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n            var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n            var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n            var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n            var ctxIndex_1 = context.length;\n            context.push(flag, prop, value, 0);\n            setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n            dirty = true;\n        }\n        propIndex++;\n    }\n    if (dirty) {\n        setContextDirty(context, true);\n        setDirectiveDirty(context, directiveIndex, true);\n    }\n    if (playerBuildersAreDirty) {\n        setContextPlayersDirty(context, true);\n    }\n}\n/**\n * This method will toggle the referenced CSS class (by the provided index)\n * within the given context.\n *\n * @param context The styling context that will be updated with the\n *    newly provided class value.\n * @param offset The index of the CSS class which is being updated.\n * @param addOrRemove Whether or not to add or remove the CSS class\n */\nfunction updateClassProp(context, offset, addOrRemove, directiveRef) {\n    _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n}\n/**\n * Sets and resolves a single style value on the provided `StylingContext` so\n * that they can be applied to the element once `renderStyling` is called.\n *\n * Note that prop-level styling values are considered higher priority than any styling that\n * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n * then any styles/classes that have been applied using this function will be considered first\n * (then multi values second and then initial values as a backup).\n *\n * @param context The styling context that will be updated with the\n *    newly provided style value.\n * @param offset The index of the property which is being updated.\n * @param value The CSS style value that will be assigned\n * @param directiveRef an optional reference to the directive responsible\n *    for this binding change. If present then style binding will only\n *    actualize if the directive has ownership over this binding\n *    (see styling.ts#directives for more information about the algorithm).\n */\nfunction updateStyleProp(context, offset, input, directiveRef) {\n    _updateSingleStylingValue(context, offset, input, false, directiveRef);\n}\nfunction _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n    var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n    var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n    var currValue = getValue(context, singleIndex);\n    var currFlag = getPointers(context, singleIndex);\n    var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n    var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n    if (hasValueChanged(currFlag, currValue, value) &&\n        allowValueChange(currValue, value, currDirective, directiveIndex)) {\n        var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n        var element = context[5 /* ElementPosition */];\n        var playerBuilder = input instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n            null;\n        var value_1 = (playerBuilder ? input.value : input);\n        var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n        var playerBuildersAreDirty = false;\n        var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n        if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n            var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n            playerBuilderIndex = playerBuilder ? newIndex : 0;\n            playerBuildersAreDirty = true;\n        }\n        if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n            setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n        }\n        if (currDirective !== directiveIndex) {\n            var prop = getProp(context, singleIndex);\n            var sanitizer = getStyleSanitizer(context, directiveIndex);\n            setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n        }\n        // the value will always get updated (even if the dirty flag is skipped)\n        setValue(context, singleIndex, value_1);\n        var indexForMulti = getMultiOrSingleIndex(currFlag);\n        // if the value is the same in the multi-area then there's no point in re-assembling\n        var valueForMulti = getValue(context, indexForMulti);\n        if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n            var multiDirty = false;\n            var singleDirty = true;\n            // only when the value is set to `null` should the multi-value get flagged\n            if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                multiDirty = true;\n                singleDirty = false;\n            }\n            setDirty(context, indexForMulti, multiDirty);\n            setDirty(context, singleIndex, singleDirty);\n            setDirectiveDirty(context, directiveIndex, true);\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n}\n/**\n * Renders all queued styling using a renderer onto the given element.\n *\n * This function works by rendering any styles (that have been applied\n * using `updateStylingMap`) and any classes (that have been applied using\n * `updateStyleProp`) onto the provided element using the provided renderer.\n * Just before the styles/classes are rendered a final key/value style map\n * will be assembled (if `styleStore` or `classStore` are provided).\n *\n * @param lElement the element that the styles will be rendered on\n * @param context The styling context that will be used to determine\n *      what styles will be rendered\n * @param renderer the renderer that will be used to apply the styling\n * @param classesStore if provided, the updated class values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @param stylesStore if provided, the updated style values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @param directiveRef an optional directive that will be used to target which\n *    styling values are rendered. If left empty, only the bindings that are\n *    registered on the template will be rendered.\n * @returns number the total amount of players that got queued for animation (if any)\n */\nfunction renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n    var totalPlayersQueued = 0;\n    var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n    if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n        var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n        var native = context[5 /* ElementPosition */];\n        var multiStartIndex = getMultiStartIndex(context);\n        var onlySingleClasses = limitToSingleClasses(context);\n        var stillDirty = false;\n        for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n            // there is no point in rendering styles that have not changed on screen\n            if (isDirty(context, i)) {\n                var flag = getPointers(context, i);\n                var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                if (targetDirectiveIndex !== directiveIndex) {\n                    stillDirty = true;\n                    continue;\n                }\n                var prop = getProp(context, i);\n                var value = getValue(context, i);\n                var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                var playerBuilder = getPlayerBuilder(context, i);\n                var isClassBased = flag & 2 /* Class */ ? true : false;\n                var isInSingleRegion = i < multiStartIndex;\n                var readInitialValue = !isClassBased || !onlySingleClasses;\n                var valueToApply = value;\n                // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                // this check implies that a single value was removed and we\n                // should now defer to a multi value and use that (if set).\n                if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                    // single values ALWAYS have a reference to a multi index\n                    var multiIndex = getMultiOrSingleIndex(flag);\n                    valueToApply = getValue(context, multiIndex);\n                }\n                // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                // the initial value will always be a string or null,\n                // therefore we can safely adopt it incase there's nothing else\n                // note that this should always be a falsy check since `false` is used\n                // for both class and style comparisons (styles can't be false and false\n                // classes are turned off and should therefore defer to their initial values)\n                // Note that we ignore class-based deferals because otherwise a class can never\n                // be removed in the case that it exists as true in the initial classes list...\n                if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                    valueToApply = getInitialValue(context, flag);\n                }\n                // if the first render is true then we do not want to start applying falsy\n                // values to the DOM element's styling. Otherwise then we know there has\n                // been a change and even if it's falsy then it's removing something that\n                // was truthy before.\n                var doApplyValue = isFirstRender ? valueToApply : true;\n                if (doApplyValue) {\n                    if (isClassBased) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                    }\n                    else {\n                        setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                    }\n                }\n                setDirty(context, i, false);\n            }\n        }\n        if (flushPlayerBuilders) {\n            var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n            var playerContext = getPlayerContext(context);\n            var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                var builder = playerContext[i];\n                var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                var oldPlayer = playerContext[playerInsertionIndex];\n                if (builder) {\n                    var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                    if (player !== undefined) {\n                        if (player != null) {\n                            var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                            wasQueued && totalPlayersQueued++;\n                        }\n                        if (oldPlayer) {\n                            oldPlayer.destroy();\n                        }\n                    }\n                }\n                else if (oldPlayer) {\n                    // the player builder has been removed ... therefore we should delete the associated\n                    // player\n                    oldPlayer.destroy();\n                }\n            }\n            setContextPlayersDirty(context, false);\n        }\n        setDirectiveDirty(context, targetDirectiveIndex, false);\n        setContextDirty(context, stillDirty);\n    }\n    return totalPlayersQueued;\n}\n/**\n * This function renders a given CSS prop/value entry using the\n * provided renderer. If a `store` value is provided then\n * that will be used a render context instead of the provided\n * renderer.\n *\n * @param native the DOM Element\n * @param prop the CSS style property that will be rendered\n * @param value the CSS style value that will be rendered\n * @param renderer\n * @param store an optional key/value map that will be used as a context to render styles on\n */\nfunction setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n    value = sanitizer && value ? sanitizer(prop, value) : value;\n    if (store || playerBuilder) {\n        if (store) {\n            store.setValue(prop, value);\n        }\n        if (playerBuilder) {\n            playerBuilder.setValue(prop, value);\n        }\n    }\n    else if (value) {\n        value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n        // assign as numbers\n        ngDevMode && ngDevMode.rendererSetStyle++;\n        isProceduralRenderer(renderer) ?\n            renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n            native['style'].setProperty(prop, value);\n    }\n    else {\n        ngDevMode && ngDevMode.rendererRemoveStyle++;\n        isProceduralRenderer(renderer) ?\n            renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n            native['style'].removeProperty(prop);\n    }\n}\n/**\n * This function renders a given CSS class value using the provided\n * renderer (by adding or removing it from the provided element).\n * If a `store` value is provided then that will be used a render\n * context instead of the provided renderer.\n *\n * @param native the DOM Element\n * @param prop the CSS style property that will be rendered\n * @param value the CSS style value that will be rendered\n * @param renderer\n * @param store an optional key/value map that will be used as a context to render styles on\n */\nfunction setClass(native, className, add, renderer, store, playerBuilder) {\n    if (store || playerBuilder) {\n        if (store) {\n            store.setValue(className, add);\n        }\n        if (playerBuilder) {\n            playerBuilder.setValue(className, add);\n        }\n    }\n    else if (add) {\n        ngDevMode && ngDevMode.rendererAddClass++;\n        isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n            native['classList'].add(className);\n    }\n    else {\n        ngDevMode && ngDevMode.rendererRemoveClass++;\n        isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n            native['classList'].remove(className);\n    }\n}\nfunction setSanitizeFlag(context, index, sanitizeYes) {\n    if (sanitizeYes) {\n        context[index] |= 4 /* Sanitize */;\n    }\n    else {\n        context[index] &= ~4 /* Sanitize */;\n    }\n}\nfunction setDirty(context, index, isDirtyYes) {\n    var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    if (isDirtyYes) {\n        context[adjustedIndex] |= 1 /* Dirty */;\n    }\n    else {\n        context[adjustedIndex] &= ~1 /* Dirty */;\n    }\n}\nfunction isDirty(context, index) {\n    var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n}\nfunction isClassBasedValue(context, index) {\n    var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n}\nfunction isSanitizable(context, index) {\n    var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n}\nfunction pointers(configFlag, staticIndex, dynamicIndex) {\n    return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n        (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n}\nfunction getInitialValue(context, flag) {\n    var index = getInitialIndex(flag);\n    var entryIsClassBased = flag & 2 /* Class */;\n    var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n        context[2 /* InitialStyleValuesPosition */];\n    return initialValues[index];\n}\nfunction getInitialIndex(flag) {\n    return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n}\nfunction getMultiOrSingleIndex(flag) {\n    var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n    return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n}\nfunction getMultiStartIndex(context) {\n    return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n}\nfunction setProp(context, index, prop) {\n    context[index + 1 /* PropertyOffset */] = prop;\n}\nfunction setValue(context, index, value) {\n    context[index + 2 /* ValueOffset */] = value;\n}\nfunction hasPlayerBuilderChanged(context, builder, index) {\n    var playerContext = context[8 /* PlayerContext */];\n    if (builder) {\n        if (!playerContext || index === 0) {\n            return true;\n        }\n    }\n    else if (!playerContext) {\n        return false;\n    }\n    return playerContext[index] !== builder;\n}\nfunction setPlayerBuilder(context, builder, insertionIndex) {\n    var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n    if (insertionIndex > 0) {\n        playerContext[insertionIndex] = builder;\n    }\n    else {\n        insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n        playerContext.splice(insertionIndex, 0, builder, null);\n        playerContext[0 /* NonBuilderPlayersStart */] +=\n            2 /* PlayerAndPlayerBuildersTupleSize */;\n    }\n    return insertionIndex;\n}\nfunction directiveOwnerPointers(directiveIndex, playerIndex) {\n    return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n}\nfunction setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n    var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n    context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n}\nfunction getPlayerBuilderIndex(context, index) {\n    var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n    var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n        65535 /* BitMask */;\n    return playerBuilderIndex;\n}\nfunction getPlayerBuilder(context, index) {\n    var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n    if (playerBuilderIndex) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (playerContext) {\n            return playerContext[playerBuilderIndex];\n        }\n    }\n    return null;\n}\nfunction setFlag(context, index, flag) {\n    var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n    context[adjustedIndex] = flag;\n}\nfunction getPointers(context, index) {\n    var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n    return context[adjustedIndex];\n}\nfunction getValue(context, index) {\n    return context[index + 2 /* ValueOffset */];\n}\nfunction getProp(context, index) {\n    return context[index + 1 /* PropertyOffset */];\n}\nfunction isContextDirty(context) {\n    return isDirty(context, 0 /* MasterFlagPosition */);\n}\nfunction limitToSingleClasses(context) {\n    return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n}\nfunction setContextDirty(context, isDirtyYes) {\n    setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n}\nfunction setContextPlayersDirty(context, isDirtyYes) {\n    if (isDirtyYes) {\n        context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n    }\n    else {\n        context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n    }\n}\nfunction findEntryPositionByProp(context, prop, startIndex) {\n    for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n        var thisProp = context[i];\n        if (thisProp == prop) {\n            return i - 1 /* PropertyOffset */;\n        }\n    }\n    return -1;\n}\nfunction swapMultiContextEntries(context, indexA, indexB) {\n    var tmpValue = getValue(context, indexA);\n    var tmpProp = getProp(context, indexA);\n    var tmpFlag = getPointers(context, indexA);\n    var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n    var flagA = tmpFlag;\n    var flagB = getPointers(context, indexB);\n    var singleIndexA = getMultiOrSingleIndex(flagA);\n    if (singleIndexA >= 0) {\n        var _flag = getPointers(context, singleIndexA);\n        var _initial = getInitialIndex(_flag);\n        setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n    }\n    var singleIndexB = getMultiOrSingleIndex(flagB);\n    if (singleIndexB >= 0) {\n        var _flag = getPointers(context, singleIndexB);\n        var _initial = getInitialIndex(_flag);\n        setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n    }\n    setValue(context, indexA, getValue(context, indexB));\n    setProp(context, indexA, getProp(context, indexB));\n    setFlag(context, indexA, getPointers(context, indexB));\n    var playerIndexA = getPlayerBuilderIndex(context, indexB);\n    var directiveIndexA = 0;\n    setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n    setValue(context, indexB, tmpValue);\n    setProp(context, indexB, tmpProp);\n    setFlag(context, indexB, tmpFlag);\n    setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n}\nfunction updateSinglePointerValues(context, indexStartPosition) {\n    for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n        var multiFlag = getPointers(context, i);\n        var singleIndex = getMultiOrSingleIndex(multiFlag);\n        if (singleIndex > 0) {\n            var singleFlag = getPointers(context, singleIndex);\n            var initialIndexForSingle = getInitialIndex(singleFlag);\n            var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n            var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n            setFlag(context, singleIndex, updatedFlag);\n        }\n    }\n}\nfunction insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n    var doShift = index < context.length;\n    // prop does not exist in the list, add it in\n    context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n    setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n    if (doShift) {\n        // because the value was inserted midway into the array then we\n        // need to update all the shifted multi values' single value\n        // pointers to point to the newly shifted location\n        updateSinglePointerValues(context, index + 4 /* Size */);\n    }\n}\nfunction valueExists(value, isClassBased) {\n    if (isClassBased) {\n        return value ? true : false;\n    }\n    return value !== null;\n}\nfunction prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n    var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n    var initialIndex;\n    if (entryIsClassBased) {\n        flag |= 2 /* Class */;\n        initialIndex =\n            getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n    }\n    else {\n        initialIndex =\n            getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n    }\n    initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n    return pointers(flag, initialIndex, 0);\n}\nfunction hasValueChanged(flag, a, b) {\n    var isClassBased = flag & 2 /* Class */;\n    var hasValues = a && b;\n    var usesSanitizer = flag & 4 /* Sanitize */;\n    // the toString() comparison ensures that a value is checked\n    // ... otherwise (during sanitization bypassing) the === comparsion\n    // would fail since a new String() instance is created\n    if (!isClassBased && hasValues && usesSanitizer) {\n        // we know for sure we're dealing with strings at this point\n        return a.toString() !== b.toString();\n    }\n    // everything else is safe to check with a normal equality check\n    return a !== b;\n}\nvar ClassAndStylePlayerBuilder = /** @class */ (function () {\n    function ClassAndStylePlayerBuilder(factory, _element, _type) {\n        this._element = _element;\n        this._type = _type;\n        this._values = {};\n        this._dirty = false;\n        this._factory = factory;\n    }\n    ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n        if (this._values[prop] !== value) {\n            this._values[prop] = value;\n            this._dirty = true;\n        }\n    };\n    ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n        // if no values have been set here then this means the binding didn't\n        // change and therefore the binding values were not updated through\n        // `setValue` which means no new player will be provided.\n        if (this._dirty) {\n            var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n            this._values = {};\n            this._dirty = false;\n            return player;\n        }\n        return undefined;\n    };\n    return ClassAndStylePlayerBuilder;\n}());\nfunction getDirectiveIndexFromEntry(context, index) {\n    var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n    return value & 65535 /* BitMask */;\n}\nfunction getDirectiveIndexFromRegistry(context, directive) {\n    var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n    ngDevMode &&\n        assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n    return index > 0 ? index / 4 /* Size */ : 0;\n    // return index / DirectiveRegistryValuesIndex.Size;\n}\nfunction getDirectiveRegistryValuesIndexOf(directives, directive) {\n    for (var i = 0; i < directives.length; i += 4 /* Size */) {\n        if (directives[i] === directive) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction getInitialStylingValuesIndexOf(keyValues, key) {\n    for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n        if (keyValues[i] === key)\n            return i;\n    }\n    return -1;\n}\nfunction getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n    var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n        1 /* SinglePropValuesIndexOffset */];\n    var offsets = context[4 /* SinglePropOffsetPositions */];\n    var indexForOffset = singlePropOffsetRegistryIndex +\n        2 /* ValueStartPosition */ +\n        (isClassBased ?\n            offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n            0) +\n        offset;\n    return offsets[indexForOffset];\n}\nfunction getStyleSanitizer(context, directiveIndex) {\n    var dirs = context[1 /* DirectiveRegistryPosition */];\n    var value = dirs[directiveIndex * 4 /* Size */ +\n        3 /* StyleSanitizerOffset */] ||\n        dirs[3 /* StyleSanitizerOffset */] || null;\n    return value;\n}\nfunction isDirectiveDirty(context, directiveIndex) {\n    var dirs = context[1 /* DirectiveRegistryPosition */];\n    return dirs[directiveIndex * 4 /* Size */ +\n        2 /* DirtyFlagOffset */];\n}\nfunction setDirectiveDirty(context, directiveIndex, dirtyYes) {\n    var dirs = context[1 /* DirectiveRegistryPosition */];\n    dirs[directiveIndex * 4 /* Size */ +\n        2 /* DirtyFlagOffset */] = dirtyYes;\n}\nfunction allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n    // the code below relies the importance of directive's being tied to their\n    // index value. The index values for each directive are derived from being\n    // registered into the styling context directive registry. The most important\n    // directive is the parent component directive (the template) and each directive\n    // that is added after is considered less important than the previous entry. This\n    // prioritization of directives enables the styling algorithm to decide if a style\n    // or class should be allowed to be updated/replaced incase an earlier directive\n    // already wrote to the exact same style-property or className value. In other words\n    // ... this decides what to do if and when there is a collision.\n    if (currentValue) {\n        if (newValue) {\n            // if a directive index is lower than it always has priority over the\n            // previous directive's value...\n            return newDirectiveOwner <= currentDirectiveOwner;\n        }\n        else {\n            // only write a null value incase it's the same owner writing it.\n            // this avoids having a higher-priority directive write to null\n            // only to have a lesser-priority directive change right to a\n            // non-null value immediately afterwards.\n            return currentDirectiveOwner === newDirectiveOwner;\n        }\n    }\n    return true;\n}\n/**\n * This function is only designed to be called for `[class]` bindings when\n * `[ngClass]` (or something that uses `class` as an input) is present. Once\n * directive host bindings fully work for `[class]` and `[style]` inputs\n * then this can be deleted.\n */\nfunction getInitialClassNameValue(context) {\n    var className = context[6 /* CachedClassValueOrInitialClassString */];\n    if (className == null) {\n        className = '';\n        var initialClassValues = context[3 /* InitialClassValuesPosition */];\n        for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n            var isPresent = initialClassValues[i + 1];\n            if (isPresent) {\n                className += (className.length ? ' ' : '') + initialClassValues[i];\n            }\n        }\n        context[6 /* CachedClassValueOrInitialClassString */] = className;\n    }\n    return className;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nvar _CLEAN_PROMISE = Promise.resolve(null);\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n * bindings, refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n */\nfunction refreshDescendantViews(lView) {\n    var tView = lView[TVIEW];\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = false;\n    setFirstTemplatePass(false);\n    // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n    // This will be done in the update pass.\n    if (!isCreationMode(lView)) {\n        var checkNoChangesMode = getCheckNoChangesMode();\n        executeInitHooks(lView, tView, checkNoChangesMode);\n        refreshDynamicEmbeddedViews(lView);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode);\n        setHostBindings(tView, lView);\n    }\n    refreshChildComponents(tView.components);\n}\n/** Sets the host bindings for the current view. */\nfunction setHostBindings(tView, viewData) {\n    if (tView.expandoInstructions) {\n        var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n        setBindingRoot(bindingRootIndex);\n        var currentDirectiveIndex = -1;\n        var currentElementIndex = -1;\n        for (var i = 0; i < tView.expandoInstructions.length; i++) {\n            var instruction = tView.expandoInstructions[i];\n            if (typeof instruction === 'number') {\n                if (instruction <= 0) {\n                    // Negative numbers mean that we are starting new EXPANDO block and need to update\n                    // the current element and directive index.\n                    currentElementIndex = -instruction;\n                    // Injector block and providers are taken into account.\n                    var providerCount = tView.expandoInstructions[++i];\n                    bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                    currentDirectiveIndex = bindingRootIndex;\n                }\n                else {\n                    // This is either the injector size (so the binding root can skip over directives\n                    // and get to the first set of host bindings on this node) or the host var count\n                    // (to get to the next set of host bindings on this node).\n                    bindingRootIndex += instruction;\n                }\n                setBindingRoot(bindingRootIndex);\n            }\n            else {\n                // If it's not a number, it's a host binding function that needs to be executed.\n                if (instruction !== null) {\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                }\n                currentDirectiveIndex++;\n            }\n        }\n    }\n}\n/** Refreshes content queries for all directives in the given view. */\nfunction refreshContentQueries(tView) {\n    if (tView.contentQueries != null) {\n        for (var i = 0; i < tView.contentQueries.length; i += 2) {\n            var directiveDefIdx = tView.contentQueries[i];\n            var directiveDef = tView.data[directiveDefIdx];\n            directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n        }\n    }\n}\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(components) {\n    if (components != null) {\n        for (var i = 0; i < components.length; i++) {\n            componentRefresh(components[i]);\n        }\n    }\n}\nfunction createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n    var lView = tView.blueprint.slice();\n    lView[FLAGS] = flags | 1 /* CreationMode */ | 16 /* Attached */ | 32 /* RunInit */ |\n        2 /* FirstLViewPass */;\n    lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n    lView[CONTEXT] = context;\n    lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n    ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n    lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n    ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n    lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n    lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n    return lView;\n}\nfunction createNodeAtIndex(index, type, native, name, attrs) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    var adjustedIndex = index + HEADER_OFFSET;\n    ngDevMode &&\n        assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n    lView[adjustedIndex] = native;\n    var tNode = tView.data[adjustedIndex];\n    if (tNode == null) {\n        // TODO(misko): Refactor createTNode so that it does not depend on LView.\n        tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n    }\n    // Now link ourselves into the tree.\n    // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n    // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    var isParent = getIsParent();\n    if (previousOrParentTNode) {\n        if (isParent && previousOrParentTNode.child == null &&\n            (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n            // We are in the same view, which means we are adding content node to the parent view.\n            previousOrParentTNode.child = tNode;\n        }\n        else if (!isParent) {\n            previousOrParentTNode.next = tNode;\n        }\n    }\n    if (tView.firstChild == null) {\n        tView.firstChild = tNode;\n    }\n    setPreviousOrParentTNode(tNode);\n    setIsParent(true);\n    return tNode;\n}\nfunction createViewNode(index, view) {\n    // View nodes are not stored in data because they can be added / removed at runtime (which\n    // would cause indices to change). Their TNodes are instead stored in tView.node.\n    if (view[TVIEW].node == null) {\n        view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n    }\n    return view[HOST_NODE] = view[TVIEW].node;\n}\n/**\n * When elements are created dynamically after a view blueprint is created (e.g. through\n * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n * template passes.\n */\nfunction allocExpando(view) {\n    var tView = view[TVIEW];\n    if (tView.firstTemplatePass) {\n        tView.expandoStartIndex++;\n        tView.blueprint.push(null);\n        tView.data.push(null);\n        view.push(null);\n    }\n}\n/**\n * Used for creating the LViewNode of a dynamic embedded view,\n * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n */\nfunction createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n    var _isParent = getIsParent();\n    var _previousOrParentTNode = getPreviousOrParentTNode();\n    setIsParent(true);\n    setPreviousOrParentTNode(null);\n    var lView = createLView(declarationView, tView, context, 4 /* CheckAlways */);\n    lView[DECLARATION_VIEW] = declarationView;\n    if (queries) {\n        lView[QUERIES] = queries.createView();\n    }\n    createViewNode(-1, lView);\n    if (tView.firstTemplatePass) {\n        tView.node.injectorIndex = injectorIndex;\n    }\n    setIsParent(_isParent);\n    setPreviousOrParentTNode(_previousOrParentTNode);\n    return lView;\n}\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n */\nfunction renderEmbeddedTemplate(viewToRender, tView, context) {\n    var _isParent = getIsParent();\n    var _previousOrParentTNode = getPreviousOrParentTNode();\n    setIsParent(true);\n    setPreviousOrParentTNode(null);\n    var oldView;\n    if (viewToRender[FLAGS] & 128 /* IsRoot */) {\n        // This is a root view inside the view tree\n        tickRootContext(getRootContext(viewToRender));\n    }\n    else {\n        try {\n            setIsParent(true);\n            setPreviousOrParentTNode(null);\n            oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n            namespaceHTML();\n            tView.template(getRenderFlags(viewToRender), context);\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstTemplatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            viewToRender[TVIEW].firstTemplatePass = false;\n            setFirstTemplatePass(false);\n            refreshDescendantViews(viewToRender);\n        }\n        finally {\n            leaveView(oldView);\n            setIsParent(_isParent);\n            setPreviousOrParentTNode(_previousOrParentTNode);\n        }\n    }\n}\n/**\n * Retrieves a context at the level specified and saves it as the global, contextViewData.\n * Will get the next level up if level is not specified.\n *\n * This is used to save contexts of parent views so they can be bound in embedded views, or\n * in conjunction with reference() to bind a ref from a parent view.\n *\n * @param level The relative level of the view from which to grab context compared to contextVewData\n * @returns context\n */\nfunction nextContext(level) {\n    if (level === void 0) { level = 1; }\n    return nextContextImpl(level);\n}\nfunction renderComponentOrTemplate(hostView, context, templateFn) {\n    var rendererFactory = hostView[RENDERER_FACTORY];\n    var oldView = enterView(hostView, hostView[HOST_NODE]);\n    var normalExecutionPath = !getCheckNoChangesMode();\n    try {\n        if (normalExecutionPath && rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (isCreationMode(hostView)) {\n            // creation mode pass\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(1 /* Create */, context);\n            }\n            refreshDescendantViews(hostView);\n            hostView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        // update mode pass\n        templateFn && templateFn(2 /* Update */, context);\n        refreshDescendantViews(hostView);\n    }\n    finally {\n        if (normalExecutionPath && rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. Update block and create block are\n * always run separately.\n */\nfunction getRenderFlags(view) {\n    return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n}\n//////////////////////////\n//// Namespace\n//////////////////////////\nvar _currentNamespace = null;\nfunction namespaceSVG() {\n    _currentNamespace = 'http://www.w3.org/2000/svg';\n}\nfunction namespaceMathML() {\n    _currentNamespace = 'http://www.w3.org/1998/MathML/';\n}\nfunction namespaceHTML() {\n    _currentNamespace = null;\n}\n//////////////////////////\n//// Element\n//////////////////////////\n/**\n * Creates an empty element using {@link elementStart} and {@link elementEnd}\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction element(index, name, attrs, localRefs) {\n    elementStart(index, name, attrs, localRefs);\n    elementEnd();\n}\n/**\n * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n * The instruction must later be followed by `elementContainerEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param attrs Set of attributes to be used when matching directives.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n * matching purposes and setting initial inputs of directives.\n */\nfunction elementContainerStart(index, attrs, localRefs) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    var renderer = lView[RENDERER];\n    var tagName = 'ng-container';\n    ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateComment++;\n    var native = renderer.createComment(ngDevMode ? tagName : '');\n    ngDevMode && assertDataInRange(lView, index - 1);\n    var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n    appendChild(native, tNode, lView);\n    createDirectivesAndLocals(tView, lView, localRefs);\n    attachPatchData(native, lView);\n}\n/** Mark the end of the <ng-container>. */\nfunction elementContainerEnd() {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    if (getIsParent()) {\n        setIsParent(false);\n    }\n    else {\n        ngDevMode && assertHasParent(getPreviousOrParentTNode());\n        previousOrParentTNode = previousOrParentTNode.parent;\n        setPreviousOrParentTNode(previousOrParentTNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n    var currentQueries = lView[QUERIES];\n    if (currentQueries) {\n        lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n    }\n    queueLifecycleHooks(tView, previousOrParentTNode);\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n */\nfunction elementStart(index, name, attrs, localRefs) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    var native = elementCreate(name);\n    ngDevMode && assertDataInRange(lView, index - 1);\n    var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n    if (attrs) {\n        // it's important to only prepare styling-related datastructures once for a given\n        // tNode and not each time an element is created. Also, the styling code is designed\n        // to be patched and constructed at various points, but only up until the first element\n        // is created. Then the styling context is locked and can only be instantiated for each\n        // successive element that is created.\n        if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        setUpAttributes(native, attrs);\n    }\n    appendChild(native, tNode, lView);\n    createDirectivesAndLocals(tView, lView, localRefs);\n    // any immediate children of a component or template container must be pre-emptively\n    // monkey-patched with the component view data so that the element can be inspected\n    // later on using any element discovery utility methods (see `element_discovery.ts`)\n    if (getElementDepthCount() === 0) {\n        attachPatchData(native, lView);\n    }\n    increaseElementDepthCount();\n    // if a directive contains a host binding for \"class\" then all class-based data will\n    // flow through that (except for `[class.prop]` bindings). This also includes initial\n    // static class values as well. (Note that this will be fixed once map-based `[style]`\n    // and `[class]` bindings work for multiple directives.)\n    if (tView.firstTemplatePass) {\n        var inputData = initializeTNodeInputs(tNode);\n        if (inputData && inputData.hasOwnProperty('class')) {\n            tNode.flags |= 8 /* hasClassInput */;\n        }\n    }\n    // There is no point in rendering styles when a class directive is present since\n    // it will take that over for us (this will be removed once #FW-882 is in).\n    if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n        renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n    }\n}\n/**\n * Creates a native element from a tag name, using a renderer.\n * @param name the tag name\n * @param overriddenRenderer Optional A renderer to override the default one\n * @returns the element created\n */\nfunction elementCreate(name, overriddenRenderer) {\n    var native;\n    var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n    if (isProceduralRenderer(rendererToUse)) {\n        native = rendererToUse.createElement(name, _currentNamespace);\n    }\n    else {\n        if (_currentNamespace === null) {\n            native = rendererToUse.createElement(name);\n        }\n        else {\n            native = rendererToUse.createElementNS(_currentNamespace, name);\n        }\n    }\n    return native;\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param localRefs Local refs of the node in question\n * @param localRefExtractor mapping function that extracts local ref value from TNode\n */\nfunction createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n    if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n    if (!getBindingsEnabled())\n        return;\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    if (getFirstTemplatePass()) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n    }\n    instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n    invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n    saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LView in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n    var localNames = tNode.localNames;\n    if (localNames) {\n        var localIndex = tNode.index + 1;\n        for (var i = 0; i < localNames.length; i += 2) {\n            var index = localNames[i + 1];\n            var value = index === -1 ?\n                localRefExtractor(tNode, viewData) :\n                viewData[index];\n            viewData[localIndex++] = value;\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param templateFn The template from which to get static data\n * @param consts The number of nodes, local refs, and pipes in this view\n * @param vars The number of bindings and pure function bindings in this view\n * @param directives Directive defs that should be saved on TView\n * @param pipes Pipe defs that should be saved on TView\n * @returns TView\n */\nfunction getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n    // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n    // 1. It is a megamorphic call on each invocation.\n    // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n    //    outer template invocation, which means that no such property will exist\n    // Correct solution is to only put `ngPrivateData` on the Component template\n    // and not on embedded templates.\n    return templateFn.ngPrivateData ||\n        (templateFn.ngPrivateData =\n            createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n}\n/**\n * Creates a TView instance\n *\n * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param templateFn Template function\n * @param consts The number of nodes, local refs, and pipes in this template\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n */\nfunction createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n    ngDevMode && ngDevMode.tView++;\n    var bindingStartIndex = HEADER_OFFSET + consts;\n    // This length does not yet contain host bindings from child directives because at this point,\n    // we don't know which directives are active on this template. As soon as a directive is matched\n    // that has a host binding, we will update the blueprint with that def's hostVars count.\n    var initialViewLength = bindingStartIndex + vars;\n    var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n    return blueprint[TVIEW] = {\n        id: viewIndex,\n        blueprint: blueprint,\n        template: templateFn,\n        viewQuery: viewQuery,\n        node: null,\n        data: blueprint.slice(),\n        childIndex: -1,\n        bindingStartIndex: bindingStartIndex,\n        expandoStartIndex: initialViewLength,\n        expandoInstructions: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        cleanup: null,\n        contentQueries: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        firstChild: null,\n    };\n}\nfunction createViewBlueprint(bindingStartIndex, initialViewLength) {\n    var blueprint = new Array(initialViewLength)\n        .fill(null, 0, bindingStartIndex)\n        .fill(NO_CHANGE, bindingStartIndex);\n    blueprint[CONTAINER_INDEX] = -1;\n    blueprint[BINDING_INDEX] = bindingStartIndex;\n    return blueprint;\n}\nfunction setUpAttributes(native, attrs) {\n    var renderer = getLView()[RENDERER];\n    var isProc = isProceduralRenderer(renderer);\n    var i = 0;\n    while (i < attrs.length) {\n        var attrName = attrs[i++];\n        if (typeof attrName == 'number') {\n            if (attrName === 0 /* NamespaceURI */) {\n                // Namespaced attributes\n                var namespaceURI = attrs[i++];\n                var attrName_1 = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer\n                        .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n            }\n            else {\n                // All other `AttributeMarker`s are ignored here.\n                break;\n            }\n        }\n        else {\n            /// attrName is string;\n            var attrVal = attrs[i++];\n            if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n            }\n        }\n    }\n}\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    var defaultRenderer = factory.createRenderer(null, null);\n    var rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener.\n */\nfunction listener(eventName, listenerFn, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    var lView = getLView();\n    var tNode = getPreviousOrParentTNode();\n    var tView = lView[TVIEW];\n    var firstTemplatePass = tView.firstTemplatePass;\n    var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n    // add native event listener - applicable to elements only\n    if (tNode.type === 3 /* Element */) {\n        var native = getNativeByTNode(tNode, lView);\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        var renderer = lView[RENDERER];\n        var lCleanup = getCleanup(lView);\n        var lCleanupIndex = lCleanup.length;\n        var useCaptureOrSubIdx = useCapture;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var cleanupFn = renderer.listen(native, eventName, listenerFn);\n            lCleanup.push(listenerFn, cleanupFn);\n            useCaptureOrSubIdx = lCleanupIndex + 1;\n        }\n        else {\n            var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            lCleanup.push(wrappedListener);\n        }\n        tCleanup && tCleanup.push(eventName, tNode.index, lCleanupIndex, useCaptureOrSubIdx);\n    }\n    // subscribe to directive outputs\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n    }\n    var outputs = tNode.outputs;\n    var props;\n    if (outputs && (props = outputs[eventName])) {\n        var propsLength = props.length;\n        if (propsLength) {\n            var lCleanup = getCleanup(lView);\n            for (var i = 0; i < propsLength; i += 2) {\n                ngDevMode && assertDataInRange(lView, props[i]);\n                var subscription = lView[props[i]][props[i + 1]].subscribe(listenerFn);\n                var idx = lCleanup.length;\n                lCleanup.push(listenerFn, subscription);\n                tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n            }\n        }\n    }\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n */\nfunction storeCleanupWithContext(lView, context, cleanupFn) {\n    var lCleanup = getCleanup(lView);\n    lCleanup.push(context);\n    if (lView[TVIEW].firstTemplatePass) {\n        getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n    }\n}\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n */\nfunction storeCleanupFn(view, cleanupFn) {\n    getCleanup(view).push(cleanupFn);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n    }\n}\n/** Mark the end of the element. */\nfunction elementEnd() {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    if (getIsParent()) {\n        setIsParent(false);\n    }\n    else {\n        ngDevMode && assertHasParent(getPreviousOrParentTNode());\n        previousOrParentTNode = previousOrParentTNode.parent;\n        setPreviousOrParentTNode(previousOrParentTNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n    var lView = getLView();\n    var currentQueries = lView[QUERIES];\n    if (currentQueries) {\n        lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n    }\n    queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n    decreaseElementDepthCount();\n    // this is fired at the end of elementEnd because ALL of the stylingBindings code\n    // (for directives and the template) have now executed which means the styling\n    // context can be instantiated properly.\n    if (hasClassInput(previousOrParentTNode)) {\n        var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n        setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n    }\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param number index The index of the element in the data array\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        var lView = getLView();\n        var renderer = lView[RENDERER];\n        var element_1 = getNativeByIndex(index, lView);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                element_1.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                element_1.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n * @param nativeOnly Whether or not we should only set native properties and skip input check\n * (this is necessary for host property bindings)\n */\nfunction elementProperty(index, propName, value, sanitizer, nativeOnly) {\n    elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n}\n/**\n * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n *\n * This instruction is for compatibility purposes and is designed to ensure that a\n * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n * the component's renderer. Normally all host bindings are evaluated with the parent\n * component's renderer, but, in the case of animation @triggers, they need to be\n * evaluated with the sub components renderer (because that's where the animation\n * triggers are defined).\n *\n * Do not use this instruction as a replacement for `elementProperty`. This instruction\n * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n * @param nativeOnly Whether or not we should only set native properties and skip input check\n * (this is necessary for host property bindings)\n */\nfunction componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n    elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n}\nfunction loadComponentRenderer(tNode, lView) {\n    var componentLView = lView[tNode.index];\n    return componentLView[RENDERER];\n}\nfunction elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n    if (value === NO_CHANGE)\n        return;\n    var lView = getLView();\n    var element = getNativeByIndex(index, lView);\n    var tNode = getTNode(index, lView);\n    var inputData;\n    var dataValue;\n    if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n        (dataValue = inputData[propName])) {\n        setInputsForProperty(lView, dataValue, value);\n        if (isComponent(tNode))\n            markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n        if (ngDevMode) {\n            if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n    }\n    else if (tNode.type === 3 /* Element */) {\n        var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? sanitizer(value) : value;\n        ngDevMode && ngDevMode.rendererSetProperty++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.setProperty(element, propName, value);\n        }\n        else if (!isAnimationProp(propName)) {\n            element.setProperty ? element.setProperty(propName, value) :\n                element[propName] = value;\n        }\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param type The type of the node\n * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nfunction createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    ngDevMode && ngDevMode.tNode++;\n    var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n    // Parents cannot cross component boundaries because components will be used in multiple places,\n    // so it's only set if the view is the same.\n    var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n    var tParent = parentInSameView ? parent : null;\n    return {\n        type: type,\n        index: adjustedIndex,\n        injectorIndex: tParent ? tParent.injectorIndex : -1,\n        directiveStart: -1,\n        directiveEnd: -1,\n        flags: 0,\n        providerIndexes: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        tViews: tViews,\n        next: null,\n        child: null,\n        parent: tParent,\n        detached: null,\n        stylingTemplate: null,\n        projection: null\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n */\nfunction setInputsForProperty(lView, inputs, value) {\n    for (var i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(lView, inputs[i]);\n        lView[inputs[i]][inputs[i + 1]] = value;\n    }\n}\nfunction setNgReflectProperties(lView, element, type, inputs, value) {\n    var _a;\n    for (var i = 0; i < inputs.length; i += 2) {\n        var renderer = lView[RENDERER];\n        var attrName = normalizeDebugBindingName(inputs[i + 1]);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            isProceduralRenderer(renderer) ?\n                renderer.setAttribute(element, attrName, debugValue) :\n                element.setAttribute(attrName, debugValue);\n        }\n        else if (value !== undefined) {\n            var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, value_1);\n            }\n            else {\n                element.textContent = value_1;\n            }\n        }\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param tNodeFlags node flags\n * @param direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNode, direction) {\n    var tView = getLView()[TVIEW];\n    var propStore = null;\n    var start = tNode.directiveStart;\n    var end = tNode.directiveEnd;\n    if (end > start) {\n        var isInput = direction === 0 /* Input */;\n        var defs = tView.data;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    var internalName = propertyAliasMap[publicName];\n                    var hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Assign any inline style values to the element during creation mode.\n *\n * This instruction is meant to be called during creation mode to register all\n * dynamic style and class bindings on the element. Note for static values (no binding)\n * see `elementStart` and `elementHostAttrs`.\n *\n * @param classBindingNames An array containing bindable class names.\n *        The `elementClassProp` refers to the class name by index in this array.\n *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n * @param styleBindingNames An array containing bindable style properties.\n *        The `elementStyleProp` refers to the class name by index in this array.\n *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n *        property values that are applied to the element (during rendering).\n *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n * @param directive A directive instance the styling is associated with. If not provided\n *        current view's controller instance is assumed.\n *\n * @publicApi\n */\nfunction elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n    var tNode = getPreviousOrParentTNode();\n    if (!tNode.stylingTemplate) {\n        tNode.stylingTemplate = createEmptyStylingContext();\n    }\n    updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n}\n/**\n * Assign static styling values to a host element.\n *\n * NOTE: This instruction is meant to used from `hostBindings` function only.\n *\n * @param directive A directive instance the styling is associated with.\n * @param attrs An array containing class and styling information. The values must be marked with\n *              `AttributeMarker`.\n *\n *        ```\n *        var attrs = [AttributeMarker.Classes, 'foo', 'bar',\n *                     AttributeMarker.Styles, 'width', '100px', 'height, '200px']\n *        elementHostAttrs(directive, attrs);\n *        ```\n *\n * @publicApi\n */\nfunction elementHostAttrs(directive, attrs) {\n    var tNode = getPreviousOrParentTNode();\n    if (!tNode.stylingTemplate) {\n        tNode.stylingTemplate = initializeStaticContext(attrs);\n    }\n    patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, directive);\n}\n/**\n * Apply styling binding to the element.\n *\n * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n * if any styling bindings have changed then the changes are flushed to the element.\n *\n *\n * @param index Index of the element's with which styling is associated.\n * @param directive Directive instance that is attempting to change styling. (Defaults to the\n *        component of the current view).\ncomponents\n *\n * @publicApi\n */\nfunction elementStylingApply(index, directive) {\n    var lView = getLView();\n    var isFirstRender = (lView[FLAGS] & 2 /* FirstLViewPass */) !== 0;\n    var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n    if (totalPlayersQueued > 0) {\n        var rootContext = getRootContext(lView);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n}\n/**\n * Update a style bindings value on an element.\n *\n * If the style value is `null` then it will be removed from the element\n * (or assigned a different value depending if there are any styles placed\n * on the element with `elementStyle` or any styles that are present\n * from when the element was created (with `elementStyling`).\n *\n * (Note that the styling element is updated as part of `elementStylingApply`.)\n *\n * @param index Index of the element's with which styling is associated.\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `elementStlyingBindings`.\n * @param value New value to write (null to remove). Note that if a directive also\n *        attempts to write to the same binding value then it will only be able to\n *        do so if the template binding value is `null` (or doesn't exist at all).\n * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n *        Note that when a suffix is provided then the underlying sanitizer will\n *        be ignored.\n * @param directive Directive instance that is attempting to change styling. (Defaults to the\n *        component of the current view).\ncomponents\n *\n * @publicApi\n */\nfunction elementStyleProp(index, styleIndex, value, suffix, directive) {\n    var valueToAdd = null;\n    if (value !== null) {\n        if (suffix) {\n            // when a suffix is applied then it will bypass\n            // sanitization entirely (b/c a new string is created)\n            valueToAdd = stringify$1(value) + suffix;\n        }\n        else {\n            // sanitization happens by dealing with a String value\n            // this means that the string value will be passed through\n            // into the style rendering later (which is where the value\n            // will be sanitized before it is applied)\n            valueToAdd = value;\n        }\n    }\n    updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n}\n/**\n * Add or remove a class via a class binding on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n * the class itself must already be applied using `elementStyling` within\n * the creation block.\n *\n * @param index Index of the element's with which styling is associated.\n * @param classIndex Index of class to toggle. This index value refers to the\n *        index of the class in the class bindings array that was passed into\n *        `elementStlyingBindings` (which is meant to be called before this\n *        function is).\n * @param value A true/false value which will turn the class on or off.\n * @param directive Directive instance that is attempting to change styling. (Defaults to the\n *        component of the current view).\ncomponents\n *\n * @publicApi\n */\nfunction elementClassProp(index, classIndex, value, directive) {\n    var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n    updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n}\n/**\n * Update style and/or class bindings using object literal.\n *\n * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n * bindings. When styles are applied to the Element they will then be placed with respect to\n * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n * removed from the element.\n *\n * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n *\n * @param index Index of the element's with which styling is associated.\n * @param classes A key/value style map of CSS classes that will be added to the given element.\n *        Any missing classes (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's list of CSS classes.\n * @param styles A key/value style map of the styles that will be applied to the given element.\n *        Any missing styles (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's styling.\n * @param directive Directive instance that is attempting to change styling. (Defaults to the\n *        component of the current view).\n *\n * @publicApi\n */\nfunction elementStylingMap(index, classes, styles, directive) {\n    if (directive != undefined)\n        return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n    var lView = getLView();\n    var tNode = getTNode(index, lView);\n    var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n    if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n        var initialClasses = getInitialClassNameValue(stylingContext);\n        var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n        setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n    }\n    else {\n        updateStylingMap(stylingContext, classes, styles);\n    }\n}\n/* START OF HACK BLOCK */\nfunction hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n    throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n}\n/* END OF HACK BLOCK */\n//////////////////////////\n//// Text\n//////////////////////////\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array\n * @param value Value to write. This value will be stringified.\n */\nfunction text(index, value) {\n    var lView = getLView();\n    ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    var textNative = createTextNode(value, lView[RENDERER]);\n    var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n    // Text nodes are self closing.\n    setIsParent(false);\n    appendChild(textNative, tNode, lView);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @param index Index of the node in the data array.\n * @param value Stringified value to write.\n */\nfunction textBinding(index, value) {\n    if (value !== NO_CHANGE) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element_2 = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element_2, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n            element_2.textContent = stringify$1(value);\n    }\n}\n//////////////////////////\n//// Directive\n//////////////////////////\n/**\n * Instantiate a root component.\n */\nfunction instantiateRootComponent(tView, viewData, def) {\n    var rootTNode = getPreviousOrParentTNode();\n    if (tView.firstTemplatePass) {\n        if (def.providersResolver)\n            def.providersResolver(def);\n        generateExpandoInstructionBlock(tView, rootTNode, 1);\n        baseResolveDirective(tView, viewData, def, def.factory);\n    }\n    var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n    postProcessBaseDirective(viewData, rootTNode, directive, def);\n    return directive;\n}\n/**\n * Resolve the matched directives on a node.\n */\nfunction resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n    // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n    ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n    var exportsMap = localRefs ? { '': -1 } : null;\n    if (directives) {\n        initNodeFlags(tNode, tView.data.length, directives.length);\n        // When the same token is provided by several directives on the same node, some rules apply in\n        // the viewEngine:\n        // - viewProviders have priority over providers\n        // - the last directive in NgModule.declarations has priority over the previous one\n        // So to match these rules, the order in which providers are added in the arrays is very\n        // important.\n        for (var i = 0; i < directives.length; i++) {\n            var def = directives[i];\n            if (def.providersResolver)\n                def.providersResolver(def);\n        }\n        generateExpandoInstructionBlock(tView, tNode, directives.length);\n        for (var i = 0; i < directives.length; i++) {\n            var def = directives[i];\n            var directiveDefIdx = tView.data.length;\n            baseResolveDirective(tView, viewData, def, def.factory);\n            saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/**\n * Instantiate all the directives that were previously resolved on the current node.\n */\nfunction instantiateAllDirectives(tView, lView, tNode) {\n    var start = tNode.directiveStart;\n    var end = tNode.directiveEnd;\n    if (!getFirstTemplatePass() && start < end) {\n        getOrCreateNodeInjectorForNode(tNode, lView);\n    }\n    for (var i = start; i < end; i++) {\n        var def = tView.data[i];\n        if (isComponentDef(def)) {\n            addComponentLogic(lView, tNode, def);\n        }\n        var directive = getNodeInjectable(tView.data, lView, i, tNode);\n        postProcessDirective(lView, directive, def, i);\n    }\n}\nfunction invokeDirectivesHostBindings(tView, viewData, tNode) {\n    var start = tNode.directiveStart;\n    var end = tNode.directiveEnd;\n    var expando = tView.expandoInstructions;\n    var firstTemplatePass = getFirstTemplatePass();\n    for (var i = start; i < end; i++) {\n        var def = tView.data[i];\n        var directive = viewData[i];\n        if (def.hostBindings) {\n            var previousExpandoLength = expando.length;\n            setCurrentDirectiveDef(def);\n            def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n            // `hostBindings` function may or may not contain `allocHostVars` call\n            // (e.g. it may not if it only contains host listeners), so we need to check whether\n            // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n            // expando block, to make sure we execute it for DI cycle\n            if (previousExpandoLength === expando.length && firstTemplatePass) {\n                expando.push(def.hostBindings);\n            }\n        }\n        else if (firstTemplatePass) {\n            expando.push(null);\n        }\n    }\n}\n/**\n* Generates a new block in TView.expandoInstructions for this node.\n*\n* Each expando block starts with the element index (turned negative so we can distinguish\n* it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n*/\nfunction generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n    ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n    var elementIndex = -(tNode.index - HEADER_OFFSET);\n    var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n    var providerCount = tView.data.length - providerStartIndex;\n    (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n}\n/**\n* On the first template pass, we need to reserve space for host binding values\n* after directives are matched (so all directives are saved, then bindings).\n* Because we are updating the blueprint, we only need to do this once.\n*/\nfunction prefillHostVars(tView, lView, totalHostVars) {\n    ngDevMode &&\n        assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n    for (var i = 0; i < totalHostVars; i++) {\n        lView.push(NO_CHANGE);\n        tView.blueprint.push(NO_CHANGE);\n        tView.data.push(null);\n    }\n}\n/**\n * Process a directive on the current node after its creation.\n */\nfunction postProcessDirective(viewData, directive, def, directiveDefIdx) {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n    ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n    if (previousOrParentTNode && previousOrParentTNode.attrs) {\n        setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n    }\n    if (def.contentQueries) {\n        def.contentQueries(directiveDefIdx);\n    }\n    if (isComponentDef(def)) {\n        var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n        componentView[CONTEXT] = directive;\n    }\n}\n/**\n * A lighter version of postProcessDirective() that is used for the root component.\n */\nfunction postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n    var native = getNativeByTNode(previousOrParentTNode, lView);\n    ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent(getIsParent());\n    attachPatchData(directive, lView);\n    if (native) {\n        attachPatchData(native, lView);\n    }\n    // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n    if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n        setUpAttributes(native, def.attributes);\n    }\n}\n/**\n* Matches the current node against all available selectors.\n* If a component is matched (at most one), it is returned in first position in the array.\n*/\nfunction findDirectiveMatches(tView, viewData, tNode) {\n    ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n    var registry = tView.directiveRegistry;\n    var matches = null;\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                matches || (matches = []);\n                diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                if (isComponentDef(def)) {\n                    if (tNode.flags & 1 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 1 /* isComponent */;\n                    // The component is always stored first with directives after.\n                    matches.unshift(def);\n                }\n                else {\n                    matches.push(def);\n                }\n            }\n        }\n    }\n    return matches;\n}\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nfunction queueComponentIndexForCheck(previousOrParentTNode) {\n    ngDevMode &&\n        assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n    var tView = getLView()[TVIEW];\n    (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n}\n/**\n * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n * CD.\n*/\nfunction queueHostBindingForCheck(tView, def, hostVars) {\n    ngDevMode &&\n        assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n    var expando = tView.expandoInstructions;\n    var length = expando.length;\n    // Check whether a given `hostBindings` function already exists in expandoInstructions,\n    // which can happen in case directive definition was extended from base definition (as a part of\n    // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n    // list, we just increase the number of host vars associated with that function, but do not add it\n    // into the list again.\n    if (length >= 2 && expando[length - 2] === def.hostBindings) {\n        expando[length - 1] = expando[length - 1] + hostVars;\n    }\n    else {\n        expando.push(def.hostBindings, hostVars);\n    }\n}\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        var localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (var i = 0; i < localRefs.length; i += 2) {\n            var index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n* Builds up an export map as directives are created, so local refs can be quickly mapped\n* to their directive instances.\n*/\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if (def.template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Initializes the flags on the current node, setting all indices to the initial index,\n * the directive count to 0, and adding the isComponent flag.\n * @param index the initial index\n */\nfunction initNodeFlags(tNode, index, numberOfDirectives) {\n    ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n    var flags = tNode.flags;\n    ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n    ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n    // When the first directive is created on a node, save the index\n    tNode.flags = flags & 1 /* isComponent */;\n    tNode.directiveStart = index;\n    tNode.directiveEnd = index + numberOfDirectives;\n    tNode.providerIndexes = index;\n}\nfunction baseResolveDirective(tView, viewData, def, directiveFactory) {\n    tView.data.push(def);\n    var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n    tView.blueprint.push(nodeInjectorFactory);\n    viewData.push(nodeInjectorFactory);\n}\nfunction addComponentLogic(lView, previousOrParentTNode, def) {\n    var native = getNativeByTNode(previousOrParentTNode, lView);\n    var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n    // Only component views should be added to the view tree directly. Embedded views are\n    // accessed through their containers because they may be removed / re-added later.\n    var rendererFactory = lView[RENDERER_FACTORY];\n    var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n    componentView[HOST_NODE] = previousOrParentTNode;\n    // Component view will always be created before any injected LContainers,\n    // so this is a regular element, wrap it with the component view\n    componentView[HOST] = lView[previousOrParentTNode.index];\n    lView[previousOrParentTNode.index] = componentView;\n    if (getFirstTemplatePass()) {\n        queueComponentIndexForCheck(previousOrParentTNode);\n    }\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    var initialInputData = tNode.initialInputs;\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    var initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var i = 0; i < initialInputs.length; i += 2) {\n            instance[initialInputs[i]] = initialInputs[i + 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var attrs = tNode.attrs;\n    var i = 0;\n    while (i < attrs.length) {\n        var attrName = attrs[i];\n        if (attrName === 3 /* SelectOnly */)\n            break;\n        if (attrName === 0 /* NamespaceURI */) {\n            // We do not allow inputs on namespaced attributes.\n            i += 4;\n            continue;\n        }\n        var minifiedInputName = inputs[attrName];\n        var attrValue = attrs[i + 1];\n        if (minifiedInputName !== undefined) {\n            var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrValue);\n        }\n        i += 2;\n    }\n    return initialInputData;\n}\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param hostNative The host element for the LContainer\n * @param hostTNode The host TNode for the LContainer\n * @param currentView The parent view of the LContainer\n * @param native The native comment element\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nfunction createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n    return [\n        isForViewContainerRef ? -1 : 0,\n        [],\n        currentView,\n        null,\n        null,\n        hostNative,\n        native,\n        getRenderParent(hostTNode, currentView) // renderParent\n    ];\n}\n/**\n * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n *\n * <ng-template #foo>\n *    <div></div>\n * </ng-template>\n *\n * @param index The index of the container in the data array\n * @param templateFn Inline template\n * @param consts The number of nodes, local refs, and pipes for this template\n * @param vars The number of bindings for this template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n * @param localRefExtractor A function which extracts local-refs values from the template.\n *        Defaults to the current element associated with the local-ref.\n */\nfunction template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    // TODO: consider a separate node type for templates\n    var tNode = containerInternal(index, tagName || null, attrs || null);\n    if (getFirstTemplatePass()) {\n        tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n    }\n    createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n    var currentQueries = lView[QUERIES];\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    var native = getNativeByTNode(previousOrParentTNode, lView);\n    attachPatchData(native, lView);\n    if (currentQueries) {\n        lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n    }\n    queueLifecycleHooks(tView, tNode);\n    setIsParent(false);\n}\n/**\n * Creates an LContainer for inline views, e.g.\n *\n * % if (showing) {\n *   <div></div>\n * % }\n *\n * @param index The index of the container in the data array\n */\nfunction container(index) {\n    var tNode = containerInternal(index, null, null);\n    getFirstTemplatePass() && (tNode.tViews = []);\n    setIsParent(false);\n}\nfunction containerInternal(index, tagName, attrs) {\n    var lView = getLView();\n    ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n    var adjustedIndex = index + HEADER_OFFSET;\n    var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n    ngDevMode && ngDevMode.rendererCreateComment++;\n    var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n    var lContainer = lView[adjustedIndex] =\n        createLContainer(lView[adjustedIndex], tNode, lView, comment);\n    appendChild(comment, tNode, lView);\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n    var currentQueries = lView[QUERIES];\n    if (currentQueries) {\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer[QUERIES] = currentQueries.container();\n    }\n    ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n    return tNode;\n}\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n */\nfunction containerRefreshStart(index) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    var previousOrParentTNode = loadInternal(tView.data, index);\n    setPreviousOrParentTNode(previousOrParentTNode);\n    ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n    setIsParent(true);\n    lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n    // We need to execute init hooks here so ngOnInit hooks are called in top level views\n    // before they are called in embedded views (for backwards compatibility).\n    executeInitHooks(lView, tView, getCheckNoChangesMode());\n}\n/**\n * Marks the end of the LContainer.\n *\n * Marking the end of LContainer is the time when to child views get inserted or removed.\n */\nfunction containerRefreshEnd() {\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    if (getIsParent()) {\n        setIsParent(false);\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n        ngDevMode && assertHasParent(previousOrParentTNode);\n        previousOrParentTNode = previousOrParentTNode.parent;\n        setPreviousOrParentTNode(previousOrParentTNode);\n    }\n    ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n    var lContainer = getLView()[previousOrParentTNode.index];\n    var nextIndex = lContainer[ACTIVE_INDEX];\n    // remove extra views at the end of the container\n    while (nextIndex < lContainer[VIEWS].length) {\n        removeView(lContainer, previousOrParentTNode, nextIndex);\n    }\n}\n/**\n * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n * by executing an associated template function.\n */\nfunction refreshDynamicEmbeddedViews(lView) {\n    for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n        // Note: current can be an LView or an LContainer instance, but here we are only interested\n        // in LContainer. We can tell it's an LContainer because its length is less than the LView\n        // header.\n        if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n            var container_1 = current;\n            for (var i = 0; i < container_1[VIEWS].length; i++) {\n                var dynamicViewData = container_1[VIEWS][i];\n                // The directives and pipes are not needed here as an existing view is only being refreshed.\n                ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n            }\n        }\n    }\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param lContainer to search for views\n * @param tContainerNode to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n * @returns index of a found view or -1 if not found\n */\nfunction scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n    var views = lContainer[VIEWS];\n    for (var i = startIdx; i < views.length; i++) {\n        var viewAtPositionId = views[i][TVIEW].id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(lContainer, tContainerNode, i);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the searchdef.cont here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId, consts, vars) {\n    var lView = getLView();\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    // The previous node can be a view node if we are processing an inline for loop\n    var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n        previousOrParentTNode.parent :\n        previousOrParentTNode;\n    var lContainer = lView[containerTNode.index];\n    ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n    var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n    if (viewToRender) {\n        setIsParent(true);\n        enterView(viewToRender, viewToRender[TVIEW].node);\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 4 /* CheckAlways */);\n        if (lContainer[QUERIES]) {\n            viewToRender[QUERIES] = lContainer[QUERIES].createView();\n        }\n        createViewNode(viewBlockId, viewToRender);\n        enterView(viewToRender, viewToRender[TVIEW].node);\n    }\n    if (lContainer) {\n        if (isCreationMode(viewToRender)) {\n            // it is a new view, insert it into collection of views for a given container\n            insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n        }\n        lContainer[ACTIVE_INDEX]++;\n    }\n    return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param viewIndex The index of the TView in TNode.tViews\n * @param consts The number of nodes, local refs, and pipes in this template\n * @param vars The number of bindings and pure function bindings in this template\n * @param container The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var containerTViews = parent.tViews;\n    ngDevMode && assertDefined(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n    }\n    return containerTViews[viewIndex];\n}\n/** Marks the end of an embedded view. */\nfunction embeddedViewEnd() {\n    var lView = getLView();\n    var viewHost = lView[HOST_NODE];\n    if (isCreationMode(lView)) {\n        refreshDescendantViews(lView); // creation mode pass\n        lView[FLAGS] &= ~1 /* CreationMode */;\n    }\n    refreshDescendantViews(lView); // update mode pass\n    leaveView(lView[PARENT]);\n    setPreviousOrParentTNode(viewHost);\n    setIsParent(false);\n}\n/////////////\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n */\nfunction componentRefresh(adjustedElementIndex) {\n    var lView = getLView();\n    ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n    var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n    ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView[FLAGS] & (4 /* CheckAlways */ | 8 /* Dirty */)) {\n        syncViewWithBlueprint(hostView);\n        checkView(hostView, hostView[CONTEXT]);\n    }\n}\n/**\n * Syncs an LView instance with its blueprint if they have gotten out of sync.\n *\n * Typically, blueprints and their view instances should always be in sync, so the loop here\n * will be skipped. However, consider this case of two components side-by-side:\n *\n * App template:\n * ```\n * <comp></comp>\n * <comp></comp>\n * ```\n *\n * The following will happen:\n * 1. App template begins processing.\n * 2. First <comp> is matched as a component and its LView is created.\n * 3. Second <comp> is matched as a component and its LView is created.\n * 4. App template completes processing, so it's time to check child templates.\n * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n * <comp> template, but its LView was created before this update, so it is out of sync.\n *\n * Note that embedded views inside ngFor loops will never be out of sync because these views\n * are processed as soon as they are created.\n *\n * @param componentView The view to sync\n */\nfunction syncViewWithBlueprint(componentView) {\n    var componentTView = componentView[TVIEW];\n    for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n        componentView[i] = componentTView.blueprint[i];\n    }\n}\n/** Returns a boolean for whether the view is attached */\nfunction viewAttached(view) {\n    return (view[FLAGS] & 16 /* Attached */) === 16 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param selectors A collection of parsed CSS selectors\n * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n */\nfunction projectionDef(selectors, textSelectors) {\n    var componentNode = findComponentView(getLView())[HOST_NODE];\n    if (!componentNode.projection) {\n        var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n        var pData = componentNode.projection =\n            new Array(noOfNodeBuckets).fill(null);\n        var tails = pData.slice();\n        var componentChild = componentNode.child;\n        while (componentChild !== null) {\n            var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n            var nextNode = componentChild.next;\n            if (tails[bucketIndex]) {\n                tails[bucketIndex].next = componentChild;\n            }\n            else {\n                pData[bucketIndex] = componentChild;\n                componentChild.next = null;\n            }\n            tails[bucketIndex] = componentChild;\n            componentChild = nextNode;\n        }\n    }\n}\n/**\n * Stack used to keep track of projection nodes in projection() instruction.\n *\n * This is deliberately created outside of projection() to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n */\nvar projectionNodeStack$1 = [];\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n */\nfunction projection(nodeIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var lView = getLView();\n    var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n    // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n    if (tProjectionNode.projection === null)\n        tProjectionNode.projection = selectorIndex;\n    // `<ng-content>` has no content\n    setIsParent(false);\n    // re-distribution of projectable nodes is stored on a component's view level\n    var componentView = findComponentView(lView);\n    var componentNode = componentView[HOST_NODE];\n    var nodeToProject = componentNode.projection[selectorIndex];\n    var projectedView = componentView[PARENT];\n    var projectionNodeIndex = -1;\n    while (nodeToProject) {\n        if (nodeToProject.type === 1 /* Projection */) {\n            // This node is re-projected, so we must go up the tree to get its projected nodes.\n            var currentComponentView = findComponentView(projectedView);\n            var currentComponentHost = currentComponentView[HOST_NODE];\n            var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n            if (firstProjectedNode) {\n                projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                nodeToProject = firstProjectedNode;\n                projectedView = currentComponentView[PARENT];\n                continue;\n            }\n        }\n        else {\n            // This flag must be set now or we won't know that this node is projected\n            // if the nodes are inserted into a container later.\n            nodeToProject.flags |= 2 /* isProjected */;\n            appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n        }\n        // If we are finished with a list of re-projected nodes, we need to get\n        // back to the root projection node that was re-projected.\n        if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n            projectedView = projectionNodeStack$1[projectionNodeIndex--];\n            nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n        }\n        nodeToProject = nodeToProject.next;\n    }\n}\n/**\n * Adds LView or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param lView The view where LView or LContainer should be added\n * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n * @param state The LView or LContainer to add to the view tree\n * @returns The state passed in\n */\nfunction addToViewTree(lView, adjustedHostIndex, state) {\n    var tView = lView[TVIEW];\n    var firstTemplatePass = getFirstTemplatePass();\n    if (lView[TAIL]) {\n        lView[TAIL][NEXT] = state;\n    }\n    else if (firstTemplatePass) {\n        tView.childIndex = adjustedHostIndex;\n    }\n    lView[TAIL] = state;\n    return state;\n}\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n/** If node is an OnPush component, marks its LView dirty. */\nfunction markDirtyIfOnPush(lView, viewIndex) {\n    var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n    if (!(childComponentLView[FLAGS] & 4 /* CheckAlways */)) {\n        childComponentLView[FLAGS] |= 8 /* Dirty */;\n    }\n}\n/** Wraps an event listener with preventDefault behavior. */\nfunction wrapListenerWithPreventDefault(listenerFn) {\n    return function wrapListenerIn_preventDefault(e) {\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/** Marks current view and all ancestors dirty */\nfunction markViewDirty(lView) {\n    while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n        lView[FLAGS] |= 8 /* Dirty */;\n        lView = lView[PARENT];\n    }\n    lView[FLAGS] |= 8 /* Dirty */;\n    ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n    var rootContext = lView[CONTEXT];\n    scheduleTick(rootContext, 1 /* DetectChanges */);\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nfunction scheduleTick(rootContext, flags) {\n    var nothingScheduled = rootContext.flags === 0 /* Empty */;\n    rootContext.flags |= flags;\n    if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n        var res_1;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            if (rootContext.flags & 1 /* DetectChanges */) {\n                rootContext.flags &= ~1 /* DetectChanges */;\n                tickRootContext(rootContext);\n            }\n            if (rootContext.flags & 2 /* FlushPlayers */) {\n                rootContext.flags &= ~2 /* FlushPlayers */;\n                var playerHandler = rootContext.playerHandler;\n                if (playerHandler) {\n                    playerHandler.flushPlayers();\n                }\n            }\n            rootContext.clean = _CLEAN_PROMISE;\n            res_1(null);\n        });\n    }\n}\nfunction tickRootContext(rootContext) {\n    for (var i = 0; i < rootContext.components.length; i++) {\n        var rootComponent = rootContext.components[i];\n        renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n    }\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nfunction detectChanges(component) {\n    var view = getComponentViewByInstance(component);\n    detectChangesInternal(view, component);\n}\nfunction detectChangesInternal(view, context) {\n    var rendererFactory = view[RENDERER_FACTORY];\n    if (rendererFactory.begin)\n        rendererFactory.begin();\n    if (isCreationMode(view)) {\n        checkView(view, context); // creation mode pass\n    }\n    checkView(view, context); // update mode pass\n    if (rendererFactory.end)\n        rendererFactory.end();\n}\n/**\n * Synchronously perform change detection on a root view and its components.\n *\n * @param lView The view which the change detection should be performed on.\n */\nfunction detectChangesInRootView(lView) {\n    tickRootContext(lView[CONTEXT]);\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n */\nfunction checkNoChanges(component) {\n    setCheckNoChangesMode(true);\n    try {\n        detectChanges(component);\n    }\n    finally {\n        setCheckNoChangesMode(false);\n    }\n}\n/**\n * Checks the change detector on a root view and its components, and throws if any changes are\n * detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n *\n * @param lView The view which the change detection should be checked on.\n */\nfunction checkNoChangesInRootView(lView) {\n    setCheckNoChangesMode(true);\n    try {\n        detectChangesInRootView(lView);\n    }\n    finally {\n        setCheckNoChangesMode(false);\n    }\n}\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\nfunction checkView(hostView, component) {\n    var hostTView = hostView[TVIEW];\n    var oldView = enterView(hostView, hostView[HOST_NODE]);\n    var templateFn = hostTView.template;\n    var viewQuery = hostTView.viewQuery;\n    try {\n        namespaceHTML();\n        createViewQuery(viewQuery, hostView, component);\n        templateFn(getRenderFlags(hostView), component);\n        refreshDescendantViews(hostView);\n        updateViewQuery(viewQuery, hostView, component);\n    }\n    finally {\n        leaveView(oldView);\n    }\n}\nfunction createViewQuery(viewQuery, view, component) {\n    if (viewQuery && isCreationMode(view)) {\n        viewQuery(1 /* Create */, component);\n    }\n}\nfunction updateViewQuery(viewQuery, view, component) {\n    if (viewQuery && !isCreationMode(view)) {\n        viewQuery(2 /* Update */, component);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n *\n * @publicApi\n */\nfunction markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    markViewDirty(getComponentViewByInstance(component));\n}\n///////////////////////////////\n//// Bindings & interpolations\n///////////////////////////////\n/**\n * Creates a single value binding.\n *\n * @param value Value to diff\n */\nfunction bind(value) {\n    var lView = getLView();\n    return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n}\n/**\n * Allocates the necessary amount of slots for host vars.\n *\n * @param count Amount of vars to be allocated\n */\nfunction allocHostVars(count) {\n    if (!getFirstTemplatePass())\n        return;\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n    prefillHostVars(tView, lView, count);\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    var different = false;\n    var lView = getLView();\n    var bindingIndex = lView[BINDING_INDEX];\n    for (var i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n    }\n    lView[BINDING_INDEX] = bindingIndex;\n    if (!different) {\n        return NO_CHANGE;\n    }\n    // Build the updated content\n    var content = values[0];\n    for (var i = 1; i < values.length; i += 2) {\n        content += stringify$1(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nfunction interpolation1(prefix, v0, suffix) {\n    var lView = getLView();\n    var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n    lView[BINDING_INDEX] += 1;\n    return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation binding with 2 expressions. */\nfunction interpolation2(prefix, v0, i0, v1, suffix) {\n    var lView = getLView();\n    var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n    lView[BINDING_INDEX] += 2;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation binding with 3 expressions. */\nfunction interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var lView = getLView();\n    var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n    lView[BINDING_INDEX] += 3;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/** Create an interpolation binding with 4 expressions. */\nfunction interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var lView = getLView();\n    var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n    lView[BINDING_INDEX] += 4;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 5 expressions. */\nfunction interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var lView = getLView();\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n    lView[BINDING_INDEX] += 5;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 6 expressions. */\nfunction interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var lView = getLView();\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n    lView[BINDING_INDEX] += 6;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 7 expressions. */\nfunction interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var lView = getLView();\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n    lView[BINDING_INDEX] += 7;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 8 expressions. */\nfunction interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var lView = getLView();\n    var bindingIndex = lView[BINDING_INDEX];\n    var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n    different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n    lView[BINDING_INDEX] += 8;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/** Store a value in the `data` at a given `index`. */\nfunction store(index, value) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    // We don't store any static data for local variables, so the first time\n    // we see the template, we should store as null to avoid a sparse array\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (adjustedIndex >= tView.data.length) {\n        tView.data[adjustedIndex] = null;\n    }\n    lView[adjustedIndex] = value;\n}\n/**\n * Retrieves a local reference from the current contextViewData.\n *\n * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n *\n * @param index The index of the local ref in contextViewData.\n */\nfunction reference(index) {\n    var contextLView = getContextLView();\n    return loadInternal(contextLView, index);\n}\nfunction loadQueryList(queryListIdx) {\n    var lView = getLView();\n    ngDevMode &&\n        assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n    ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n    return lView[CONTENT_QUERIES][queryListIdx];\n}\n/** Retrieves a value from current `viewData`. */\nfunction load(index) {\n    return loadInternal(getLView(), index);\n}\nfunction directiveInject(token, flags) {\n    if (flags === void 0) { flags = InjectFlags.Default; }\n    token = resolveForwardRef(token);\n    return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n}\n/**\n * Facade for the attribute injection from DI.\n */\nfunction injectAttribute(attrNameToInject) {\n    return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n}\n/**\n * Registers a QueryList, associated with a content query, for later refresh (part of a view\n * refresh).\n */\nfunction registerContentQuery(queryList, currentDirectiveIndex) {\n    var viewData = getLView();\n    var tView = viewData[TVIEW];\n    var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n    if (getFirstTemplatePass()) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n        if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n        }\n    }\n}\nvar CLEAN_PROMISE = _CLEAN_PROMISE;\nfunction initializeTNodeInputs(tNode) {\n    // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked.\n    if (tNode) {\n        if (tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n        }\n        return tNode.inputs;\n    }\n    return null;\n}\n/**\n * Returns the current OpaqueViewState instance.\n *\n * Used in conjunction with the restoreView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n */\nfunction getCurrentView() {\n    return getLView();\n}\nfunction getCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view[CLEANUP] || (view[CLEANUP] = []);\n}\nfunction getTViewCleanup(view) {\n    return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Adds a player to an element, directive or component instance that will later be\n * animated once change detection has passed.\n *\n * When a player is added to a reference it will stay active until `player.destroy()`\n * is called. Once called then the player will be removed from the active players\n * present on the associated ref instance.\n *\n * To get a list of all the active players on an element see [getPlayers].\n *\n * @param ref The element, directive or component that the player will be placed on.\n * @param player The player that will be triggered to play once change detection has run.\n */\nfunction addPlayer(ref, player) {\n    var context = getLContext(ref);\n    if (!context) {\n        ngDevMode && throwInvalidRefError();\n        return;\n    }\n    var element$$1 = context.native;\n    var lView = context.lView;\n    var playerContext = getOrCreatePlayerContext(element$$1, context);\n    var rootContext = getRootContext$1(lView);\n    addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n    scheduleTick(rootContext, 2 /* FlushPlayers */);\n}\n/**\n * Returns a list of all the active players present on the provided ref instance (which can\n * be an instance of a directive, component or element).\n *\n * This function will only return players that have been added to the ref instance using\n * `addPlayer` or any players that are active through any template styling bindings\n * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n *\n * @publicApi\n */\nfunction getPlayers(ref) {\n    var context = getLContext(ref);\n    if (!context) {\n        ngDevMode && throwInvalidRefError();\n        return [];\n    }\n    var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n    var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n    return playerContext ? getPlayersInternal(playerContext) : [];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file introduces series of globally accessible debug tools\n * to allow for the Angular debugging story to function.\n *\n * To see this in action run the following command:\n *\n *   bazel run --define=compile=aot\n *   //packages/core/test/bundling/todo:devserver\n *\n *  Then load `localhost:5432` and start using the console tools.\n */\n/**\n * This value reflects the property on the window where the dev\n * tools are patched (window.ng).\n * */\nvar GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n/*\n * Publishes a collection of default debug tools onto `window._ng_`.\n *\n * These functions are available globally when Angular is in development\n * mode and are automatically stripped away from prod mode is on.\n */\nvar _published = false;\nfunction publishDefaultGlobalUtils() {\n    if (!_published) {\n        _published = true;\n        publishGlobalUtil('getComponent', getComponent);\n        publishGlobalUtil('getContext', getContext);\n        publishGlobalUtil('getListeners', getListeners);\n        publishGlobalUtil('getViewComponent', getViewComponent);\n        publishGlobalUtil('getHostElement', getHostElement);\n        publishGlobalUtil('getInjector', getInjector);\n        publishGlobalUtil('getRootComponents', getRootComponents);\n        publishGlobalUtil('getDirectives', getDirectives);\n        publishGlobalUtil('getPlayers', getPlayers);\n        publishGlobalUtil('markDirty', markDirty);\n    }\n}\n/**\n * Publishes the given function to `window.ngDevMode` so that it can be\n * used from the browser console when an application is not in production.\n */\nfunction publishGlobalUtil(name, fn) {\n    var w = _global;\n    ngDevMode && assertDefined(fn, 'function not defined');\n    if (w) {\n        var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n        if (!container) {\n            container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n        }\n        container[name] = fn;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nfunction renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n    if (opts === void 0) { opts = {}; }\n    ngDevMode && publishDefaultGlobalUtils();\n    ngDevMode && assertComponentType(componentType);\n    var rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var sanitizer = opts.sanitizer || null;\n    var componentDef = getComponentDef(componentType);\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    // The first index of the first selector is the tag name.\n    var componentTag = componentDef.selectors[0][0];\n    var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    var rootFlags = componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n        4 /* CheckAlways */ | 128 /* IsRoot */;\n    var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n    var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n    var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n    var oldView = enterView(rootView, null);\n    var component;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n        component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n        refreshDescendantViews(rootView); // creation mode pass\n        rootView[FLAGS] &= ~1 /* CreationMode */;\n        refreshDescendantViews(rootView); // update mode pass\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\n/**\n * Creates the root component view and the root component node.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n * @param rootView The parent view where the host node is stored\n * @param renderer The current renderer\n * @param sanitizer The sanitizer, if provided\n *\n * @returns Component view created\n */\nfunction createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n    resetComponentState();\n    var tView = rootView[TVIEW];\n    var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n    var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n    if (tView.firstTemplatePass) {\n        diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n        tNode.flags = 1 /* isComponent */;\n        initNodeFlags(tNode, rootView.length, 1);\n        queueComponentIndexForCheck(tNode);\n    }\n    // Store component view at node index, with node as the HOST\n    componentView[HOST] = rootView[HEADER_OFFSET];\n    componentView[HOST_NODE] = tNode;\n    return rootView[HEADER_OFFSET] = componentView;\n}\n/**\n * Creates a root component and sets it up with features and host bindings. Shared by\n * renderComponent() and ViewContainerRef.createComponent().\n */\nfunction createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n    var tView = rootView[TVIEW];\n    // Create directive instance with factory() and store at next index in viewData\n    var component = instantiateRootComponent(tView, rootView, componentDef);\n    rootContext.components.push(component);\n    componentView[CONTEXT] = component;\n    hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n    if (tView.firstTemplatePass && componentDef.hostBindings) {\n        var rootTNode = getPreviousOrParentTNode();\n        setCurrentDirectiveDef(componentDef);\n        componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n        setCurrentDirectiveDef(null);\n    }\n    return component;\n}\nfunction createRootContext(scheduler, playerHandler) {\n    return {\n        components: [],\n        scheduler: scheduler || defaultScheduler,\n        clean: CLEAN_PROMISE,\n        playerHandler: playerHandler || null,\n        flags: 0 /* Empty */\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\nfunction LifecycleHooksFeature(component, def) {\n    var rootTView = readPatchedLView(component)[TVIEW];\n    var dirIndex = rootTView.data.length - 1;\n    queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n    // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n    // LNode).\n    queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n}\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootContext$2(component) {\n    var rootContext = getRootView(component)[CONTEXT];\n    ngDevMode && assertDefined(rootContext, 'rootContext');\n    return rootContext;\n}\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nfunction whenRendered(component) {\n    return getRootContext$2(component).clean;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n * @param definition The definition to examine\n */\nfunction isComponentDef$1(definition) {\n    var def = definition;\n    return typeof def.template === 'function';\n}\nfunction getSuperType(type) {\n    return Object.getPrototypeOf(type.prototype).constructor;\n}\n/**\n * Merges the definition from a super class to a sub class.\n * @param definition The definition that is a SubClass of another directive of component\n */\nfunction InheritDefinitionFeature(definition) {\n    var superType = getSuperType(definition.type);\n    var _loop_1 = function () {\n        var e_1, _a;\n        var superDef = undefined;\n        if (isComponentDef$1(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n        }\n        else {\n            if (superType.ngComponentDef) {\n                throw new Error('Directives cannot inherit Components');\n            }\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ngDirectiveDef;\n        }\n        var baseDef = superType.ngBaseDef;\n        // Some fields in the definition may be empty, if there were no values to put in them that\n        // would've justified object creation. Unwrap them if necessary.\n        if (baseDef || superDef) {\n            var writeableDef = definition;\n            writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n            writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n            writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n        }\n        if (baseDef) {\n            // Merge inputs and outputs\n            fillProperties(definition.inputs, baseDef.inputs);\n            fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n            fillProperties(definition.outputs, baseDef.outputs);\n        }\n        if (superDef) {\n            // Merge hostBindings\n            var prevHostBindings_1 = definition.hostBindings;\n            var superHostBindings_1 = superDef.hostBindings;\n            if (superHostBindings_1) {\n                if (prevHostBindings_1) {\n                    definition.hostBindings = function (rf, ctx, elementIndex) {\n                        superHostBindings_1(rf, ctx, elementIndex);\n                        prevHostBindings_1(rf, ctx, elementIndex);\n                    };\n                }\n                else {\n                    definition.hostBindings = superHostBindings_1;\n                }\n            }\n            // Merge View Queries\n            if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                var prevViewQuery_1 = definition.viewQuery;\n                var superViewQuery_1 = superDef.viewQuery;\n                if (superViewQuery_1) {\n                    if (prevViewQuery_1) {\n                        definition.viewQuery = function (rf, ctx) {\n                            superViewQuery_1(rf, ctx);\n                            prevViewQuery_1(rf, ctx);\n                        };\n                    }\n                    else {\n                        definition.viewQuery = superViewQuery_1;\n                    }\n                }\n            }\n            // Merge Content Queries\n            var prevContentQueries_1 = definition.contentQueries;\n            var superContentQueries_1 = superDef.contentQueries;\n            if (superContentQueries_1) {\n                if (prevContentQueries_1) {\n                    definition.contentQueries = function (dirIndex) {\n                        superContentQueries_1(dirIndex);\n                        prevContentQueries_1(dirIndex);\n                    };\n                }\n                else {\n                    definition.contentQueries = superContentQueries_1;\n                }\n            }\n            // Merge Content Queries Refresh\n            var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n            var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n            if (superContentQueriesRefresh_1) {\n                if (prevContentQueriesRefresh_1) {\n                    definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                        superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                    };\n                }\n                else {\n                    definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                }\n            }\n            // Merge inputs and outputs\n            fillProperties(definition.inputs, superDef.inputs);\n            fillProperties(definition.declaredInputs, superDef.declaredInputs);\n            fillProperties(definition.outputs, superDef.outputs);\n            // Inherit hooks\n            // Assume super class inheritance feature has already run.\n            definition.afterContentChecked =\n                definition.afterContentChecked || superDef.afterContentChecked;\n            definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n            definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n            definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n            definition.doCheck = definition.doCheck || superDef.doCheck;\n            definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n            definition.onInit = definition.onInit || superDef.onInit;\n            // Run parent features\n            var features = superDef.features;\n            if (features) {\n                try {\n                    for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                        var feature = features_1_1.value;\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            return \"break\";\n        }\n        else {\n            // Even if we don't have a definition, check the type for the hooks and use those if need be\n            var superPrototype = superType.prototype;\n            if (superPrototype) {\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superPrototype.afterContentChecked;\n                definition.afterContentInit =\n                    definition.afterContentInit || superPrototype.afterContentInit;\n                definition.afterViewChecked =\n                    definition.afterViewChecked || superPrototype.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                definition.onInit = definition.onInit || superPrototype.onInit;\n            }\n        }\n        superType = Object.getPrototypeOf(superType);\n    };\n    while (superType) {\n        var state_1 = _loop_1();\n        if (state_1 === \"break\")\n            break;\n    }\n}\nfunction maybeUnwrapEmpty(value) {\n    if (value === EMPTY_OBJ) {\n        return {};\n    }\n    else if (value === EMPTY_ARRAY) {\n        return [];\n    }\n    else {\n        return value;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature]\n * });\n * ```\n */\nfunction NgOnChangesFeature(definition) {\n    var publicToDeclaredInputs = definition.declaredInputs;\n    var publicToMinifiedInputs = definition.inputs;\n    var proto = definition.type.prototype;\n    var _loop_1 = function (publicName) {\n        if (publicToDeclaredInputs.hasOwnProperty(publicName)) {\n            var minifiedKey = publicToMinifiedInputs[publicName];\n            var declaredKey_1 = publicToDeclaredInputs[publicName];\n            var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n            // Walk the prototype chain to see if we find a property descriptor\n            // That way we can honor setters and getters that were inherited.\n            var originalProperty = undefined;\n            var checkProto = proto;\n            while (!originalProperty && checkProto &&\n                Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                checkProto = Object.getPrototypeOf(checkProto);\n            }\n            var getter = originalProperty && originalProperty.get;\n            var setter_1 = originalProperty && originalProperty.set;\n            // create a getter and setter for property\n            Object.defineProperty(proto, minifiedKey, {\n                get: getter ||\n                    (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                set: function (value) {\n                    var simpleChanges = this[PRIVATE_PREFIX];\n                    if (!simpleChanges) {\n                        simpleChanges = {};\n                        // Place where we will store SimpleChanges if there is a change\n                        Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                    }\n                    var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                    var currentChange = simpleChanges[declaredKey_1];\n                    if (currentChange) {\n                        currentChange.currentValue = value;\n                    }\n                    else {\n                        simpleChanges[declaredKey_1] =\n                            new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                    }\n                    if (isFirstChange) {\n                        // Create a place where the actual value will be stored and make it non-enumerable\n                        Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                    }\n                    else {\n                        this[privateMinKey_1] = value;\n                    }\n                    if (setter_1)\n                        setter_1.call(this, value);\n                },\n                // Make the property configurable in dev mode to allow overriding in tests\n                configurable: !!ngDevMode\n            });\n        }\n    };\n    for (var publicName in publicToDeclaredInputs) {\n        _loop_1(publicName);\n    }\n    // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n    // so the call order is changes-init-check in creation mode. In subsequent\n    // change detection runs, only the check wrapper will be called.\n    if (definition.onInit != null) {\n        definition.onInit = onChangesWrapper(definition.onInit);\n    }\n    definition.doCheck = onChangesWrapper(definition.doCheck);\n}\n// This option ensures that the ngOnChanges lifecycle hook will be inherited\n// from superclasses (in InheritDefinitionFeature).\nNgOnChangesFeature.ngInherit = true;\nfunction onChangesWrapper(delegateHook) {\n    return function () {\n        var simpleChanges = this[PRIVATE_PREFIX];\n        if (simpleChanges != null) {\n            this.ngOnChanges(simpleChanges);\n            this[PRIVATE_PREFIX] = null;\n        }\n        if (delegateHook)\n            delegateHook.apply(this);\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noop() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    // Do nothing.\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @publicApi\n */\nvar INJECTOR$1 = new InjectionToken('INJECTOR');\nvar NullInjector = /** @class */ (function () {\n    function NullInjector() {\n    }\n    NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n            // if(ngDevMode) debugger;\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return NullInjector;\n}());\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * @publicApi\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    Injector.create = function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new NullInjector();\n    /** @nocollapse */\n    Injector.ngInjectableDef = defineInjectable({\n        providedIn: 'any',\n        factory: function () { return inject(INJECTOR$1); },\n    });\n    /** @internal */\n    Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n    return Injector;\n}());\nvar SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n    return injectInjector();\n};\nvar SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\nvar SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = [];\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR$1 = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'Éµ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR$1; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var records = this._records = new Map();\n        records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        recursivelyProcessProviders(records, providers);\n    }\n    StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = InjectFlags.Default; }\n        var record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            var tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    StaticInjector.prototype.toString = function () {\n        var tokens = [], records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nfunction resolveProvider(provider) {\n    var deps = computeDeps(provider);\n    var fn = IDENT;\n    var value = EMPTY;\n    var useNew = false;\n    var provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = provider.useValue;\n    }\n    else if (provider.useFactory) {\n        fn = provider.useFactory;\n    }\n    else if (provider.useExisting) ;\n    else if (provider.useClass) {\n        useNew = true;\n        fn = resolveForwardRef(provider.useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var token = resolveForwardRef(provider.provide);\n            var resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = {\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    });\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var _a;\n    var value;\n    if (record && !(flags & InjectFlags.SkipSelf)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var obj = undefined;\n            var useNew = record.useNew;\n            var fn = record.fn;\n            var depRecords = record.deps;\n            var deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var i = 0; i < depRecords.length; i++) {\n                    var depRecord = depRecords[i];\n                    var options = depRecord.options;\n                    var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, \n                    // A record which describes how to resolve the token.\n                    // If undefined, this means we don't have such a record\n                    childRecord, \n                    // Other records we know about.\n                    records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, InjectFlags.Default));\n                }\n            }\n            record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & InjectFlags.Self)) {\n        value = parent.get(token, notFoundValue, InjectFlags.Default);\n    }\n    return value;\n}\nfunction computeDeps(provider) {\n    var deps = EMPTY;\n    var providerDeps = provider.deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var i = 0; i < providerDeps.length; i++) {\n            var options = 6 /* Default */;\n            var token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var j = 0, annotations = token; j < annotations.length; j++) {\n                    var annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = annotation.token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if (provider.useExisting) {\n        var token = resolveForwardRef(provider.useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var parts = [];\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nvar APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nvar NOT_YET = {};\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nvar CIRCULAR$1 = {};\nvar EMPTY_ARRAY$1 = [];\n/**\n * A lazily initialized NullInjector.\n */\nvar NULL_INJECTOR$2 = undefined;\nfunction getNullInjector() {\n    if (NULL_INJECTOR$2 === undefined) {\n        NULL_INJECTOR$2 = new NullInjector();\n    }\n    return NULL_INJECTOR$2;\n}\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * @publicApi\n */\nfunction createInjector(defType, parent, additionalProviders) {\n    if (parent === void 0) { parent = null; }\n    if (additionalProviders === void 0) { additionalProviders = null; }\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, additionalProviders, parent);\n}\nvar R3Injector = /** @class */ (function () {\n    function R3Injector(def, additionalProviders, parent) {\n        var _this = this;\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        this.destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in `def`.\n        var dedupStack = [];\n        deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n        additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR$1, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    R3Injector.prototype.destroy = function () {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    };\n    R3Injector.prototype.get = function (token, notFoundValue, flags) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (flags === void 0) { flags = InjectFlags.Default; }\n        this.assertNotDestroyed();\n        // Set the injection context.\n        var previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & InjectFlags.SkipSelf)) {\n                // SkipSelf isn't set, check if the record belongs to this injector.\n                var record = this.records.get(token);\n                if (record === undefined) {\n                    // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                    // with a scope matching this injector.\n                    var def = couldBeInjectableType(token) && getInjectableDef(token);\n                    if (def && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            // Select the next injector based on the Self flag - if self is set, the next injector is\n            // the NullInjector, otherwise it's the parent.\n            var nextInjector = !(flags & InjectFlags.Self) ? this.parent : getNullInjector();\n            return nextInjector.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    };\n    R3Injector.prototype.assertNotDestroyed = function () {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    };\n    /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     */\n    R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n        var _this = this;\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        if (!defOrWrappedDef)\n            return;\n        // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n        // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n        // read, so care is taken to only do the read once.\n        // First attempt to read the ngInjectorDef.\n        var def = getInjectorDef(defOrWrappedDef);\n        // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n        var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n        // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n        // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n        // is the `ngModule`.\n        var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n        // Check for circular dependencies.\n        if (ngDevMode && parents.indexOf(defType) !== -1) {\n            var defName = stringify(defType);\n            throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n        }\n        // Check for multiple imports of the same module\n        var isDuplicate = dedupStack.indexOf(defType) !== -1;\n        // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n        // extra providers.\n        var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n            EMPTY_ARRAY$1;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = getInjectorDef(ngModule);\n        }\n        // If no definition was found, it might be from exports. Remove it.\n        if (def == null) {\n            return;\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory, NOT_YET));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null && !isDuplicate) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            ngDevMode && parents.push(defType);\n            // Add it to the set of dedups. This way we can detect multiple imports of the same module\n            dedupStack.push(defType);\n            try {\n                deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                ngDevMode && parents.pop();\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        var defProviders = def.providers;\n        if (defProviders != null && !isDuplicate) {\n            var injectorType_1 = defOrWrappedDef;\n            deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        var ngModuleType = defOrWrappedDef.ngModule;\n        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n    };\n    /**\n     * Process a `SingleProvider` and add it.\n     */\n    R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n        // Construct a `Record` for the provider.\n        var record = providerToRecord(provider, ngModuleType, providers);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            // If the provider indicates that it's a multi-provider, process it specially.\n            // First check whether it's been defined already.\n            var multiRecord_1 = this.records.get(token);\n            if (multiRecord_1) {\n                // It has. Throw a nice error if\n                if (multiRecord_1.multi === undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                }\n            }\n            else {\n                multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                this.records.set(token, multiRecord_1);\n            }\n            token = provider;\n            multiRecord_1.multi.push(provider);\n        }\n        else {\n            var existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throw new Error(\"Mixed multi-provider for \" + stringify(token));\n            }\n        }\n        this.records.set(token, record);\n    };\n    R3Injector.prototype.hydrate = function (token, record) {\n        if (record.value === CIRCULAR$1) {\n            throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR$1;\n            record.value = record.factory();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return record.value;\n    };\n    R3Injector.prototype.injectableDefInScope = function (def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    };\n    return R3Injector;\n}());\nfunction injectableDefOrInjectorDefFactory(token) {\n    var injectableDef = getInjectableDef(token);\n    if (injectableDef === null) {\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        else if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        else if (token instanceof Function) {\n            var paramLength = token.length;\n            if (paramLength > 0) {\n                var args = new Array(paramLength).fill('?');\n                throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n            }\n            return function () { return new token(); };\n        }\n        throw new Error('unreachable');\n    }\n    return injectableDef.factory;\n}\nfunction providerToRecord(provider, ngModuleType, providers) {\n    var factory = providerToFactory(provider, ngModuleType, providers);\n    if (isValueProvider(provider)) {\n        return makeRecord(undefined, provider.useValue);\n    }\n    else {\n        return makeRecord(factory, NOT_YET);\n    }\n}\n/**\n * Converts a `SingleProvider` into a factory function.\n *\n * @param provider provider to convert to factory\n */\nfunction providerToFactory(provider, ngModuleType, providers) {\n    var factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n    }\n    else {\n        if (isValueProvider(provider)) {\n            factory = function () { return resolveForwardRef(provider.useValue); };\n        }\n        else if (isExistingProvider(provider)) {\n            factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n        }\n        else {\n            var classRef_1 = resolveForwardRef(provider &&\n                (provider.useClass || provider.provide));\n            if (!classRef_1) {\n                var ngModuleDetail = '';\n                if (ngModuleType && providers) {\n                    var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                    ngModuleDetail =\n                        \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                }\n                throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n            }\n            if (hasDeps(provider)) {\n                factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n            }\n            else {\n                return injectableDefOrInjectorDefFactory(classRef_1);\n            }\n        }\n    }\n    return factory;\n}\nfunction makeRecord(factory, value, multi) {\n    if (multi === void 0) { multi = false; }\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\nfunction deepForEach(input, fn) {\n    input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n}\nfunction isValueProvider(value) {\n    return value && typeof value == 'object' && USE_VALUE in value;\n}\nfunction isExistingProvider(value) {\n    return !!(value && value.useExisting);\n}\nfunction isFactoryProvider(value) {\n    return !!(value && value.useFactory);\n}\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\nfunction hasDeps(value) {\n    return !!value.deps;\n}\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && value.ngOnDestroy &&\n        typeof value.ngOnDestroy === 'function';\n}\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves the providers which are defined in the DirectiveDef.\n *\n * When inserting the tokens and the factories in their respective arrays, we can assume that\n * this method is called first for the component (if any), and then for other directives on the same\n * node.\n * As a consequence,the providers are always processed in that order:\n * 1) The view providers of the component\n * 2) The providers of the component\n * 3) The providers of the other directives\n * This matches the structure of the injectables arrays of a view (for each node).\n * So the tokens and the factories can be pushed at the end of the arrays, except\n * in one case for multi providers.\n *\n * @param def the directive definition\n * @param providers: Array of `providers`.\n * @param viewProviders: Array of `viewProviders`.\n */\nfunction providersResolver(def, providers, viewProviders) {\n    var lView = getLView();\n    var tView = lView[TVIEW];\n    if (tView.firstTemplatePass) {\n        var isComponent$$1 = isComponentDef(def);\n        // The list of view providers is processed first, and the flags are updated\n        resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n        // Then, the list of providers is processed, and the flags are updated\n        resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n    }\n}\n/**\n * Resolves a provider and publishes it to the DI system.\n */\nfunction resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n    provider = resolveForwardRef(provider);\n    if (Array.isArray(provider)) {\n        // Recursively call `resolveProvider`\n        // Recursion is OK in this case because this code will not be in hot-path once we implement\n        // cloning of the initial state.\n        for (var i = 0; i < provider.length; i++) {\n            resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n        }\n    }\n    else {\n        var lView = getLView();\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        var providerFactory = providerToFactory(provider);\n        var tNode = getPreviousOrParentTNode();\n        var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveStart;\n        var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n        if (isTypeProvider(provider) || !provider.multi) {\n            // Single provider case: the factory is created and pushed immediately\n            var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n            var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n            if (existingFactoryIndex == -1) {\n                diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                tInjectables.push(token);\n                tNode.directiveStart++;\n                tNode.directiveEnd++;\n                if (isViewProvider) {\n                    tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                }\n                lInjectablesBlueprint.push(factory);\n                lView.push(factory);\n            }\n            else {\n                lInjectablesBlueprint[existingFactoryIndex] = factory;\n                lView[existingFactoryIndex] = factory;\n            }\n        }\n        else {\n            // Multi provider case:\n            // We create a multi factory which is going to aggregate all the values.\n            // Since the output of such a factory depends on content or view injection,\n            // we create two of them, which are linked together.\n            //\n            // The first one (for view providers) is always in the first block of the injectables array,\n            // and the second one (for providers) is always in the second block.\n            // This is important because view providers have higher priority. When a multi token\n            // is being looked up, the view providers should be found first.\n            // Note that it is not possible to have a multi factory in the third block (directive block).\n            //\n            // The algorithm to process multi providers is as follows:\n            // 1) If the multi provider comes from the `viewProviders` of the component:\n            //   a) If the special view providers factory doesn't exist, it is created and pushed.\n            //   b) Else, the multi provider is added to the existing multi factory.\n            // 2) If the multi provider comes from the `providers` of the component or of another\n            // directive:\n            //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n            //      It is also linked to the multi factory for view providers, if it exists.\n            //   b) Else, the multi provider is added to the existing multi factory.\n            var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n            var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n            var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                lInjectablesBlueprint[existingProvidersFactoryIndex];\n            var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n            if (isViewProvider && !doesViewProvidersFactoryExist ||\n                !isViewProvider && !doesProvidersFactoryExist) {\n                // Cases 1.a and 2.a\n                diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                if (!isViewProvider && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                }\n                tInjectables.push(token);\n                tNode.directiveStart++;\n                tNode.directiveEnd++;\n                if (isViewProvider) {\n                    tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                }\n                lInjectablesBlueprint.push(factory);\n                lView.push(factory);\n            }\n            else {\n                // Cases 1.b and 2.b\n                multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n            }\n            if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n            }\n        }\n    }\n}\n/**\n * Add a factory in a multi factory.\n */\nfunction multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n    multiFactory.multi.push(factory);\n    if (isComponentProvider) {\n        multiFactory.componentProviders++;\n    }\n}\n/**\n * Returns the index of item in the array, but only in the begin to end range.\n */\nfunction indexOf(item, arr, begin, end) {\n    for (var i = begin; i < end; i++) {\n        if (arr[i] === item)\n            return i;\n    }\n    return -1;\n}\n/**\n * Use this with `multi` `providers`.\n */\nfunction multiProvidersFactoryResolver(_, tData, lData, tNode) {\n    return multiResolve(this.multi, []);\n}\n/**\n * Use this with `multi` `viewProviders`.\n *\n * This factory knows how to concatenate itself with the existing `multi` `providers`.\n */\nfunction multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n    var factories = this.multi;\n    var result;\n    if (this.providerFactory) {\n        var componentCount = this.providerFactory.componentProviders;\n        var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n        // Copy the section of the array which contains `multi` `providers` from the component\n        result = multiProviders.slice(0, componentCount);\n        // Insert the `viewProvider` instances.\n        multiResolve(factories, result);\n        // Copy the section of the array which contains `multi` `providers` from other directives\n        for (var i = componentCount; i < multiProviders.length; i++) {\n            result.push(multiProviders[i]);\n        }\n    }\n    else {\n        result = [];\n        // Insert the `viewProvider` instances.\n        multiResolve(factories, result);\n    }\n    return result;\n}\n/**\n * Maps an array of factories into an array of values.\n */\nfunction multiResolve(factories, result) {\n    for (var i = 0; i < factories.length; i++) {\n        var factory = factories[i];\n        result.push(factory());\n    }\n    return result;\n}\n/**\n * Creates a multi factory.\n */\nfunction multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n    var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n    factory.multi = [];\n    factory.index = index;\n    factory.componentProviders = 0;\n    multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n    return factory;\n}\n\n/**\n * This feature resolves the providers of a directive (or component),\n * and publish them into the DI system, making it visible to others for injection.\n *\n * For example:\n * class ComponentWithProviders {\n *   constructor(private greeter: GreeterDE) {}\n *\n *   static ngComponentDef = defineComponent({\n *     type: ComponentWithProviders,\n *     selectors: [['component-with-providers']],\n *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n *    consts: 1,\n *    vars: 1,\n *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n *      if (fs & RenderFlags.Create) {\n *        text(0);\n *      }\n *      if (fs & RenderFlags.Update) {\n *        textBinding(0, bind(ctx.greeter.greet()));\n *      }\n *    },\n *    features: [ProvidersFeature([GreeterDE])]\n *  });\n * }\n *\n * @param definition\n */\nfunction ProvidersFeature(providers, viewProviders) {\n    if (viewProviders === void 0) { viewProviders = []; }\n    return function (definition) {\n        definition.providersResolver = function (def) {\n            return providersResolver(def, providers, viewProviders);\n        };\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * @publicApi\n */\nvar ComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * @publicApi\n */\nvar ComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noComponentFactoryError(component) {\n    var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    error[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * @publicApi\n */\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * @publicApi\n */\nvar NgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @publicApi\n */\nvar NgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef = /** @class */ (function () {\n    function ViewRef(_lView, _context, _componentIndex) {\n        this._context = _context;\n        this._componentIndex = _componentIndex;\n        this._appRef = null;\n        this._viewContainerRef = null;\n        /**\n         * @internal\n         */\n        this._tViewNode = null;\n        this._lView = _lView;\n    }\n    Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n        get: function () {\n            if (this._lView[HOST] == null) {\n                var tView = this._lView[HOST_NODE];\n                return collectNativeNodes(this._lView, tView, []);\n            }\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef.prototype, \"context\", {\n        get: function () { return this._context ? this._context : this._lookUpContext(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n        get: function () {\n            return (this._lView[FLAGS] & 64 /* Destroyed */) === 64 /* Destroyed */;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            var index = this._viewContainerRef.indexOf(this);\n            if (index > -1) {\n                this._viewContainerRef.detach(index);\n            }\n            this._viewContainerRef = null;\n        }\n        destroyLView(this._lView);\n    };\n    ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~16 /* Attached */; };\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 16 /* Attached */; };\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n    ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n    ViewRef.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef.prototype._lookUpContext = function () {\n        return this._context = this._lView[PARENT][this._componentIndex];\n    };\n    return ViewRef;\n}());\n/** @internal */\nvar RootViewRef = /** @class */ (function (_super) {\n    __extends(RootViewRef, _super);\n    function RootViewRef(_view) {\n        var _this = _super.call(this, _view, null, -1) || this;\n        _this._view = _view;\n        return _this;\n    }\n    RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n    RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n    Object.defineProperty(RootViewRef.prototype, \"context\", {\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return RootViewRef;\n}(ViewRef));\nfunction collectNativeNodes(lView, parentTNode, result) {\n    var tNodeChild = parentTNode.child;\n    while (tNodeChild) {\n        result.push(getNativeByTNode(tNodeChild, lView));\n        if (tNodeChild.type === 4 /* ElementContainer */) {\n            collectNativeNodes(lView, tNodeChild, result);\n        }\n        tNodeChild = tNodeChild.next;\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates an ElementRef from the most recent node.\n *\n * @returns The ElementRef instance to use\n */\nfunction injectElementRef(ElementRefToken) {\n    return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n}\nvar R3ElementRef;\n/**\n * Creates an ElementRef given a node.\n *\n * @param ElementRefToken The ElementRef type\n * @param tNode The node for which you'd like an ElementRef\n * @param view The view to which the node belongs\n * @returns The ElementRef instance to use\n */\nfunction createElementRef(ElementRefToken, tNode, view) {\n    if (!R3ElementRef) {\n        // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n        R3ElementRef = /** @class */ (function (_super) {\n            __extends(ElementRef_, _super);\n            function ElementRef_() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return ElementRef_;\n        }(ElementRefToken));\n    }\n    return new R3ElementRef(getNativeByTNode(tNode, view));\n}\nvar R3TemplateRef;\n/**\n * Creates a TemplateRef given a node.\n *\n * @returns The TemplateRef instance to use\n */\nfunction injectTemplateRef(TemplateRefToken, ElementRefToken) {\n    return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n}\n/**\n * Creates a TemplateRef and stores it on the injector.\n *\n * @param TemplateRefToken The TemplateRef type\n * @param ElementRefToken The ElementRef type\n * @param hostTNode The node that is requesting a TemplateRef\n * @param hostView The view to which the node belongs\n * @returns The TemplateRef instance to use\n */\nfunction createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n    if (!R3TemplateRef) {\n        // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n        R3TemplateRef = /** @class */ (function (_super) {\n            __extends(TemplateRef_, _super);\n            function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                var _this = _super.call(this) || this;\n                _this._declarationParentView = _declarationParentView;\n                _this.elementRef = elementRef;\n                _this._tView = _tView;\n                _this._renderer = _renderer;\n                _this._queries = _queries;\n                _this._injectorIndex = _injectorIndex;\n                return _this;\n            }\n            TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                if (container$$1) {\n                    insertView(lView, container$$1, hostView, index, hostTNode.index);\n                }\n                renderEmbeddedTemplate(lView, this._tView, context);\n                var viewRef = new ViewRef(lView, context, -1);\n                viewRef._tViewNode = lView[HOST_NODE];\n                return viewRef;\n            };\n            return TemplateRef_;\n        }(TemplateRefToken));\n    }\n    if (hostTNode.type === 0 /* Container */) {\n        var hostContainer = hostView[hostTNode.index];\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n    }\n    else {\n        return null;\n    }\n}\nvar R3ViewContainerRef;\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n    var previousTNode = getPreviousOrParentTNode();\n    return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector.\n *\n * @param ViewContainerRefToken The ViewContainerRef type\n * @param ElementRefToken The ElementRef type\n * @param hostTNode The node that is requesting a ViewContainerRef\n * @param hostView The view to which the node belongs\n * @returns The ViewContainerRef instance to use\n */\nfunction createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n    if (!R3ViewContainerRef) {\n        // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n        R3ViewContainerRef = /** @class */ (function (_super) {\n            __extends(ViewContainerRef_, _super);\n            function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                var _this = _super.call(this) || this;\n                _this._lContainer = _lContainer;\n                _this._hostTNode = _hostTNode;\n                _this._hostView = _hostView;\n                _this._viewRefs = [];\n                return _this;\n            }\n            Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                get: function () {\n                    return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                /** @deprecated No replacement */\n                get: function () {\n                    var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                    var parentView = getParentInjectorView(parentLocation, this._hostView);\n                    var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                    return !hasParentInjector(parentLocation) || parentTNode == null ?\n                        new NodeInjector(null, this._hostView) :\n                        new NodeInjector(parentTNode, parentView);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            ViewContainerRef_.prototype.clear = function () {\n                while (this._lContainer[VIEWS].length) {\n                    this.remove(0);\n                }\n            };\n            ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n            Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                get: function () { return this._lContainer[VIEWS].length; },\n                enumerable: true,\n                configurable: true\n            });\n            ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                var adjustedIdx = this._adjustIndex(index);\n                var viewRef = templateRef\n                    .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                viewRef.attachToViewContainerRef(this);\n                this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                return viewRef;\n            };\n            ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                var contextInjector = injector || this.parentInjector;\n                if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                    ngModuleRef = contextInjector.get(NgModuleRef, null);\n                }\n                var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                this.insert(componentRef.hostView, index);\n                return componentRef;\n            };\n            ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                if (viewRef.destroyed) {\n                    throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                }\n                var lView = viewRef._lView;\n                var adjustedIdx = this._adjustIndex(index);\n                insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                addRemoveViewFromContainer(lView, true, beforeNode);\n                viewRef.attachToViewContainerRef(this);\n                this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                return viewRef;\n            };\n            ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                if (viewRef.destroyed) {\n                    throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                }\n                var index = this.indexOf(viewRef);\n                this.detach(index);\n                this.insert(viewRef, this._adjustIndex(newIndex));\n                return viewRef;\n            };\n            ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n            ViewContainerRef_.prototype.remove = function (index) {\n                var adjustedIdx = this._adjustIndex(index, -1);\n                removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                this._viewRefs.splice(adjustedIdx, 1);\n            };\n            ViewContainerRef_.prototype.detach = function (index) {\n                var adjustedIdx = this._adjustIndex(index, -1);\n                var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n            };\n            ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                if (shift === void 0) { shift = 0; }\n                if (index == null) {\n                    return this._lContainer[VIEWS].length + shift;\n                }\n                if (ngDevMode) {\n                    assertGreaterThan(index, -1, 'index must be positive');\n                    // +1 because it's legal to insert at the end.\n                    assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                }\n                return index;\n            };\n            return ViewContainerRef_;\n        }(ViewContainerRefToken));\n    }\n    ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n    var lContainer;\n    var slotValue = hostView[hostTNode.index];\n    if (isLContainer(slotValue)) {\n        // If the host is a container, we don't need to create a new LContainer\n        lContainer = slotValue;\n        lContainer[ACTIVE_INDEX] = -1;\n    }\n    else {\n        var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        // A container can be created on the root (topmost / bootstrapped) component and in this case we\n        // can't use LTree to insert container's marker node (both parent of a comment node and the\n        // commend node itself is located outside of elements hold by LTree). In this specific case we\n        // use low-level DOM manipulation to insert container's marker (comment) node.\n        if (isRootView(hostView)) {\n            var renderer = hostView[RENDERER];\n            var hostNative = getNativeByTNode(hostTNode, hostView);\n            var parentOfHostNative = nativeParentNode(renderer, hostNative);\n            nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n        }\n        else {\n            appendChild(commentNode, hostTNode, hostView);\n        }\n        hostView[hostTNode.index] = lContainer =\n            createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n        addToViewTree(hostView, hostTNode.index, lContainer);\n    }\n    return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n}\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nfunction injectChangeDetectorRef() {\n    return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n *\n * @param hostTNode The node that is requesting a ChangeDetectorRef\n * @param hostView The view to which the node belongs\n * @param context The context for this change detector ref\n * @returns The ChangeDetectorRef to use\n */\nfunction createViewRef(hostTNode, hostView, context) {\n    if (isComponent(hostTNode)) {\n        var componentIndex = hostTNode.directiveStart;\n        var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n        return new ViewRef(componentView, context, componentIndex);\n    }\n    else if (hostTNode.type === 3 /* Element */) {\n        var hostComponentView = findComponentView(hostView);\n        return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n    }\n    return null;\n}\nfunction getOrCreateRenderer2(view) {\n    var renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer)) {\n        return renderer;\n    }\n    else {\n        throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n    }\n}\n/** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\nfunction injectRenderer2() {\n    return getOrCreateRenderer2(getLView());\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    /** @internal */\n    ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n    return ElementRef;\n}());\nvar SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\nvar SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\nvar SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n * @publicApi\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handled internally in the view engine now.\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @publicApi\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @publicApi\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * @publicApi\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * Flags for renderer-specific style modifiers.\n * @publicApi\n */\nvar RendererStyleFlags2;\n(function (RendererStyleFlags2) {\n    /**\n     * Marks a style as important.\n     */\n    RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n    /**\n     * Marks a style as using dash case naming (this-is-dash-case).\n     */\n    RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags2 || (RendererStyleFlags2 = {}));\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * @publicApi\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    /** @internal */\n    Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n    return Renderer2;\n}());\nvar SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\nvar SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\nvar SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n * @publicApi\n */\nvar SecurityContext;\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(SecurityContext || (SecurityContext = {}));\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * @publicApi\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description Represents the version of Angular\n *\n * @publicApi\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @publicApi\n */\nvar VERSION = new Version('7.2.15');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactoryResolver$$1, _super);\n    /**\n     * @param ngModule The NgModuleRef to which all resolved factories are bound.\n     */\n    function ComponentFactoryResolver$$1(ngModule) {\n        var _this = _super.call(this) || this;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n        ngDevMode && assertComponentType(component);\n        var componentDef = getComponentDef(component);\n        return new ComponentFactory$1(componentDef, this.ngModule);\n    };\n    return ComponentFactoryResolver$$1;\n}(ComponentFactoryResolver));\nfunction toRefArray(map) {\n    var array = [];\n    for (var nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            var minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\n/**\n * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n */\nvar ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n/**\n * A change detection scheduler token for {@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n */\nvar SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n    providedIn: 'root',\n    factory: function () { return defaultScheduler; },\n});\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\nfunction createChainedInjector(rootViewInjector, moduleInjector) {\n    return {\n        get: function (token, notFoundValue) {\n            var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n            if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                // Return the value from the root element injector when\n                // - it provides it\n                //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                // - the module injector should not be checked\n                //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                return value;\n            }\n            return moduleInjector.get(token, notFoundValue);\n        }\n    };\n}\n/**\n * Render3 implementation of {@link viewEngine_ComponentFactory}.\n */\nvar ComponentFactory$1 = /** @class */ (function (_super) {\n    __extends(ComponentFactory$$1, _super);\n    /**\n     * @param componentDef The component definition.\n     * @param ngModule The NgModuleRef to which the factory is bound.\n     */\n    function ComponentFactory$$1(componentDef, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.componentDef = componentDef;\n        _this.ngModule = ngModule;\n        _this.componentType = componentDef.type;\n        _this.selector = componentDef.selectors[0][0];\n        _this.ngContentSelectors = [];\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.inputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n        get: function () {\n            return toRefArray(this.componentDef.outputs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        var isInternalRootView = rootSelectorOrNode === undefined;\n        ngModule = ngModule || this.ngModule;\n        var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n        var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n        var sanitizer = rootViewInjector.get(Sanitizer, null);\n        var hostRNode = isInternalRootView ?\n            elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n            locateHostElement(rendererFactory, rootSelectorOrNode);\n        var rootFlags = this.componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n            4 /* CheckAlways */ | 128 /* IsRoot */;\n        var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n        var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n        if (rootSelectorOrNode && hostRNode) {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            isProceduralRenderer(renderer) ?\n                renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                hostRNode.setAttribute('ng-version', VERSION.full);\n        }\n        // Create the root view. Uses empty TView and ContentTemplate.\n        var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n        // rootView is the parent when bootstrapping\n        var oldLView = enterView(rootLView, null);\n        var component;\n        var tElementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n            tElementNode = getTNode(0, rootLView);\n            // Transform the arrays of native nodes into a structure that can be consumed by the\n            // projection instruction. This is needed to support the reprojection of these nodes.\n            if (projectableNodes) {\n                var index = 0;\n                var tView = rootLView[TVIEW];\n                var projection$$1 = tElementNode.projection = [];\n                for (var i = 0; i < projectableNodes.length; i++) {\n                    var nodeList = projectableNodes[i];\n                    var firstTNode = null;\n                    var previousTNode = null;\n                    for (var j = 0; j < nodeList.length; j++) {\n                        if (tView.firstTemplatePass) {\n                            // For dynamically created components such as ComponentRef, we create a new TView for\n                            // each insert. This is not ideal since we should be sharing the TViews.\n                            // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                            // method.\n                            tView.expandoStartIndex++;\n                            tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                            tView.data.splice(index + HEADER_OFFSET, 0, null);\n                            rootLView.splice(index + HEADER_OFFSET, 0, null);\n                        }\n                        var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                        previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                        previousTNode = tNode;\n                    }\n                    projection$$1.push(firstTNode);\n                }\n            }\n            // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n            // executed here?\n            // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n            component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n            addToViewTree(rootLView, HEADER_OFFSET, componentView);\n            refreshDescendantViews(rootLView);\n        }\n        finally {\n            leaveView(oldLView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n        if (isInternalRootView) {\n            // The host element of the internal root view is attached to the component's host view node\n            componentRef.hostView._tViewNode.child = tElementNode;\n        }\n        return componentRef;\n    };\n    return ComponentFactory$$1;\n}(ComponentFactory));\nvar componentFactoryResolver = new ComponentFactoryResolver$1();\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nvar ComponentRef$1 = /** @class */ (function (_super) {\n    __extends(ComponentRef$$1, _super);\n    function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n        var _this = _super.call(this) || this;\n        _this.location = location;\n        _this._rootLView = _rootLView;\n        _this._tNode = _tNode;\n        _this.destroyCbs = [];\n        _this.instance = instance;\n        _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n        _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n        _this.componentType = componentType;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n        get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n        this.hostView.destroy();\n    };\n    ComponentRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return ComponentRef$$1;\n}(ComponentRef));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n *\n * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n * please see [BAZEL.md](./docs/BAZEL.md).\n */\nvar _devMode = true;\nvar _runModeLocked = false;\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @publicApi\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * @publicApi\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nvar InertBodyHelper = /** @class */ (function () {\n    function InertBodyHelper(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so\n            // we need to create one.\n            var inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     */\n    InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (_a) {\n            return null;\n        }\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(undefined);\n        var body = xhr.response.body;\n        body.removeChild(body.firstChild);\n        return body;\n    };\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     */\n    InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            var body = new window\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body;\n            body.removeChild(body.firstChild);\n            return body;\n        }\n        catch (_a) {\n            return null;\n        }\n    };\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     */\n    InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n        // Prefer using <template> element if supported.\n        var templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if (this.defaultDoc.documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    };\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n        var elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (var i = elAttrs.length - 1; 0 < i; i--) {\n            var attrib = elAttrs.item(i);\n            var attrName = attrib.name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        var childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(childNode);\n            childNode = childNode.nextSibling;\n        }\n    };\n    return InertBodyHelper;\n}());\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!window.DOMParser;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either an allowed protocol (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction tagSet(tags) {\n    var e_1, _a;\n    var res = {};\n    try {\n        for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var t = _c.value;\n            res[t] = true;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return res;\n}\nfunction merge$1() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var e_2, _a;\n    var res = {};\n    try {\n        for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n            var s = sets_1_1.value;\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return res;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge$1(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge$1(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n// Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n//\n// Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n// `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n// don't want to preserve the content, if the elements themselves are going to be removed.\nvar SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n        // because characters were re-encoded.\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var current = el.firstChild;\n        var traverseContent = true;\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                traverseContent = this.startElement(current);\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(current.nodeValue);\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (traverseContent && current.firstChild) {\n                current = current.firstChild;\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(current);\n                }\n                var next = this.checkClobberedElement(current, current.nextSibling);\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, current.parentNode);\n            }\n        }\n        return this.buf.join('');\n    };\n    /**\n     * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n     * be traversed. Element content must always be traversed (even if the element itself is not\n     * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n     *\n     * @param element The element to sanitize.\n     * @return True if the element's contents should be traversed.\n     */\n    SanitizingHtmlSerializer.prototype.startElement = function (element) {\n        var tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var elAttr = elAttrs.item(i);\n            var attrName = elAttr.name;\n            var lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            var value = elAttr.value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n        return true;\n    };\n    SanitizingHtmlSerializer.prototype.endElement = function (current) {\n        var tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var hi = match.charCodeAt(0);\n        var low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    var inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var mXSSAttempts = 5;\n        var parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = inertBodyElement.innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        var sanitizer = new SanitizingHtmlSerializer();\n        var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\nfunction getTemplateContent(el) {\n    return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n        el.content :\n        null;\n}\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marks that the next string is for element.\n *\n * See `I18nMutateOpCodes` documentation.\n */\nvar ELEMENT_MARKER = {\n    marker: 'element'\n};\n/**\n * Marks that the next string is for comment.\n *\n * See `I18nMutateOpCodes` documentation.\n */\nvar COMMENT_MARKER = {\n    marker: 'comment'\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MARKER = \"\\uFFFD\";\nvar ICU_BLOCK_REGEX = /^\\s*(ï¿½\\d+:?\\d*ï¿½)\\s*,\\s*(select|plural)\\s*,/;\nvar SUBTEMPLATE_REGEXP = /ï¿½\\/?\\*(\\d+:\\d+)ï¿½/gi;\nvar PH_REGEXP = /ï¿½(\\/?[#*]\\d+):?\\d*ï¿½/gi;\nvar BINDING_REGEXP = /ï¿½(\\d+):?\\d*ï¿½/gi;\nvar ICU_REGEXP = /({\\s*ï¿½\\d+:?\\d*ï¿½\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n// i18nPostproocess regexps\nvar PP_PLACEHOLDERS = /\\[(ï¿½.+?ï¿½?)\\]/g;\nvar PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\nvar PP_ICUS = /ï¿½I18N_EXP_(ICU(_\\d+)?)ï¿½/g;\n/**\n * Breaks pattern into strings and top level {...} blocks.\n * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n * keys and cases.\n * Original code from closure library, modified for Angular.\n *\n * @param pattern (sub)Pattern to be broken.\n *\n */\nfunction extractParts(pattern) {\n    if (!pattern) {\n        return [];\n    }\n    var prevPos = 0;\n    var braceStack = [];\n    var results = [];\n    var braces = /[{}]/g;\n    // lastIndex doesn't get set to 0 so we have to.\n    braces.lastIndex = 0;\n    var match;\n    while (match = braces.exec(pattern)) {\n        var pos = match.index;\n        if (match[0] == '}') {\n            braceStack.pop();\n            if (braceStack.length == 0) {\n                // End of the block.\n                var block = pattern.substring(prevPos, pos);\n                if (ICU_BLOCK_REGEX.test(block)) {\n                    results.push(parseICUBlock(block));\n                }\n                else if (block) { // Don't push empty strings\n                    results.push(block);\n                }\n                prevPos = pos + 1;\n            }\n        }\n        else {\n            if (braceStack.length == 0) {\n                var substring_1 = pattern.substring(prevPos, pos);\n                results.push(substring_1);\n                prevPos = pos + 1;\n            }\n            braceStack.push('{');\n        }\n    }\n    var substring = pattern.substring(prevPos);\n    if (substring != '') {\n        results.push(substring);\n    }\n    return results;\n}\n/**\n * Parses text containing an ICU expression and produces a JSON object for it.\n * Original code from closure library, modified for Angular.\n *\n * @param pattern Text containing an ICU expression that needs to be parsed.\n *\n */\nfunction parseICUBlock(pattern) {\n    var cases = [];\n    var values = [];\n    var icuType = 1 /* plural */;\n    var mainBinding = 0;\n    pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n        if (type === 'select') {\n            icuType = 0 /* select */;\n        }\n        else {\n            icuType = 1 /* plural */;\n        }\n        mainBinding = parseInt(binding.substr(1), 10);\n        return '';\n    });\n    var parts = extractParts(pattern);\n    // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n    for (var pos = 0; pos < parts.length;) {\n        var key = parts[pos++].trim();\n        if (icuType === 1 /* plural */) {\n            // Key can be \"=x\", we just want \"x\"\n            key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n        }\n        if (key.length) {\n            cases.push(key);\n        }\n        var blocks = extractParts(parts[pos++]);\n        if (blocks.length) {\n            values.push(blocks);\n        }\n    }\n    assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n    // TODO(ocombe): support ICU expressions in attributes, see #21615\n    return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n}\n/**\n * Removes everything inside the sub-templates of a message.\n */\nfunction removeInnerTemplateTranslation(message) {\n    var match;\n    var res = '';\n    var index = 0;\n    var inTemplate = false;\n    var tagMatched;\n    while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n        if (!inTemplate) {\n            res += message.substring(index, match.index + match[0].length);\n            tagMatched = match[1];\n            inTemplate = true;\n        }\n        else {\n            if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                index = match.index;\n                inTemplate = false;\n            }\n        }\n    }\n    ngDevMode &&\n        assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n    res += message.substr(index);\n    return res;\n}\n/**\n * Extracts a part of a message and removes the rest.\n *\n * This method is used for extracting a part of the message associated with a template. A translated\n * message can span multiple templates.\n *\n * Example:\n * ```\n * <div i18n>Translate <span *ngIf>me</span>!</div>\n * ```\n *\n * @param message The message to crop\n * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n * external template and removes all sub-templates.\n */\nfunction getTranslationForTemplate(message, subTemplateIndex) {\n    if (typeof subTemplateIndex !== 'number') {\n        // We want the root template message, ignore all sub-templates\n        return removeInnerTemplateTranslation(message);\n    }\n    else {\n        // We want a specific sub-template\n        var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n        var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n        return removeInnerTemplateTranslation(message.substring(start, end));\n    }\n}\n/**\n * Generate the OpCodes to update the bindings of a string.\n *\n * @param str The string containing the bindings.\n * @param destinationNode Index of the destination node which will receive the binding.\n * @param attrName Name of the attribute, if the string belongs to an attribute.\n * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n */\nfunction generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n    if (sanitizeFn === void 0) { sanitizeFn = null; }\n    var updateOpCodes = [null, null]; // Alloc space for mask and size\n    var textParts = str.split(BINDING_REGEXP);\n    var mask = 0;\n    for (var j = 0; j < textParts.length; j++) {\n        var textValue = textParts[j];\n        if (j & 1) {\n            // Odd indexes are bindings\n            var bindingIndex = parseInt(textValue, 10);\n            updateOpCodes.push(-1 - bindingIndex);\n            mask = mask | toMaskBit(bindingIndex);\n        }\n        else if (textValue !== '') {\n            // Even indexes are text\n            updateOpCodes.push(textValue);\n        }\n    }\n    updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n        (attrName ? 1 /* Attr */ : 0 /* Text */));\n    if (attrName) {\n        updateOpCodes.push(attrName, sanitizeFn);\n    }\n    updateOpCodes[0] = mask;\n    updateOpCodes[1] = updateOpCodes.length - 2;\n    return updateOpCodes;\n}\nfunction getBindingMask(icuExpression, mask) {\n    if (mask === void 0) { mask = 0; }\n    mask = mask | toMaskBit(icuExpression.mainBinding);\n    var match;\n    for (var i = 0; i < icuExpression.values.length; i++) {\n        var valueArr = icuExpression.values[i];\n        for (var j = 0; j < valueArr.length; j++) {\n            var value = valueArr[j];\n            if (typeof value === 'string') {\n                while (match = BINDING_REGEXP.exec(value)) {\n                    mask = mask | toMaskBit(parseInt(match[1], 10));\n                }\n            }\n            else {\n                mask = getBindingMask(value, mask);\n            }\n        }\n    }\n    return mask;\n}\nvar i18nIndexStack = [];\nvar i18nIndexStackPointer = -1;\n/**\n * Convert binding index to mask bit.\n *\n * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n * that we will execute binding code more often than necessary. (penalty of performance)\n */\nfunction toMaskBit(bindingIndex) {\n    return 1 << Math.min(bindingIndex, 31);\n}\nvar parentIndexStack = [];\n/**\n * Marks a block of text as translatable.\n *\n * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `ï¿½{index}(:{block})ï¿½`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `ï¿½#{index}(:{block})ï¿½`/`ï¿½/#{index}(:{block})ï¿½`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `ï¿½*{index}:{block}ï¿½`/`ï¿½/*{index}:{block}ï¿½`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param index A unique index of the translation in the static block.\n * @param message The translation message.\n * @param subTemplateIndex Optional sub-template index in the `message`.\n */\nfunction i18nStart(index, message, subTemplateIndex) {\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertDefined(tView, \"tView should be defined\");\n    i18nIndexStack[++i18nIndexStackPointer] = index;\n    if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n        i18nStartFirstPass(tView, index, message, subTemplateIndex);\n    }\n}\n/**\n * See `i18nStart` above.\n */\nfunction i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n    var viewData = getLView();\n    var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n        previousOrParentTNode && previousOrParentTNode.parent;\n    var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n        parentTNode.index - HEADER_OFFSET :\n        index;\n    var parentIndexPointer = 0;\n    parentIndexStack[parentIndexPointer] = parentIndex;\n    var createOpCodes = [];\n    // If the previous node wasn't the direct parent then we have a translation without top level\n    // element and we need to keep a reference of the previous element if there is one\n    if (index > 0 && previousOrParentTNode !== parentTNode) {\n        // Create an OpCode to select the previous TNode\n        createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n    }\n    var updateOpCodes = [];\n    var icuExpressions = [];\n    var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n    var msgParts = templateTranslation.split(PH_REGEXP);\n    for (var i = 0; i < msgParts.length; i++) {\n        var value = msgParts[i];\n        if (i & 1) {\n            // Odd indexes are placeholders (elements and sub-templates)\n            if (value.charAt(0) === '/') {\n                // It is a closing tag\n                if (value.charAt(1) === '#') {\n                    var phIndex = parseInt(value.substr(2), 10);\n                    parentIndex = parentIndexStack[--parentIndexPointer];\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                }\n            }\n            else {\n                var phIndex = parseInt(value.substr(1), 10);\n                // The value represents a placeholder that we move to the designated index\n                createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                if (value.charAt(0) === '#') {\n                    parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                }\n            }\n        }\n        else {\n            // Even indexes are text (including bindings & ICU expressions)\n            var parts = value.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // Create the comment node that will anchor the ICU expression\n                    allocExpando(viewData);\n                    var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                    createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    // Update codes for the ICU expression\n                    var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                    var mask = getBindingMask(icuExpression);\n                    icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                    // Since this is recursive, the last TIcu that was pushed is the one we want\n                    var tIcuIndex = icuExpressions.length - 1;\n                    updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                    3, // skip 3 opCodes if not changed\n                    -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                    2, // skip 2 opCodes if not changed\n                    icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = value.match(BINDING_REGEXP);\n                    // Create text nodes\n                    allocExpando(viewData);\n                    createOpCodes.push(\n                    // If there is a binding, the value will be set during update\n                    hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                    }\n                }\n            }\n        }\n    }\n    // NOTE: local var needed to properly assert the type of `TI18n`.\n    var tI18n = {\n        vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n        expandoStartIndex: expandoStartIndex,\n        create: createOpCodes,\n        update: updateOpCodes,\n        icus: icuExpressions.length ? icuExpressions : null,\n    };\n    tView.data[index + HEADER_OFFSET] = tI18n;\n}\nfunction appendI18nNode(tNode, parentTNode, previousTNode) {\n    ngDevMode && ngDevMode.rendererMoveNode++;\n    var viewData = getLView();\n    if (!previousTNode) {\n        previousTNode = parentTNode;\n    }\n    // re-organize node tree to put this node in the correct position.\n    if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n        tNode.next = parentTNode.child;\n        parentTNode.child = tNode;\n    }\n    else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n        tNode.next = previousTNode.next;\n        previousTNode.next = tNode;\n    }\n    else {\n        tNode.next = null;\n    }\n    if (parentTNode !== viewData[HOST_NODE]) {\n        tNode.parent = parentTNode;\n    }\n    appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n    var slotValue = viewData[tNode.index];\n    if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n        // Nodes that inject ViewContainerRef also have a comment node that should be moved\n        appendChild(slotValue[NATIVE], tNode, viewData);\n    }\n    return tNode;\n}\n/**\n * Handles message string post-processing for internationalization.\n *\n * Handles message string post-processing by transforming it from intermediate\n * format (that might contain some markers that we need to replace) to the final\n * form, consumable by i18nStart instruction. Post processing steps include:\n *\n * 1. Resolve all multi-value cases (like [ï¿½*1:1ï¿½ï¿½#2:1ï¿½|ï¿½#4:1ï¿½|ï¿½5ï¿½])\n * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n * 3. Replace all ICU references with corresponding values (like ï¿½ICU_EXP_ICU_1ï¿½)\n *    in case multiple ICUs have the same placeholder name\n *\n * @param message Raw translation string for post processing\n * @param replacements Set of replacements that should be applied\n *\n * @returns Transformed string that can be consumed by i18nStart instruction\n *\n * @publicAPI\n */\nfunction i18nPostprocess(message, replacements) {\n    //\n    // Step 1: resolve all multi-value cases (like [ï¿½*1:1ï¿½ï¿½#2:1ï¿½|ï¿½#4:1ï¿½|ï¿½5ï¿½])\n    //\n    var matches = {};\n    var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n        if (!matches[content]) {\n            matches[content] = content.split('|');\n        }\n        if (!matches[content].length) {\n            throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n        }\n        return matches[content].shift();\n    });\n    // verify that we injected all values\n    var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n    if (hasUnmatchedValues) {\n        throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n    }\n    // return current result if no replacements specified\n    if (!Object.keys(replacements).length) {\n        return result;\n    }\n    //\n    // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n    //\n    result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n        return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n    });\n    //\n    // Step 3: replace all ICU references with corresponding values (like ï¿½ICU_EXP_ICU_1ï¿½)\n    // in case multiple ICUs have the same placeholder name\n    //\n    result = result.replace(PP_ICUS, function (match, key) {\n        if (replacements.hasOwnProperty(key)) {\n            var list = replacements[key];\n            if (!list.length) {\n                throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n            }\n            return list.shift();\n        }\n        return match;\n    });\n    return result;\n}\n/**\n * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n */\nfunction i18nEnd() {\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertDefined(tView, \"tView should be defined\");\n    i18nEndFirstPass(tView);\n}\n/**\n * See `i18nEnd` above.\n */\nfunction i18nEndFirstPass(tView) {\n    var viewData = getLView();\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n    var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n    var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n    ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n    // The last placeholder that was added before `i18nEnd`\n    var previousOrParentTNode = getPreviousOrParentTNode();\n    var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n    // Remove deleted placeholders\n    // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n    for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n        if (visitedPlaceholders.indexOf(i) === -1) {\n            removeNode(i, viewData);\n        }\n    }\n}\nfunction readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n    var renderer = getLView()[RENDERER];\n    var currentTNode = null;\n    var previousTNode = null;\n    var visitedPlaceholders = [];\n    for (var i = 0; i < createOpCodes.length; i++) {\n        var opCode = createOpCodes[i];\n        if (typeof opCode == 'string') {\n            var textRNode = createTextNode(opCode, renderer);\n            ngDevMode && ngDevMode.rendererCreateTextNode++;\n            previousTNode = currentTNode;\n            currentTNode =\n                createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n            setIsParent(false);\n        }\n        else if (typeof opCode == 'number') {\n            switch (opCode & 7 /* MASK_OPCODE */) {\n                case 1 /* AppendChild */:\n                    var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                    var destinationTNode = void 0;\n                    if (destinationNodeIndex === index) {\n                        // If the destination node is `i18nStart`, we don't have a\n                        // top-level node and we should use the host node instead\n                        destinationTNode = viewData[HOST_NODE];\n                    }\n                    else {\n                        destinationTNode = getTNode(destinationNodeIndex, viewData);\n                    }\n                    ngDevMode &&\n                        assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                    previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                    destinationTNode.next = null;\n                    break;\n                case 0 /* Select */:\n                    var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                    visitedPlaceholders.push(nodeIndex);\n                    previousTNode = currentTNode;\n                    currentTNode = getTNode(nodeIndex, viewData);\n                    if (currentTNode) {\n                        setPreviousOrParentTNode(currentTNode);\n                        if (currentTNode.type === 3 /* Element */) {\n                            setIsParent(true);\n                        }\n                    }\n                    break;\n                case 5 /* ElementEnd */:\n                    var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                    previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                    setPreviousOrParentTNode(currentTNode);\n                    setIsParent(false);\n                    break;\n                case 4 /* Attr */:\n                    var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                    var attrName = createOpCodes[++i];\n                    var attrValue = createOpCodes[++i];\n                    elementAttribute(elementNodeIndex, attrName, attrValue);\n                    break;\n                default:\n                    throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n            }\n        }\n        else {\n            switch (opCode) {\n                case COMMENT_MARKER:\n                    var commentValue = createOpCodes[++i];\n                    ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                    var commentRNode = renderer.createComment(commentValue);\n                    ngDevMode && ngDevMode.rendererCreateComment++;\n                    previousTNode = currentTNode;\n                    currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                    attachPatchData(commentRNode, viewData);\n                    currentTNode.activeCaseIndex = null;\n                    // We will add the case nodes later, during the update phase\n                    setIsParent(false);\n                    break;\n                case ELEMENT_MARKER:\n                    var tagNameValue = createOpCodes[++i];\n                    ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                    var elementRNode = renderer.createElement(tagNameValue);\n                    ngDevMode && ngDevMode.rendererCreateElement++;\n                    previousTNode = currentTNode;\n                    currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                    break;\n                default:\n                    throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n            }\n        }\n    }\n    setIsParent(false);\n    return visitedPlaceholders;\n}\nfunction readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n    if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n    var caseCreated = false;\n    for (var i = 0; i < updateOpCodes.length; i++) {\n        // bit code to check if we should apply the next update\n        var checkBit = updateOpCodes[i];\n        // Number of opCodes to skip until next set of update codes\n        var skipCodes = updateOpCodes[++i];\n        if (bypassCheckBit || (checkBit & changeMask)) {\n            // The value has been updated since last checked\n            var value = '';\n            for (var j = i + 1; j <= (i + skipCodes); j++) {\n                var opCode = updateOpCodes[j];\n                if (typeof opCode == 'string') {\n                    value += opCode;\n                }\n                else if (typeof opCode == 'number') {\n                    if (opCode < 0) {\n                        // It's a binding index whose value is negative\n                        value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                    }\n                    else {\n                        var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                        var tIcuIndex = void 0;\n                        var tIcu = void 0;\n                        var icuTNode = void 0;\n                        switch (opCode & 3 /* MASK_OPCODE */) {\n                            case 1 /* Attr */:\n                                var attrName = updateOpCodes[++j];\n                                var sanitizeFn = updateOpCodes[++j];\n                                elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                break;\n                            case 0 /* Text */:\n                                textBinding(nodeIndex, value);\n                                break;\n                            case 2 /* IcuSwitch */:\n                                tIcuIndex = updateOpCodes[++j];\n                                tIcu = icus[tIcuIndex];\n                                icuTNode = getTNode(nodeIndex, viewData);\n                                // If there is an active case, delete the old nodes\n                                if (icuTNode.activeCaseIndex !== null) {\n                                    var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                    for (var k = 0; k < removeCodes.length; k++) {\n                                        var removeOpCode = removeCodes[k];\n                                        switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                            case 3 /* Remove */:\n                                                var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                removeNode(nodeIndex_1, viewData);\n                                                break;\n                                            case 6 /* RemoveNestedIcu */:\n                                                var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                if (activeIndex !== null) {\n                                                    var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    var nestedTIcu = icus[nestedIcuTIndex];\n                                                    addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                }\n                                                break;\n                                        }\n                                    }\n                                }\n                                // Update the active caseIndex\n                                var caseIndex = getCaseIndex(tIcu, value);\n                                icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                // Add the nodes for the new case\n                                readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                caseCreated = true;\n                                break;\n                            case 3 /* IcuUpdate */:\n                                tIcuIndex = updateOpCodes[++j];\n                                tIcu = icus[tIcuIndex];\n                                icuTNode = getTNode(nodeIndex, viewData);\n                                readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        i += skipCodes;\n    }\n}\nfunction removeNode(index, viewData) {\n    var removedPhTNode = getTNode(index, viewData);\n    var removedPhRNode = getNativeByIndex(index, viewData);\n    removeChild(removedPhTNode, removedPhRNode || null, viewData);\n    removedPhTNode.detached = true;\n    ngDevMode && ngDevMode.rendererRemoveNode++;\n    var slotValue = load(index);\n    if (isLContainer(slotValue)) {\n        var lContainer = slotValue;\n        if (removedPhTNode.type !== 0 /* Container */) {\n            removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n        }\n        lContainer[RENDER_PARENT] = null;\n    }\n}\n/**\n *\n * Use this instruction to create a translation block that doesn't contain any placeholder.\n * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n *\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `ï¿½{index}(:{block})ï¿½`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `ï¿½#{index}(:{block})ï¿½`/`ï¿½/#{index}(:{block})ï¿½`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `ï¿½*{index}:{block}ï¿½`/`ï¿½/*{index}:{block}ï¿½`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param index A unique index of the translation in the static block.\n * @param message The translation message.\n * @param subTemplateIndex Optional sub-template index in the `message`.\n */\nfunction i18n(index, message, subTemplateIndex) {\n    i18nStart(index, message, subTemplateIndex);\n    i18nEnd();\n}\n/**\n * Marks a list of attributes as translatable.\n *\n * @param index A unique index in the static block\n * @param values\n */\nfunction i18nAttributes(index, values) {\n    var tView = getLView()[TVIEW];\n    ngDevMode && assertDefined(tView, \"tView should be defined\");\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n    if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n        i18nAttributesFirstPass(tView, index, values);\n    }\n}\n/**\n * See `i18nAttributes` above.\n */\nfunction i18nAttributesFirstPass(tView, index, values) {\n    var previousElement = getPreviousOrParentTNode();\n    var previousElementIndex = previousElement.index - HEADER_OFFSET;\n    var updateOpCodes = [];\n    for (var i = 0; i < values.length; i += 2) {\n        var attrName = values[i];\n        var message = values[i + 1];\n        var parts = message.split(ICU_REGEXP);\n        for (var j = 0; j < parts.length; j++) {\n            var value = parts[j];\n            if (j & 1) ;\n            else if (value !== '') {\n                // Even indexes are text (including bindings)\n                var hasBinding = !!value.match(BINDING_REGEXP);\n                if (hasBinding) {\n                    addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                }\n                else {\n                    elementAttribute(previousElementIndex, attrName, value);\n                }\n            }\n        }\n    }\n    tView.data[index + HEADER_OFFSET] = updateOpCodes;\n}\nvar changeMask = 0;\nvar shiftsCounter = 0;\n/**\n * Stores the values of the bindings during each update cycle in order to determine if we need to\n * update the translated nodes.\n *\n * @param expression The binding's new value or NO_CHANGE\n */\nfunction i18nExp(expression) {\n    if (expression !== NO_CHANGE) {\n        changeMask = changeMask | (1 << shiftsCounter);\n    }\n    shiftsCounter++;\n}\n/**\n * Updates a translation block or an i18n attribute when the bindings have changed.\n *\n * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n * (i18n attribute) on which it should update the content.\n */\nfunction i18nApply(index) {\n    if (shiftsCounter) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        var tI18n = tView.data[index + HEADER_OFFSET];\n        var updateOpCodes = void 0;\n        var icus = null;\n        if (Array.isArray(tI18n)) {\n            updateOpCodes = tI18n;\n        }\n        else {\n            updateOpCodes = tI18n.update;\n            icus = tI18n.icus;\n        }\n        var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n        readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n        // Reset changeMask & maskBit to default for the next update cycle\n        changeMask = 0;\n        shiftsCounter = 0;\n    }\n}\nvar Plural;\n(function (Plural) {\n    Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n    Plural[Plural[\"One\"] = 1] = \"One\";\n    Plural[Plural[\"Two\"] = 2] = \"Two\";\n    Plural[Plural[\"Few\"] = 3] = \"Few\";\n    Plural[Plural[\"Many\"] = 4] = \"Many\";\n    Plural[Plural[\"Other\"] = 5] = \"Other\";\n})(Plural || (Plural = {}));\n/**\n * Returns the plural case based on the locale.\n * This is a copy of the deprecated function that we used in Angular v4.\n * // TODO(ocombe): remove this once we can the real getPluralCase function\n *\n * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n */\nfunction getPluralCase(locale, nLike) {\n    if (typeof nLike === 'string') {\n        nLike = parseInt(nLike, 10);\n    }\n    var n = nLike;\n    var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n    var i = Math.floor(Math.abs(n));\n    var v = nDecimal.length;\n    var f = parseInt(nDecimal, 10);\n    var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n    var lang = locale.split('-')[0].toLowerCase();\n    switch (lang) {\n        case 'af':\n        case 'asa':\n        case 'az':\n        case 'bem':\n        case 'bez':\n        case 'bg':\n        case 'brx':\n        case 'ce':\n        case 'cgg':\n        case 'chr':\n        case 'ckb':\n        case 'ee':\n        case 'el':\n        case 'eo':\n        case 'es':\n        case 'eu':\n        case 'fo':\n        case 'fur':\n        case 'gsw':\n        case 'ha':\n        case 'haw':\n        case 'hu':\n        case 'jgo':\n        case 'jmc':\n        case 'ka':\n        case 'kk':\n        case 'kkj':\n        case 'kl':\n        case 'ks':\n        case 'ksb':\n        case 'ky':\n        case 'lb':\n        case 'lg':\n        case 'mas':\n        case 'mgo':\n        case 'ml':\n        case 'mn':\n        case 'nb':\n        case 'nd':\n        case 'ne':\n        case 'nn':\n        case 'nnh':\n        case 'nyn':\n        case 'om':\n        case 'or':\n        case 'os':\n        case 'ps':\n        case 'rm':\n        case 'rof':\n        case 'rwk':\n        case 'saq':\n        case 'seh':\n        case 'sn':\n        case 'so':\n        case 'sq':\n        case 'ta':\n        case 'te':\n        case 'teo':\n        case 'tk':\n        case 'tr':\n        case 'ug':\n        case 'uz':\n        case 'vo':\n        case 'vun':\n        case 'wae':\n        case 'xog':\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ak':\n        case 'ln':\n        case 'mg':\n        case 'pa':\n        case 'ti':\n            if (n === Math.floor(n) && n >= 0 && n <= 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'am':\n        case 'as':\n        case 'bn':\n        case 'fa':\n        case 'gu':\n        case 'hi':\n        case 'kn':\n        case 'mr':\n        case 'zu':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ar':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                return Plural.Many;\n            return Plural.Other;\n        case 'ast':\n        case 'ca':\n        case 'de':\n        case 'en':\n        case 'et':\n        case 'fi':\n        case 'fy':\n        case 'gl':\n        case 'it':\n        case 'nl':\n        case 'sv':\n        case 'sw':\n        case 'ur':\n        case 'yi':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            return Plural.Other;\n        case 'be':\n            if (n % 10 === 1 && !(n % 100 === 11))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                !(n % 100 >= 12 && n % 100 <= 14))\n                return Plural.Few;\n            if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'br':\n            if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                return Plural.One;\n            if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                return Plural.Two;\n            if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                    n % 100 >= 90 && n % 100 <= 99))\n                return Plural.Few;\n            if (!(n === 0) && n % 1e6 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'bs':\n        case 'hr':\n        case 'sr':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14) ||\n                f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                    !(f % 100 >= 12 && f % 100 <= 14))\n                return Plural.Few;\n            return Plural.Other;\n        case 'cs':\n        case 'sk':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'cy':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === 3)\n                return Plural.Few;\n            if (n === 6)\n                return Plural.Many;\n            return Plural.Other;\n        case 'da':\n            if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                return Plural.One;\n            return Plural.Other;\n        case 'dsb':\n        case 'hsb':\n            if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ff':\n        case 'fr':\n        case 'hy':\n        case 'kab':\n            if (i === 0 || i === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'fil':\n            if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                return Plural.One;\n            return Plural.Other;\n        case 'ga':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === Math.floor(n) && n >= 3 && n <= 6)\n                return Plural.Few;\n            if (n === Math.floor(n) && n >= 7 && n <= 10)\n                return Plural.Many;\n            return Plural.Other;\n        case 'gd':\n            if (n === 1 || n === 11)\n                return Plural.One;\n            if (n === 2 || n === 12)\n                return Plural.Two;\n            if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                return Plural.Few;\n            return Plural.Other;\n        case 'gv':\n            if (v === 0 && i % 10 === 1)\n                return Plural.One;\n            if (v === 0 && i % 10 === 2)\n                return Plural.Two;\n            if (v === 0 &&\n                (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'he':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === 2 && v === 0)\n                return Plural.Two;\n            if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'is':\n            if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'ksh':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'kw':\n        case 'naq':\n        case 'se':\n        case 'smn':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            return Plural.Other;\n        case 'lag':\n            if (n === 0)\n                return Plural.Zero;\n            if ((i === 0 || i === 1) && !(n === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'lt':\n            if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.Few;\n            if (!(f === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'lv':\n        case 'prg':\n            if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                return Plural.Zero;\n            if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                !(v === 2) && f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mk':\n            if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mt':\n            if (n === 1)\n                return Plural.One;\n            if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pl':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pt':\n            if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                return Plural.One;\n            return Plural.Other;\n        case 'ro':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (!(v === 0) || n === 0 ||\n                !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ru':\n        case 'uk':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && i % 10 === 0 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'shi':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            if (n === Math.floor(n) && n >= 2 && n <= 10)\n                return Plural.Few;\n            return Plural.Other;\n        case 'si':\n            if (n === 0 || n === 1 || i === 0 && f === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'sl':\n            if (v === 0 && i % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                return Plural.Few;\n            return Plural.Other;\n        case 'tzm':\n            if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                return Plural.One;\n            return Plural.Other;\n        // When there is no specification, the default is always \"other\"\n        // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n        // > other (requiredâgeneral plural form â also used if the language only has a single form)\n        default:\n            return Plural.Other;\n    }\n}\nfunction getPluralCategory(value, locale) {\n    var plural = getPluralCase(locale, value);\n    switch (plural) {\n        case Plural.Zero:\n            return 'zero';\n        case Plural.One:\n            return 'one';\n        case Plural.Two:\n            return 'two';\n        case Plural.Few:\n            return 'few';\n        case Plural.Many:\n            return 'many';\n        default:\n            return 'other';\n    }\n}\n/**\n * Returns the index of the current case of an ICU expression depending on the main binding value\n *\n * @param icuExpression\n * @param bindingValue The value of the main binding used by this ICU expression\n */\nfunction getCaseIndex(icuExpression, bindingValue) {\n    var index = icuExpression.cases.indexOf(bindingValue);\n    if (index === -1) {\n        switch (icuExpression.type) {\n            case 1 /* plural */: {\n                // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                var locale = 'en-US';\n                var resolvedCase = getPluralCategory(bindingValue, locale);\n                index = icuExpression.cases.indexOf(resolvedCase);\n                if (index === -1 && resolvedCase !== 'other') {\n                    index = icuExpression.cases.indexOf('other');\n                }\n                break;\n            }\n            case 0 /* select */: {\n                index = icuExpression.cases.indexOf('other');\n                break;\n            }\n        }\n    }\n    return index;\n}\n/**\n * Generate the OpCodes for ICU expressions.\n *\n * @param tIcus\n * @param icuExpression\n * @param startIndex\n * @param expandoStartIndex\n */\nfunction icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n    var createCodes = [];\n    var removeCodes = [];\n    var updateCodes = [];\n    var vars = [];\n    var childIcus = [];\n    for (var i = 0; i < icuExpression.values.length; i++) {\n        // Each value is an array of strings & other ICU expressions\n        var valueArr = icuExpression.values[i];\n        var nestedIcus = [];\n        for (var j = 0; j < valueArr.length; j++) {\n            var value = valueArr[j];\n            if (typeof value !== 'string') {\n                // It is an nested ICU expression\n                var icuIndex = nestedIcus.push(value) - 1;\n                // Replace nested ICU expression by a comment node\n                valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n            }\n        }\n        var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n        createCodes.push(icuCase.create);\n        removeCodes.push(icuCase.remove);\n        updateCodes.push(icuCase.update);\n        vars.push(icuCase.vars);\n        childIcus.push(icuCase.childIcus);\n    }\n    var tIcu = {\n        type: icuExpression.type,\n        vars: vars,\n        expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n        cases: icuExpression.cases,\n        create: createCodes,\n        remove: removeCodes,\n        update: updateCodes\n    };\n    tIcus.push(tIcu);\n    var lView = getLView();\n    var worstCaseSize = Math.max.apply(Math, __spread(vars));\n    for (var i = 0; i < worstCaseSize; i++) {\n        allocExpando(lView);\n    }\n}\n/**\n * Transforms a string template into an HTML template and a list of instructions used to update\n * attributes or nodes that contain bindings.\n *\n * @param unsafeHtml The string to parse\n * @param parentIndex\n * @param nestedIcus\n * @param tIcus\n * @param expandoStartIndex\n */\nfunction parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n    var inertBodyHelper = new InertBodyHelper(document);\n    var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n    if (!inertBodyElement) {\n        throw new Error('Unable to generate inert body element');\n    }\n    var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n    var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n    parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n    return opCodes;\n}\nvar NESTED_ICU = /ï¿½(\\d+)ï¿½/;\n/**\n * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n *\n * @param currentNode The first node to parse\n * @param icuCase The data for the ICU expression case that contains those nodes\n * @param parentIndex Index of the current node's parent\n * @param nestedIcus Data for the nested ICU expressions that this case contains\n * @param tIcus Data for all ICU expressions of the current message\n * @param expandoStartIndex Expando start index for the current ICU expression\n */\nfunction parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n    if (currentNode) {\n        var nestedIcusToCreate = [];\n        while (currentNode) {\n            var nextNode = currentNode.nextSibling;\n            var newIndex = expandoStartIndex + ++icuCase.vars;\n            switch (currentNode.nodeType) {\n                case Node.ELEMENT_NODE:\n                    var element$$1 = currentNode;\n                    var tagName = element$$1.tagName.toLowerCase();\n                    if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                        // This isn't a valid element, we won't create an element for it\n                        icuCase.vars--;\n                    }\n                    else {\n                        icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        var elAttrs = element$$1.attributes;\n                        for (var i = 0; i < elAttrs.length; i++) {\n                            var attr = elAttrs.item(i);\n                            var lowerAttrName = attr.name.toLowerCase();\n                            var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                            // we assume the input string is safe, unless it's using a binding\n                            if (hasBinding_1) {\n                                if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                    if (URI_ATTRS[lowerAttrName]) {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                    }\n                                    else if (SRCSET_ATTRS[lowerAttrName]) {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                    }\n                                    else {\n                                        addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                    }\n                                }\n                                else {\n                                    ngDevMode &&\n                                        console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                }\n                            }\n                            else {\n                                icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                            }\n                        }\n                        // Parse the children of this node (if any)\n                        parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                        // Remove the parent node after the children\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                    }\n                    break;\n                case Node.TEXT_NODE:\n                    var value = currentNode.textContent || '';\n                    var hasBinding = value.match(BINDING_REGEXP);\n                    icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                    }\n                    break;\n                case Node.COMMENT_NODE:\n                    // Check if the comment node is a placeholder for a nested ICU\n                    var match = NESTED_ICU.exec(currentNode.textContent || '');\n                    if (match) {\n                        var nestedIcuIndex = parseInt(match[1], 10);\n                        var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                        // Create the comment node that will anchor the ICU expression\n                        icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        var nestedIcu = nestedIcus[nestedIcuIndex];\n                        nestedIcusToCreate.push([nestedIcu, newIndex]);\n                    }\n                    else {\n                        // We do not handle any other type of comment\n                        icuCase.vars--;\n                    }\n                    break;\n                default:\n                    // We do not handle any other type of element\n                    icuCase.vars--;\n            }\n            currentNode = nextNode;\n        }\n        for (var i = 0; i < nestedIcusToCreate.length; i++) {\n            var nestedIcu = nestedIcusToCreate[i][0];\n            var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n            icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n            // Since this is recursive, the last TIcu that was pushed is the one we want\n            var nestTIcuIndex = tIcus.length - 1;\n            icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n            icuCase.childIcus.push(nestTIcuIndex);\n            var mask = getBindingMask(nestedIcu);\n            icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n            3, // skip 3 opCodes if not changed\n            -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n            2, // skip 2 opCodes if not changed\n            nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n            icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_FACTORY_RESOLVER = {\n    provide: ComponentFactoryResolver,\n    useClass: ComponentFactoryResolver$1,\n    deps: [NgModuleRef],\n};\nvar NgModuleRef$1 = /** @class */ (function (_super) {\n    __extends(NgModuleRef$$1, _super);\n    function NgModuleRef$$1(ngModuleType, _parent) {\n        var _this = _super.call(this) || this;\n        _this._parent = _parent;\n        // tslint:disable-next-line:require-internal-with-underscore\n        _this._bootstrapComponents = [];\n        _this.injector = _this;\n        _this.destroyCbs = [];\n        var ngModuleDef = getNgModuleDef(ngModuleType);\n        ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n        _this._bootstrapComponents = ngModuleDef.bootstrap;\n        var additionalProviders = [\n            {\n                provide: NgModuleRef,\n                useValue: _this,\n            },\n            COMPONENT_FACTORY_RESOLVER\n        ];\n        _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n        _this.instance = _this.get(ngModuleType);\n        return _this;\n    }\n    NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = InjectFlags.Default; }\n        if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {\n            return this;\n        }\n        return this._r3Injector.get(token, notFoundValue, injectFlags);\n    };\n    Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n        get: function () {\n            return this.get(ComponentFactoryResolver);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef$$1.prototype.destroy = function () {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.forEach(function (fn) { return fn(); });\n        this.destroyCbs = null;\n    };\n    NgModuleRef$$1.prototype.onDestroy = function (callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n        this.destroyCbs.push(callback);\n    };\n    return NgModuleRef$$1;\n}(NgModuleRef));\nvar NgModuleFactory$1 = /** @class */ (function (_super) {\n    __extends(NgModuleFactory$$1, _super);\n    function NgModuleFactory$$1(moduleType) {\n        var _this = _super.call(this) || this;\n        _this.moduleType = moduleType;\n        return _this;\n    }\n    NgModuleFactory$$1.prototype.create = function (parentInjector) {\n        return new NgModuleRef$1(this.moduleType, parentInjector);\n    };\n    return NgModuleFactory$$1;\n}(NgModuleFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n * on the type.\n *\n * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n *\n * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n * tree-shaken away during production builds.\n */\nfunction setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n    var _a;\n    var clazz = type;\n    if (decorators !== null) {\n        if (clazz.decorators !== undefined) {\n            (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n        }\n        else {\n            clazz.decorators = decorators;\n        }\n    }\n    if (ctorParameters !== null) {\n        // Rather than merging, clobber the existing parameters. If other projects exist which use\n        // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n        // but that is vanishingly unlikely.\n        clazz.ctorParameters = ctorParameters;\n    }\n    if (propDecorators !== null) {\n        // The property decorator objects are merged as it is possible different fields have different\n        // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n        // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n        // decorator that's also been downleveled.\n        if (clazz.propDecorators !== undefined) {\n            clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n        }\n        else {\n            clazz.propDecorators = propDecorators;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Bindings for pure functions are stored after regular bindings.\n *\n * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n * ------------------------------------------------------------------------------------------\n * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n * ------------------------------------------------------------------------------------------\n *                    ^                      ^\n *      TView.bindingStartIndex      TView.expandoStartIndex\n *\n * Pure function instructions are given an offset from the binding root. Adding the offset to the\n * binding root gives the first index where the bindings are stored. In component views, the binding\n * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n * any directive instances + any hostVars in directives evaluated before it.\n *\n * See VIEW_DATA.md for more information about host binding resolution.\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns a value\n * @param thisArg Optional calling context of pureFn\n * @returns value\n */\nfunction pureFunction0(slotOffset, pureFn, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    return isCreationMode() ?\n        updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n        getBinding(lView, bindingIndex);\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction1(slotOffset, pureFn, exp, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var lView = getLView();\n    var bindingIndex = getBindingRoot() + slotOffset;\n    return bindingUpdated(lView, bindingIndex, exp) ?\n        updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        getBinding(lView, bindingIndex + 1);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n        updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        getBinding(lView, bindingIndex + 2);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n        updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        getBinding(lView, bindingIndex + 3);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n        updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        getBinding(lView, bindingIndex + 4);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n        updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        getBinding(lView, bindingIndex + 5);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n        updateBinding(lView, bindingIndex + 6, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        getBinding(lView, bindingIndex + 6);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n        updateBinding(lView, bindingIndex + 7, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        getBinding(lView, bindingIndex + 7);\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var lView = getLView();\n    var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n    return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n        updateBinding(lView, bindingIndex + 8, thisArg ?\n            pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        getBinding(lView, bindingIndex + 8);\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nfunction pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n    var bindingIndex = getBindingRoot() + slotOffset;\n    var different = false;\n    var lView = getLView();\n    for (var i = 0; i < exps.length; i++) {\n        bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n    }\n    return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n        getBinding(lView, bindingIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n */\nfunction pipe(index, pipeName) {\n    var tView = getLView()[TVIEW];\n    var pipeDef;\n    var adjustedIndex = index + HEADER_OFFSET;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n        tView.data[adjustedIndex] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = tView.data[adjustedIndex];\n    }\n    var pipeInstance = pipeDef.factory(null);\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef$1(name, registry) {\n    if (registry) {\n        for (var i = registry.length - 1; i >= 0; i--) {\n            var pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind1(index, slotOffset, v1) {\n    var pipeInstance = load(index);\n    return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1));\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind2(index, slotOffset, v1, v2) {\n    var pipeInstance = load(index);\n    return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2));\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind3(index, slotOffset, v1, v2, v3) {\n    var pipeInstance = load(index);\n    return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3));\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    var pipeInstance = load(index);\n    return unwrapValue(isPure(index) ?\n        pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4));\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n */\nfunction pipeBindV(index, slotOffset, values) {\n    var pipeInstance = load(index);\n    return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values));\n}\nfunction isPure(index) {\n    return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n}\n/**\n * Unwrap the output of a pipe transformation.\n * In order to trick change detection into considering that the new value is always different from\n * the old one, the old value is overwritten by NO_CHANGE.\n *\n * @param newValue the pipe transformation output.\n */\nfunction unwrapValue(newValue) {\n    if (WrappedValue.isWrapped(newValue)) {\n        newValue = WrappedValue.unwrap(newValue);\n        getLView()[getBindingRoot()] = NO_CHANGE;\n    }\n    return newValue;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * @usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * @publicApi\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of this class that can\n     * deliver events synchronously or asynchronously.\n     *\n     * @param isAsync When true, deliver events asynchronously.\n     *\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * Emits an event containing a given value.\n     * @param value The value to emit.\n     */\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * Registers handlers for events emitted by this instance.\n     * @param generatorOrNext When supplied, a custom handler for emitted events.\n     * @param error When supplied, a custom handler for an error notification\n     * from this emitter.\n     * @param complete When supplied, a custom handler for a completion\n     * notification from this emitter.\n     */\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(Subject));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an embedded template that can be used to instantiate embedded views.\n * To instantiate embedded views based on a template, use the `ViewContainerRef`\n * method `createEmbeddedView()`.\n *\n * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n * is injected into the constructor of the directive,\n * using the `TemplateRef` token.\n *\n * You can also use a `Query` to find a `TemplateRef` associated with\n * a component or a directive.\n *\n * @see `ViewContainerRef`\n * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n *\n * @publicApi\n */\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    /** @internal */\n    TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n    return TemplateRef;\n}());\nvar SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\nvar SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\nvar SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(parent, shallow, deep) {\n        this.parent = parent;\n        this.shallow = shallow;\n        this.deep = deep;\n    }\n    LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n        if (descend) {\n            this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n    LQueries_.prototype.container = function () {\n        var shallowResults = copyQueriesToContainer(this.shallow);\n        var deepResults = copyQueriesToContainer(this.deep);\n        return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n    };\n    LQueries_.prototype.createView = function () {\n        var shallowResults = copyQueriesToView(this.shallow);\n        var deepResults = copyQueriesToView(this.deep);\n        return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n    };\n    LQueries_.prototype.insertView = function (index) {\n        insertView$1(index, this.shallow);\n        insertView$1(index, this.deep);\n    };\n    LQueries_.prototype.addNode = function (tNode) {\n        add(this.deep, tNode);\n        if (isContentQueryHost(tNode)) {\n            add(this.shallow, tNode);\n            if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                // if node has a content query and parent also has a content query\n                // both queries need to check this node for shallow matches\n                add(this.parent.shallow, tNode);\n            }\n            return this.parent;\n        }\n        isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n        return this;\n    };\n    LQueries_.prototype.removeView = function () {\n        removeView$1(this.shallow);\n        removeView$1(this.deep);\n    };\n    return LQueries_;\n}());\nfunction isRootNodeOfQuery(tNode) {\n    return tNode.parent === null || isContentQueryHost(tNode.parent);\n}\nfunction copyQueriesToContainer(query) {\n    var result = null;\n    while (query) {\n        var containerValues = []; // prepare room for views\n        query.values.push(containerValues);\n        var clonedQuery = {\n            next: result,\n            list: query.list,\n            predicate: query.predicate,\n            values: containerValues,\n            containerValues: null\n        };\n        result = clonedQuery;\n        query = query.next;\n    }\n    return result;\n}\nfunction copyQueriesToView(query) {\n    var result = null;\n    while (query) {\n        var clonedQuery = {\n            next: result,\n            list: query.list,\n            predicate: query.predicate,\n            values: [],\n            containerValues: query.values\n        };\n        result = clonedQuery;\n        query = query.next;\n    }\n    return result;\n}\nfunction insertView$1(index, query) {\n    while (query) {\n        ngDevMode &&\n            assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n        query.containerValues.splice(index, 0, query.values);\n        query = query.next;\n    }\n}\nfunction removeView$1(query) {\n    while (query) {\n        ngDevMode &&\n            assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n        var containerValues = query.containerValues;\n        var viewValuesIdx = containerValues.indexOf(query.values);\n        var removed = containerValues.splice(viewValuesIdx, 1);\n        // mark a query as dirty only when removed view had matching modes\n        ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n        if (removed[0].length) {\n            query.list.setDirty();\n        }\n        query = query.next;\n    }\n}\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    var localNames = tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return localNames[i + 1];\n            }\n        }\n    }\n    return null;\n}\n// TODO: \"read\" should be an AbstractType (FW-486)\nfunction queryByReadToken(read, tNode, currentView) {\n    var factoryFn = read[NG_ELEMENT_ID];\n    if (typeof factoryFn === 'function') {\n        return factoryFn();\n    }\n    else {\n        var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n        if (matchingIdx !== null) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n    }\n    return null;\n}\nfunction queryByTNodeType(tNode, currentView) {\n    if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n        return createElementRef(ElementRef, tNode, currentView);\n    }\n    if (tNode.type === 0 /* Container */) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    return null;\n}\nfunction queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n    var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n    if (read) {\n        return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n    }\n    return templateRefResult;\n}\nfunction queryRead(tNode, currentView, read, matchingIdx) {\n    if (read) {\n        return queryByReadToken(read, tNode, currentView);\n    }\n    if (matchingIdx > -1) {\n        return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n    }\n    // if read token and / or strategy is not specified,\n    // detect it using appropriate tNode type\n    return queryByTNodeType(tNode, currentView);\n}\nfunction add(query, tNode) {\n    var currentView = getLView();\n    while (query) {\n        var predicate = query.predicate;\n        var type = predicate.type;\n        if (type) {\n            var result = null;\n            if (type === TemplateRef) {\n                result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n            }\n            else {\n                var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                if (matchingIdx !== null) {\n                    result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                }\n            }\n            if (result !== null) {\n                addMatch(query, result);\n            }\n        }\n        else {\n            var selector = predicate.selector;\n            for (var i = 0; i < selector.length; i++) {\n                var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                if (matchingIdx !== null) {\n                    var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\nfunction createPredicate(predicate, read) {\n    var isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : predicate,\n        selector: isArray ? predicate : null,\n        read: read\n    };\n}\nfunction createQuery(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: queryList._valuesTree,\n        containerValues: null\n    };\n}\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /** @internal */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList_.prototype.filter = function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList_.prototype.find = function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList_.prototype.reduce = function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList_.prototype.some = function (fn) {\n        return this._values.some(fn);\n    };\n    QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n    QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n    QueryList_.prototype.toString = function () { return this._values.toString(); };\n    QueryList_.prototype.reset = function (res) {\n        this._values = flatten(res);\n        this.dirty = false;\n    };\n    QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    QueryList_.prototype.setDirty = function () { this.dirty = true; };\n    QueryList_.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList_;\n}());\nvar QueryList = QueryList_;\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, \n// TODO: \"read\" should be an AbstractType (FW-486)\nread) {\n    ngDevMode && assertPreviousIsParent(getIsParent());\n    var queryList = new QueryList();\n    var queries = getOrCreateCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nfunction queryRefresh(queryList) {\n    var queryListImpl = queryList;\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n * `<ng-template>` element.\n */\nfunction templateRefExtractor(tNode, currentView) {\n    return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BRAND = '__SANITIZER_TRUSTED_BRAND__';\nfunction allowSanitizationBypass(value, type) {\n    return (value instanceof String && value[BRAND] === type);\n}\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n}\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    var trusted = new String(trustedString);\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value) {\n    var outsideSingle = true;\n    var outsideDouble = true;\n    for (var i = 0; i < value.length; i++) {\n        var c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nfunction sanitizeHtml(unsafeHtml) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify$1(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nfunction sanitizeStyle(unsafeStyle) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify$1(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nfunction sanitizeUrl(unsafeUrl) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify$1(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nfunction sanitizeResourceUrl(unsafeResourceUrl) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link\n * bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts` have been allowed to pass.\n */\nfunction sanitizeScript(unsafeScript) {\n    var sanitizer = getSanitizer();\n    if (sanitizer) {\n        return sanitizer.sanitize(SecurityContext.SCRIPT, unsafeScript) || '';\n    }\n    if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n        return unsafeScript.toString();\n    }\n    throw new Error('unsafe value used in a script context');\n}\n/**\n * The default style sanitizer will handle sanitization for style properties by\n * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n */\nvar defaultStyleSanitizer = function (prop, value) {\n    if (value === undefined) {\n        return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n            prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n    }\n    return sanitizeStyle(value);\n};\nfunction getSanitizer() {\n    var lView = getLView();\n    return lView && lView[SANITIZER];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nvar angularCoreEnv = {\n    'ÉµdefineBase': defineBase,\n    'ÉµdefineComponent': defineComponent,\n    'ÉµdefineDirective': defineDirective,\n    'defineInjectable': defineInjectable,\n    'defineInjector': defineInjector,\n    'ÉµdefineNgModule': defineNgModule,\n    'ÉµdefinePipe': definePipe,\n    'ÉµdirectiveInject': directiveInject,\n    'ÉµgetFactoryOf': getFactoryOf,\n    'ÉµgetInheritedFactory': getInheritedFactory,\n    'inject': inject,\n    'ÉµinjectAttribute': injectAttribute,\n    'ÉµtemplateRefExtractor': templateRefExtractor,\n    'ÉµNgOnChangesFeature': NgOnChangesFeature,\n    'ÉµProvidersFeature': ProvidersFeature,\n    'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n    'ÉµelementAttribute': elementAttribute,\n    'Éµbind': bind,\n    'Éµcontainer': container,\n    'ÉµnextContext': nextContext,\n    'ÉµcontainerRefreshStart': containerRefreshStart,\n    'ÉµcontainerRefreshEnd': containerRefreshEnd,\n    'ÉµloadQueryList': loadQueryList,\n    'ÉµnamespaceHTML': namespaceHTML,\n    'ÉµnamespaceMathML': namespaceMathML,\n    'ÉµnamespaceSVG': namespaceSVG,\n    'ÉµenableBindings': enableBindings,\n    'ÉµdisableBindings': disableBindings,\n    'ÉµallocHostVars': allocHostVars,\n    'ÉµelementStart': elementStart,\n    'ÉµelementEnd': elementEnd,\n    'Éµelement': element,\n    'ÉµelementContainerStart': elementContainerStart,\n    'ÉµelementContainerEnd': elementContainerEnd,\n    'ÉµpureFunction0': pureFunction0,\n    'ÉµpureFunction1': pureFunction1,\n    'ÉµpureFunction2': pureFunction2,\n    'ÉµpureFunction3': pureFunction3,\n    'ÉµpureFunction4': pureFunction4,\n    'ÉµpureFunction5': pureFunction5,\n    'ÉµpureFunction6': pureFunction6,\n    'ÉµpureFunction7': pureFunction7,\n    'ÉµpureFunction8': pureFunction8,\n    'ÉµpureFunctionV': pureFunctionV,\n    'ÉµgetCurrentView': getCurrentView,\n    'ÉµrestoreView': restoreView,\n    'Éµinterpolation1': interpolation1,\n    'Éµinterpolation2': interpolation2,\n    'Éµinterpolation3': interpolation3,\n    'Éµinterpolation4': interpolation4,\n    'Éµinterpolation5': interpolation5,\n    'Éµinterpolation6': interpolation6,\n    'Éµinterpolation7': interpolation7,\n    'Éµinterpolation8': interpolation8,\n    'ÉµinterpolationV': interpolationV,\n    'ÉµelementClassProp': elementClassProp,\n    'Éµlistener': listener,\n    'Éµload': load,\n    'Éµprojection': projection,\n    'ÉµelementProperty': elementProperty,\n    'ÉµcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n    'ÉµpipeBind1': pipeBind1,\n    'ÉµpipeBind2': pipeBind2,\n    'ÉµpipeBind3': pipeBind3,\n    'ÉµpipeBind4': pipeBind4,\n    'ÉµpipeBindV': pipeBindV,\n    'ÉµprojectionDef': projectionDef,\n    'Éµpipe': pipe,\n    'Éµquery': query,\n    'ÉµqueryRefresh': queryRefresh,\n    'ÉµregisterContentQuery': registerContentQuery,\n    'Éµreference': reference,\n    'ÉµelementStyling': elementStyling,\n    'ÉµelementHostAttrs': elementHostAttrs,\n    'ÉµelementStylingMap': elementStylingMap,\n    'ÉµelementStyleProp': elementStyleProp,\n    'ÉµelementStylingApply': elementStylingApply,\n    'Éµtemplate': template,\n    'Éµtext': text,\n    'ÉµtextBinding': textBinding,\n    'ÉµembeddedViewStart': embeddedViewStart,\n    'ÉµembeddedViewEnd': embeddedViewEnd,\n    'Éµi18n': i18n,\n    'Éµi18nAttributes': i18nAttributes,\n    'Éµi18nExp': i18nExp,\n    'Éµi18nStart': i18nStart,\n    'Éµi18nEnd': i18nEnd,\n    'Éµi18nApply': i18nApply,\n    'Éµi18nPostprocess': i18nPostprocess,\n    'ÉµsanitizeHtml': sanitizeHtml,\n    'ÉµsanitizeStyle': sanitizeStyle,\n    'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n    'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n    'ÉµsanitizeScript': sanitizeScript,\n    'ÉµsanitizeUrl': sanitizeUrl\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n * @publicApi\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\n/**\n * Map of module-id to the corresponding NgModule.\n * - In pre Ivy we track NgModuleFactory,\n * - In post Ivy we track the NgModuleType\n */\nvar modules = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @publicApi\n */\nfunction registerModuleFactory(id, factory) {\n    var existing = modules.get(id);\n    assertNotExisting(id, existing && existing.moduleType);\n    modules.set(id, factory);\n}\nfunction assertNotExisting(id, type) {\n    if (type) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n    }\n}\nfunction registerNgModuleType(id, ngModuleType) {\n    var existing = modules.get(id);\n    assertNotExisting(id, existing);\n    modules.set(id, ngModuleType);\n}\nfunction getModuleFactory__PRE_R3__(id) {\n    var factory = modules.get(id);\n    if (!factory)\n        throw noModuleError(id);\n    return factory;\n}\nfunction getModuleFactory__POST_R3__(id) {\n    var type = modules.get(id);\n    if (!type)\n        throw noModuleError(id);\n    return new NgModuleFactory$1(type);\n}\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @publicApi\n */\nvar getModuleFactory = getModuleFactory__PRE_R3__;\nfunction noModuleError(id) {\n    return new Error(\"No module with ID \" + id + \" loaded\");\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * @publicApi\n */\nvar Type = Function;\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\nvar INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, __spread([void 0], args)))();\n    }; };\n    /** @internal */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        var typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (type.parameters && type.parameters !== parentCtor.parameters) {\n            return type.parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var tsickleCtorParams = type.ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n        var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(type.length).fill(undefined);\n    };\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(type);\n        var parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n            var annotations = typeOrFunc.annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return typeOrFunc[ANNOTATIONS];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.propMetadata &&\n            typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n            var propMetadata = typeOrFunc.propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.propDecorators &&\n            typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n            var propDecorators_1 = typeOrFunc.propDecorators;\n            var propMetadata_1 = {};\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return typeOrFunc[PROP_METADATA];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var propMetadata = {};\n        if (parentCtor !== Object) {\n            var parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                }\n                decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n    ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return new Function('o', 'v', 'return o.' + name + ' = v;');\n    };\n    ReflectionCapabilities.prototype.method = function (name) {\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return new Function('o', 'args', functionBody);\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    ReflectionCapabilities.prototype.importUri = function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var decoratorType = decoratorInvocation.type;\n        var annotationCls = decoratorType.annotationCls;\n        var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n    });\n}\nfunction getParentCtor(ctor) {\n    var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    var parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _reflect = null;\nfunction getReflect() {\n    return (_reflect = _reflect || new ReflectionCapabilities());\n}\nfunction reflectDependencies(type) {\n    return convertDependencies(getReflect().parameters(type));\n}\nfunction convertDependencies(deps) {\n    var compiler = getCompilerFacade();\n    return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n}\nfunction reflectDependency(compiler, dep) {\n    var meta = {\n        token: null,\n        host: false,\n        optional: false,\n        resolved: compiler.R3ResolvedDependencyType.Token,\n        self: false,\n        skipSelf: false,\n    };\n    function setTokenAndResolvedType(token) {\n        meta.resolved = compiler.R3ResolvedDependencyType.Token;\n        meta.token = token;\n    }\n    if (Array.isArray(dep)) {\n        if (dep.length === 0) {\n            throw new Error('Dependency array must have arguments.');\n        }\n        for (var j = 0; j < dep.length; j++) {\n            var param = dep[j];\n            if (param === undefined) {\n                // param may be undefined if type of dep is not set by ngtsc\n                continue;\n            }\n            else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                meta.optional = true;\n            }\n            else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                meta.skipSelf = true;\n            }\n            else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                meta.self = true;\n            }\n            else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                meta.host = true;\n            }\n            else if (param instanceof Inject) {\n                meta.token = param.token;\n            }\n            else if (param instanceof Attribute) {\n                if (param.attributeName === undefined) {\n                    throw new Error(\"Attribute name must be defined.\");\n                }\n                meta.token = param.attributeName;\n                meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n            }\n            else {\n                setTokenAndResolvedType(param);\n            }\n        }\n    }\n    else {\n        setTokenAndResolvedType(dep);\n    }\n    return meta;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_ARRAY$2 = [];\nvar moduleQueue = [];\n/**\n * Enqueues moduleDef to be checked later to see if scope can be set on its\n * component declarations.\n */\nfunction enqueueModuleForDelayedScoping(moduleType, ngModule) {\n    moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n}\nvar flushingModuleQueue = false;\n/**\n * Loops over queued module definitions, if a given module definition has all of its\n * declarations resolved, it dequeues that module definition and sets the scope on\n * its declarations.\n */\nfunction flushModuleScopingQueueAsMuchAsPossible() {\n    if (!flushingModuleQueue) {\n        flushingModuleQueue = true;\n        try {\n            for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                    // dequeue\n                    moduleQueue.splice(i, 1);\n                    setScopeOnDeclaredComponents(moduleType, ngModule);\n                }\n            }\n        }\n        finally {\n            flushingModuleQueue = false;\n        }\n    }\n}\n/**\n * Returns truthy if a declaration has resolved. If the declaration happens to be\n * an array of declarations, it will recurse to check each declaration in that array\n * (which may also be arrays).\n */\nfunction isResolvedDeclaration(declaration) {\n    if (Array.isArray(declaration)) {\n        return declaration.every(isResolvedDeclaration);\n    }\n    return !!resolveForwardRef(declaration);\n}\n/**\n * Compiles a module in JIT mode.\n *\n * This function automatically gets called when a class has a `@NgModule` decorator.\n */\nfunction compileNgModule(moduleType, ngModule) {\n    if (ngModule === void 0) { ngModule = {}; }\n    compileNgModuleDefs(moduleType, ngModule);\n    // Because we don't know if all declarations have resolved yet at the moment the\n    // NgModule decorator is executing, we're enqueueing the setting of module scope\n    // on its declarations to be run at a later time when all declarations for the module,\n    // including forward refs, have resolved.\n    enqueueModuleForDelayedScoping(moduleType, ngModule);\n}\n/**\n * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n */\nfunction compileNgModuleDefs(moduleType, ngModule) {\n    ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n    ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n    var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n    var ngModuleDef = null;\n    Object.defineProperty(moduleType, NG_MODULE_DEF, {\n        configurable: true,\n        get: function () {\n            if (ngModuleDef === null) {\n                ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                    type: moduleType,\n                    bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2, resolveForwardRef),\n                    declarations: declarations.map(resolveForwardRef),\n                    imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2, resolveForwardRef)\n                        .map(expandModuleWithProviders),\n                    exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2, resolveForwardRef)\n                        .map(expandModuleWithProviders),\n                    emitInline: true,\n                });\n            }\n            return ngModuleDef;\n        }\n    });\n    if (ngModule.id) {\n        registerNgModuleType(ngModule.id, moduleType);\n    }\n    var ngInjectorDef = null;\n    Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n        get: function () {\n            if (ngInjectorDef === null) {\n                ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                var meta = {\n                    name: moduleType.name,\n                    type: moduleType,\n                    deps: reflectDependencies(moduleType),\n                    providers: ngModule.providers || EMPTY_ARRAY$2,\n                    imports: [\n                        (ngModule.imports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                        (ngModule.exports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                    ],\n                };\n                ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n            }\n            return ngInjectorDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\nfunction verifySemanticsOfNgModuleDef(moduleType) {\n    if (verifiedNgModule.get(moduleType))\n        return;\n    verifiedNgModule.set(moduleType, true);\n    moduleType = resolveForwardRef(moduleType);\n    var ngModuleDef = getNgModuleDef(moduleType, true);\n    var errors = [];\n    ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n    var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$1(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n    ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n    ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n    ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n    var ngModule = getAnnotation(moduleType, 'NgModule');\n    if (ngModule) {\n        ngModule.imports &&\n            flatten$1(ngModule.imports, unwrapModuleWithProvidersImports)\n                .forEach(verifySemanticsOfNgModuleDef);\n        ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n        ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n    }\n    // Throw Error if any errors were detected.\n    if (errors.length) {\n        throw new Error(errors.join('\\n'));\n    }\n    ////////////////////////////////////////////////////////////////////////////////////////////////\n    function verifyDeclarationsHaveDefinitions(type) {\n        type = resolveForwardRef(type);\n        var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n        if (!def) {\n            errors.push(\"Unexpected value '\" + stringify$1(type) + \"' declared by the module '\" + stringify$1(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n        }\n    }\n    function verifyExportsAreDeclaredOrReExported(type) {\n        type = resolveForwardRef(type);\n        var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n            getPipeDef(type) && 'pipe';\n        if (kind) {\n            // only checked if we are declared as Component, Directive, or Pipe\n            // Modules don't need to be declared or imported.\n            if (combinedDeclarations.lastIndexOf(type) === -1) {\n                // We are exporting something which we don't explicitly declare or import.\n                errors.push(\"Can't export \" + kind + \" \" + stringify$1(type) + \" from \" + stringify$1(moduleType) + \" as it was neither declared nor imported!\");\n            }\n        }\n    }\n    function verifyDeclarationIsUnique(type) {\n        type = resolveForwardRef(type);\n        var existingModule = ownerNgModule.get(type);\n        if (existingModule && existingModule !== moduleType) {\n            var modules = [existingModule, moduleType].map(stringify$1).sort();\n            errors.push(\"Type \" + stringify$1(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                (\"Please consider moving \" + stringify$1(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringify$1(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n        }\n        else {\n            // Mark type as having owner.\n            ownerNgModule.set(type, moduleType);\n        }\n    }\n    function verifyComponentIsPartOfNgModule(type) {\n        type = resolveForwardRef(type);\n        var existingModule = ownerNgModule.get(type);\n        if (!existingModule) {\n            errors.push(\"Component \" + stringify$1(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n    }\n    function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n        type = resolveForwardRef(type);\n        if (getComponentDef(type)) {\n            // We know we are component\n            var component = getAnnotation(type, 'Component');\n            if (component && component.entryComponents) {\n                component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n            }\n        }\n    }\n}\nfunction unwrapModuleWithProvidersImports(typeOrWithProviders) {\n    typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n    return typeOrWithProviders.ngModule || typeOrWithProviders;\n}\nfunction getAnnotation(type, name) {\n    var annotation = null;\n    collect(type.__annotations__);\n    collect(type.decorators);\n    return annotation;\n    function collect(annotations) {\n        if (annotations) {\n            annotations.forEach(readAnnotation);\n        }\n    }\n    function readAnnotation(decorator) {\n        if (!annotation) {\n            var proto = Object.getPrototypeOf(decorator);\n            if (proto.ngMetadataName == name) {\n                annotation = decorator;\n            }\n            else if (decorator.type) {\n                var proto_1 = Object.getPrototypeOf(decorator.type);\n                if (proto_1.ngMetadataName == name) {\n                    annotation = decorator.args[0];\n                }\n            }\n        }\n    }\n}\n/**\n * Keep track of compiled components. This is needed because in tests we often want to compile the\n * same component with more than one NgModule. This would cause an error unless we reset which\n * NgModule the component belongs to. We keep the list of compiled components here so that the\n * TestBed can reset it later.\n */\nvar ownerNgModule = new Map();\nvar verifiedNgModule = new Map();\nfunction resetCompiledComponents() {\n    ownerNgModule = new Map();\n    verifiedNgModule = new Map();\n    moduleQueue.length = 0;\n}\n/**\n * Computes the combined declarations of explicit declarations, as well as declarations inherited\n * by\n * traversing the exports of imported modules.\n * @param type\n */\nfunction computeCombinedExports(type) {\n    type = resolveForwardRef(type);\n    var ngModuleDef = getNgModuleDef(type, true);\n    return __spread(flatten$1(ngModuleDef.exports.map(function (type) {\n        var ngModuleDef = getNgModuleDef(type);\n        if (ngModuleDef) {\n            verifySemanticsOfNgModuleDef(type);\n            return computeCombinedExports(type);\n        }\n        else {\n            return type;\n        }\n    })));\n}\n/**\n * Some declared components may be compiled asynchronously, and thus may not have their\n * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n * the `ngSelectorScope` property of the declared type.\n */\nfunction setScopeOnDeclaredComponents(moduleType, ngModule) {\n    var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n    var transitiveScopes = transitiveScopesFor(moduleType);\n    declarations.forEach(function (declaration) {\n        if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n            // An `ngComponentDef` field exists - go ahead and patch the component directly.\n            var component = declaration;\n            var componentDef = getComponentDef(component);\n            patchComponentDefWithScope(componentDef, transitiveScopes);\n        }\n        else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n            // Set `ngSelectorScope` for future reference when the component compilation finishes.\n            declaration.ngSelectorScope = moduleType;\n        }\n    });\n}\n/**\n * Patch the definition of a component with directives and pipes from the compilation scope of\n * a given module.\n */\nfunction patchComponentDefWithScope(componentDef, transitiveScopes) {\n    componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n        .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n        .filter(function (def) { return !!def; }); };\n    componentDef.pipeDefs = function () {\n        return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n    };\n}\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. It can be called\n * on modules with components that have not fully compiled yet, but the result should not be used\n * until they have.\n */\nfunction transitiveScopesFor(moduleType) {\n    if (!isNgModule(moduleType)) {\n        throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n    }\n    var def = getNgModuleDef(moduleType);\n    if (def.transitiveCompileScopes !== null) {\n        return def.transitiveCompileScopes;\n    }\n    var scopes = {\n        compilation: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n        exported: {\n            directives: new Set(),\n            pipes: new Set(),\n        },\n    };\n    def.declarations.forEach(function (declared) {\n        var declaredWithDefs = declared;\n        if (getPipeDef(declaredWithDefs)) {\n            scopes.compilation.pipes.add(declared);\n        }\n        else {\n            // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n            // had its template compiled yet. In either case, it gets added to the compilation's\n            // directives.\n            scopes.compilation.directives.add(declared);\n        }\n    });\n    def.imports.forEach(function (imported) {\n        var importedTyped = imported;\n        if (!isNgModule(importedTyped)) {\n            throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n        }\n        // When this module imports another, the imported module's exported directives and pipes are\n        // added to the compilation scope of this module.\n        var importedScope = transitiveScopesFor(importedTyped);\n        importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n        importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n    });\n    def.exports.forEach(function (exported) {\n        var exportedTyped = exported;\n        // Either the type is a module, a pipe, or a component/directive (which may not have an\n        // ngComponentDef as it might be compiled asynchronously).\n        if (isNgModule(exportedTyped)) {\n            // When this module exports another, the exported module's exported directives and pipes are\n            // added to both the compilation and exported scopes of this module.\n            var exportedScope = transitiveScopesFor(exportedTyped);\n            exportedScope.exported.directives.forEach(function (entry) {\n                scopes.compilation.directives.add(entry);\n                scopes.exported.directives.add(entry);\n            });\n            exportedScope.exported.pipes.forEach(function (entry) {\n                scopes.compilation.pipes.add(entry);\n                scopes.exported.pipes.add(entry);\n            });\n        }\n        else if (getPipeDef(exportedTyped)) {\n            scopes.exported.pipes.add(exportedTyped);\n        }\n        else {\n            scopes.exported.directives.add(exportedTyped);\n        }\n    });\n    def.transitiveCompileScopes = scopes;\n    return scopes;\n}\nfunction flatten$1(values, mapFn) {\n    var out = [];\n    values.forEach(function (value) {\n        if (Array.isArray(value)) {\n            out.push.apply(out, __spread(flatten$1(value, mapFn)));\n        }\n        else {\n            out.push(mapFn ? mapFn(value) : value);\n        }\n    });\n    return out;\n}\nfunction expandModuleWithProviders(value) {\n    if (isModuleWithProviders(value)) {\n        return value.ngModule;\n    }\n    return value;\n}\nfunction isModuleWithProviders(value) {\n    return value.ngModule !== undefined;\n}\nfunction isNgModule(value) {\n    return !!getNgModuleDef(value);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * ngComponentDef onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n * until the global queue has been resolved with a call to `resolveComponentResources`.\n */\nfunction compileComponent(type, metadata) {\n    var ngComponentDef = null;\n    // Metadata may have resources which need to be resolved.\n    maybeQueueResolutionOfComponentResources(metadata);\n    Object.defineProperty(type, NG_COMPONENT_DEF, {\n        get: function () {\n            var compiler = getCompilerFacade();\n            if (ngComponentDef === null) {\n                if (componentNeedsResolution(metadata)) {\n                    var error = [\"Component '\" + stringify$1(type) + \"' is not resolved:\"];\n                    if (metadata.templateUrl) {\n                        error.push(\" - templateUrl: \" + stringify$1(metadata.templateUrl));\n                    }\n                    if (metadata.styleUrls && metadata.styleUrls.length) {\n                        error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                    }\n                    error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                    throw new Error(error.join('\\n'));\n                }\n                var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/template.html\", meta);\n                // When NgModule decorator executed, we enqueued the module definition such that\n                // it would only dequeue and add itself as module scope to all of its declarations,\n                // but only if  if all of its declarations had resolved. This call runs the check\n                // to see if any modules that are in the queue can be dequeued and add scope to\n                // their declarations.\n                flushModuleScopingQueueAsMuchAsPossible();\n                // If component compilation is async, then the @NgModule annotation which declares the\n                // component may execute and set an ngSelectorScope property on the component type. This\n                // allows the component to patch itself with directiveDefs from the module after it\n                // finishes compiling.\n                if (hasSelectorScope(type)) {\n                    var scopes = transitiveScopesFor(type.ngSelectorScope);\n                    patchComponentDefWithScope(ngComponentDef, scopes);\n                }\n            }\n            return ngComponentDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\nfunction hasSelectorScope(component) {\n    return component.ngSelectorScope !== undefined;\n}\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * ngDirectiveDef onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nfunction compileDirective(type, directive) {\n    var ngDirectiveDef = null;\n    Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n        get: function () {\n            if (ngDirectiveDef === null) {\n                var facade = directiveMetadata(type, directive);\n                ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n            }\n            return ngDirectiveDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\nfunction extendsDirectlyFromObject(type) {\n    return Object.getPrototypeOf(type.prototype) === Object.prototype;\n}\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nfunction directiveMetadata(type, metadata) {\n    // Reflect inputs and outputs.\n    var propMetadata = getReflect().propMetadata(type);\n    return {\n        name: type.name,\n        type: type,\n        typeArgumentCount: 0,\n        selector: metadata.selector,\n        deps: reflectDependencies(type),\n        host: metadata.host || EMPTY_OBJ,\n        propMetadata: propMetadata,\n        inputs: metadata.inputs || EMPTY_ARRAY,\n        outputs: metadata.outputs || EMPTY_ARRAY,\n        queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n        lifecycle: {\n            usesOnChanges: type.prototype.ngOnChanges !== undefined,\n        },\n        typeSourceSpan: null,\n        usesInheritance: !extendsDirectlyFromObject(type),\n        exportAs: metadata.exportAs || null,\n        providers: metadata.providers || null,\n    };\n}\nfunction convertToR3QueryPredicate(selector) {\n    return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n}\nfunction convertToR3QueryMetadata(propertyName, ann) {\n    return {\n        propertyName: propertyName,\n        predicate: convertToR3QueryPredicate(ann.selector),\n        descendants: ann.descendants,\n        first: ann.first,\n        read: ann.read ? ann.read : null\n    };\n}\nfunction extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n    var queriesMeta = [];\n    var _loop_1 = function (field) {\n        if (propMetadata.hasOwnProperty(field)) {\n            propMetadata[field].forEach(function (ann) {\n                if (isQueryAnn(ann)) {\n                    if (!ann.selector) {\n                        throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                            (\"\\\"\" + stringify$1(type) + \"\\\" since the query selector wasn't defined.\"));\n                    }\n                    queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                }\n            });\n        }\n    };\n    for (var field in propMetadata) {\n        _loop_1(field);\n    }\n    return queriesMeta;\n}\nfunction isContentQuery(value) {\n    var name = value.ngMetadataName;\n    return name === 'ContentChild' || name === 'ContentChildren';\n}\nfunction isViewQuery(value) {\n    var name = value.ngMetadataName;\n    return name === 'ViewChild' || name === 'ViewChildren';\n}\nfunction splitByComma(value) {\n    return value.split(',').map(function (piece) { return piece.trim(); });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction compilePipe(type, meta) {\n    var ngPipeDef = null;\n    Object.defineProperty(type, NG_PIPE_DEF, {\n        get: function () {\n            if (ngPipeDef === null) {\n                ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                    type: type,\n                    name: type.name,\n                    deps: reflectDependencies(type),\n                    pipeName: meta.name,\n                    pure: meta.pure !== undefined ? meta.pure : true\n                });\n            }\n            return ngPipeDef;\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode,\n    });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive metadata.\n *\n * @publicApi\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n}, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n/**\n * Component decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n/**\n * @Annotation\n * @publicApi\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\nvar initializeBaseDef = function (target) {\n    var constructor = target.constructor;\n    var inheritedBaseDef = constructor.ngBaseDef;\n    var baseDef = constructor.ngBaseDef = {\n        inputs: {},\n        outputs: {},\n        declaredInputs: {},\n    };\n    if (inheritedBaseDef) {\n        fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n        fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n        fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n    }\n};\n/**\n * Does the work of creating the `ngBaseDef` property for the `Input` and `Output` decorators.\n * @param key \"inputs\" or \"outputs\"\n */\nvar updateBaseDefFromIOProp = function (getProp) {\n    return function (target, name) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var constructor = target.constructor;\n        if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n            initializeBaseDef(target);\n        }\n        var baseDef = constructor.ngBaseDef;\n        var defProp = getProp(baseDef);\n        defProp[name] = args[0];\n    };\n};\n/**\n * @Annotation\n * @publicApi\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n/**\n * @Annotation\n * @publicApi\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n/**\n * @Annotation\n * @publicApi\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Binds a CSS event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * @usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * @Annotation\n * @publicApi\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\nvar SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\nvar SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\nvar SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\nvar SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\nvar SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\nvar SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\nvar SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\nvar SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\nvar SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Éµ0$2 = getClosureSafeProperty;\nvar USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$2 });\nvar EMPTY_ARRAY$3 = [];\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        var reflectionCapabilities = new ReflectionCapabilities();\n        var deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n    }\n    if (USE_VALUE$1 in provider) {\n        var valueProvider_1 = provider;\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if (provider.useExisting) {\n        var existingProvider_1 = provider;\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if (provider.useFactory) {\n        var factoryProvider_1 = provider;\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n    }\n    else if (provider.useClass) {\n        var classProvider_1 = provider;\n        var deps_2 = provider.deps;\n        if (!deps_2) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            var _a;\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n        };\n    }\n    else {\n        var deps_3 = provider.deps;\n        if (!deps_3) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n * @publicApi\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that allows any property on any element.\n *\n * @publicApi\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * @Annotation\n * @publicApi\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n/**\n * Decorator that marks the following class as an NgModule, and supplies\n * configuration metadata for it.\n *\n * * The `declarations` and `entryComponents` options configure the compiler\n * with information about what belongs to the NgModule.\n * * The `providers` options configures the NgModule's injector to provide\n * dependencies the NgModule members.\n * * The `imports` and `exports` options bring in members from other modules, and make\n * this module's members available to others.\n */\nfunction (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    var imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = __spread(imports, [metadata.exports]);\n    }\n    moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\nvar SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\nvar SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\nvar SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n */\nfunction compileInjectable(type, srcMeta) {\n    var def = null;\n    // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n    if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n        return;\n    Object.defineProperty(type, NG_INJECTABLE_DEF, {\n        get: function () {\n            if (def === null) {\n                // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                var meta = srcMeta || { providedIn: null };\n                var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                    isUseValueProvider(meta) || isUseExistingProvider(meta);\n                var compilerMeta = {\n                    name: type.name,\n                    type: type,\n                    typeArgumentCount: 0,\n                    providedIn: meta.providedIn,\n                    ctorDeps: reflectDependencies(type),\n                    userDeps: undefined\n                };\n                if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                    compilerMeta.userDeps = convertDependencies(meta.deps);\n                }\n                if (!hasAProvider) {\n                    // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                    // The deps will have been reflected above, causing the factory to create the class by\n                    // calling\n                    // its constructor with injected deps.\n                    compilerMeta.useClass = type;\n                }\n                else if (isUseClassProvider(meta)) {\n                    // The user explicitly specified useClass, and may or may not have provided deps.\n                    compilerMeta.useClass = meta.useClass;\n                }\n                else if (isUseValueProvider(meta)) {\n                    // The user explicitly specified useValue.\n                    compilerMeta.useValue = meta.useValue;\n                }\n                else if (isUseFactoryProvider(meta)) {\n                    // The user explicitly specified useFactory.\n                    compilerMeta.useFactory = meta.useFactory;\n                }\n                else if (isUseExistingProvider(meta)) {\n                    // The user explicitly specified useExisting.\n                    compilerMeta.useExisting = meta.useExisting;\n                }\n                else {\n                    // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                    throw new Error(\"Unreachable state.\");\n                }\n                def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n            }\n            return def;\n        },\n    });\n}\nvar Éµ0$3 = getClosureSafeProperty;\nvar USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: Éµ0$3 });\nfunction isUseClassProvider(meta) {\n    return meta.useClass !== undefined;\n}\nfunction isUseValueProvider(meta) {\n    return USE_VALUE$2 in meta;\n}\nfunction isUseFactoryProvider(meta) {\n    return meta.useFactory !== undefined;\n}\nfunction isUseExistingProvider(meta) {\n    return meta.useExisting !== undefined;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injectable decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nvar Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction render2CompileInjectable(injectableType, options) {\n    if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n        injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\nvar SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\nvar SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\nvar SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\nfunction getDebugContext(error) {\n    return error[ERROR_DEBUG_CONTEXT];\n}\nfunction getOriginalError(error) {\n    return error[ERROR_ORIGINAL_ERROR];\n}\nfunction getErrorLogger(error) {\n    return error[ERROR_LOGGER] || defaultErrorLogger;\n}\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, __spread(values));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * @publicApi\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * @internal\n         */\n        this._console = console;\n    }\n    ErrorHandler.prototype.handleError = function (error) {\n        var originalError = this._findOriginalError(error);\n        var context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    ErrorHandler.prototype._findContext = function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    ErrorHandler.prototype._findOriginalError = function (error) {\n        var e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\nfunction wrappedError(message, originalError) {\n    var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var error = Error(msg);\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findFirstClosedCycle(keys) {\n    var res = [];\n    for (var i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var reversed = findFirstClosedCycle(keys.slice().reverse());\n        var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var keys = [key];\n    var errMsg = constructResolvingMessage(keys);\n    var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var signature = [];\n    for (var i = 0, ii = params.length; i < ii; i++) {\n        var parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n *\n * @deprecated No replacement\n * @publicApi\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return this._allKeys.get(token);\n        }\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * @publicApi\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(\n    /**\n     * Factory function which can return an instance of an object represented by a key.\n     */\n    factory, \n    /**\n     * Arguments (dependencies) to the `factory` function.\n     */\n    dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider) {\n    var factoryFn;\n    var resolvedDeps;\n    if (provider.useClass) {\n        var useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n */\nfunction resolveReflectiveProviders(providers) {\n    var normalized = _normalizeProviders(providers, []);\n    var resolved = normalized.map(resolveReflectiveProvider);\n    var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        var existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && b.provide !== undefined) {\n            res.push(b);\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\nfunction _dependenciesFor(typeOrFunc) {\n    var params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var token = null;\n    var optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var visibility = null;\n    for (var i = 0; i < metadata.length; ++i) {\n        var paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * @usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @publicApi\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     */\n    ReflectiveInjector.resolve = function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     */\n    ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /** @internal */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var inj = new ReflectiveInjector_(providers);\n        inj.parent = this;\n        return inj;\n    };\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._new = function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var res = new Array(provider.resolvedFactories.length);\n            for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var factory = ResolvedReflectiveFactory$$1.factory;\n        var deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var obj;\n        try {\n            obj = factory.apply(void 0, __spread(deps));\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n        var obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n        var inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var inj_ = inj;\n            var obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: function () {\n            var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nfunction _mapProviders(injector, fn) {\n    var res = new Array(injector._providers.length);\n    for (var i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n */\nfunction isObservable(obj) {\n    // TODO: use isObservable once we update pass rxjs 6.1\n    // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n *\n * @publicApi\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @publicApi\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    ApplicationInitStatus.prototype.runInitializers = function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var asyncInitPromises = [];\n        var complete = function () {\n            _this.done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var i = 0; i < this.appInits.length; i++) {\n                var initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus = __decorate([\n        Injectable(),\n        __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n        __metadata(\"design:paramtypes\", [Array])\n    ], ApplicationInitStatus);\n    return ApplicationInitStatus;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @publicApi\n */\nvar APP_ID = new InjectionToken('AppId');\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @publicApi\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * @publicApi\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * @publicApi\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @publicApi\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * @publicApi\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    Console.prototype.warn = function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console = __decorate([\n        Injectable()\n    ], Console);\n    return Console;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @publicApi\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\nvar Compiler_compileModuleSync__PRE_R3__ = _throwError;\nvar Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n    return new NgModuleFactory$1(moduleType);\n};\nvar Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\nvar Compiler_compileModuleAsync__PRE_R3__ = _throwError;\nvar Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n    return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n};\nvar Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\nvar Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\nvar Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n    return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n};\nvar Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\nvar Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\nvar Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n    return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n};\nvar Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n * @publicApi\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        this.compileModuleSync = Compiler_compileModuleSync;\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        this.compileModuleAsync = Compiler_compileModuleAsync;\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n    }\n    /**\n     * Clears all caches.\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    Compiler.prototype.clearCacheFor = function (type) { };\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     */\n    Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n    Compiler = __decorate([\n        Injectable()\n    ], Compiler);\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @publicApi\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * @publicApi\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar trace;\nvar events;\nfunction detectWTF() {\n    var wtf = _global /** TODO #9100 */['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @publicApi\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @publicApi\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @publicApi\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @publicApi\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var self = this;\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (Zone['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n        return this._inner.run(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n        var zone = this._inner;\n        var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n        try {\n            return zone.runTask(task, applyThis, applyArgs);\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n        return this._inner.runGuarded(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    NgZone.prototype.runOutsideAngular = function (fn) {\n        return this._outer.run(fn);\n    };\n    return NgZone;\n}());\nfunction noop$1() { }\nvar EMPTY_PAYLOAD = {};\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: { 'isAngularZone': true },\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    NoopNgZone.prototype.run = function (fn) { return fn(); };\n    NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n    NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n    NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @publicApi\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * @internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this.taskTrackingZone = null;\n        this._watchAngularEvents();\n        _ngZone.run(function () {\n            _this.taskTrackingZone =\n                typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n        });\n    }\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    var cb = _this._callbacks.pop();\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Still not stable, send updates.\n            var pending_1 = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter(function (cb) {\n                if (cb.updateCb && cb.updateCb(pending_1)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    };\n    Testability.prototype.getPendingTasks = function () {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        // Copy the tasks data so that we don't leak tasks.\n        return this.taskTrackingZone.macroTasks.map(function (t) {\n            return {\n                source: t.source,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: t.creationLocation,\n                data: t.data\n            };\n        });\n    };\n    Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n        var _this = this;\n        var timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(function () {\n                _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                cb(_this._didWork, _this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n    };\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(doneCb, timeout, updateCb);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [NgZone])\n    ], Testability);\n    return Testability;\n}());\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @publicApi\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /** @internal */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], TestabilityRegistry);\n    return TestabilityRegistry;\n}());\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @publicApi\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _platform;\nvar compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\nfunction compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n    var compilerFactory = injector.get(CompilerFactory);\n    var compiler = compilerFactory.createCompiler([options]);\n    return compiler.compileModuleAsync(moduleType);\n}\nfunction compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n    ngDevMode && assertNgModuleType(moduleType);\n    return Promise.resolve(new NgModuleFactory$1(moduleType));\n}\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @publicApi\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @publicApi\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * @publicApi\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var desc = \"Platform: \" + name;\n    var marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @publicApi\n */\nfunction assertPlatform(requiredToken) {\n    var platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * @publicApi\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * @publicApi\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n *\n * @publicApi\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var ngZoneOption = options ? options.ngZone : undefined;\n        var ngZone = getNgZone(ngZoneOption);\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var moduleRef = moduleFactory.create(ngZoneInjector);\n            var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n            ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * @usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     */\n    PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var options = optionsReducer({}, compilerOptions);\n        return compileNgModuleFactory(this.injector, options, moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n        var appRef = moduleRef.injector.get(ApplicationRef);\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    PlatformRef.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [Injector])\n    ], PlatformRef);\n    return PlatformRef;\n}());\nfunction getNgZone(ngZoneOption) {\n    var ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, objs);\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * @usageNotes\n *\n * {@a is-stable-examples}\n * ### isStable examples and caveats\n *\n * Note two important points about `isStable`, demonstrated in the examples below:\n * - the application will never be stable if you start any kind\n * of recurrent asynchronous task when the application starts\n * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n * or using RxJS operators like `interval`);\n * - the `isStable` Observable runs outside of the Angular zone.\n *\n * Let's imagine that you start a recurrent task\n * (here incrementing a counter, using RxJS `interval`),\n * and at the same time subscribe to `isStable`.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *      filter(stable => stable)\n *   ).subscribe(() => console.log('App is stable now');\n *   interval(1000).subscribe(counter => console.log(counter));\n * }\n * ```\n * In this example, `isStable` will never emit `true`,\n * and the trace \"App is stable now\" will never get logged.\n *\n * If you want to execute something when the app is stable,\n * you have to wait for the application to be stable\n * before starting your polling process.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     tap(stable => console.log('App is stable now')),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => console.log(counter));\n * }\n * ```\n * In this example, the trace \"App is stable now\" will be logged\n * and then the counter starts incrementing every second.\n *\n * Note also that this Observable runs outside of the Angular zone,\n * which means that the code in the subscription\n * to this Observable will not trigger the change detection.\n *\n * Let's imagine that instead of logging the counter value,\n * you update a field of your component\n * and display it in its template.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => this.value = counter);\n * }\n * ```\n * As the `isStable` Observable runs outside the zone,\n * the `value` field will be updated properly,\n * but the template will not be refreshed!\n *\n * You'll have to manually trigger the change detection to update the template.\n *\n * ```\n * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => {\n *     this.value = counter;\n *     cd.detectChanges();\n *   });\n * }\n * ```\n *\n * Or make the subscription callback run inside the zone.\n *\n * ```\n * constructor(appRef: ApplicationRef, zone: NgZone) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => zone.run(() => this.value = counter));\n * }\n * ```\n *\n * @publicApi\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var isCurrentlyStable = new Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var isStable = new Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        this.isStable =\n            merge(isCurrentlyStable, isStable.pipe(share()));\n    }\n    ApplicationRef_1 = ApplicationRef;\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * @usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    ApplicationRef.prototype.tick = function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var scope = ApplicationRef_1._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    ApplicationRef.prototype.attachView = function (viewRef) {\n        var view = viewRef;\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    ApplicationRef.prototype.detachView = function (viewRef) {\n        var view = viewRef;\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    ApplicationRef.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    ApplicationRef.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    ApplicationRef.prototype.ngOnDestroy = function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    var ApplicationRef_1;\n    /** @internal */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef = ApplicationRef_1 = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n            ErrorHandler,\n            ComponentFactoryResolver,\n            ApplicationInitStatus])\n    ], ApplicationRef);\n    return ApplicationRef;\n}());\nfunction remove(list, el) {\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n * @publicApi\n */\nvar QueryList$1 = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    QueryList.prototype.filter = function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    QueryList.prototype.find = function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    QueryList.prototype.reduce = function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    QueryList.prototype.some = function (fn) {\n        return this._results.some(fn);\n    };\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    QueryList.prototype.reset = function (res) {\n        this._results = flatten$2(res);\n        this.dirty = false;\n        this.length = this._results.length;\n        this.last = this._results[this.length - 1];\n        this.first = this._results[0];\n    };\n    QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    /** internal */\n    QueryList.prototype.setDirty = function () { this.dirty = true; };\n    /** internal */\n    QueryList.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList;\n}());\nfunction flatten$2(list) {\n    return list.reduce(function (flat, item) {\n        var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n        return flat.concat(flatItem);\n    }, []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @publicApi\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @publicApi\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader = __decorate([\n        Injectable(),\n        __param(1, Optional()),\n        __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n    ], SystemJsNgModuleLoader);\n    return SystemJsNgModuleLoader;\n}());\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more views can be attached to a component.\n *\n * Can contain *host views* (created by instantiating a\n * component with the `createComponent()` method), and *embedded views*\n * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n *\n * A view container instance can contain other view containers,\n * creating a [view hierarchy](guide/glossary#view-tree).\n *\n * @see `ComponentRef`\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    /** @internal */\n    ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n    return ViewContainerRef;\n}());\nvar SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\nvar SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\nvar SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for Angular Views, provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n *\n * @usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n *\n * @publicApi\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    /** @internal */\n    ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n    return ChangeDetectorRef;\n}());\nvar SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\nvar SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n};\nvar SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Angular [view](guide/glossary#view),\n * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n * Also serves as the base class\n * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n *\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nvar ViewRef$1 = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular [view](guide/glossary#view) in a view container.\n * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n * other than the hosting component whose template defines it, or it can be defined\n * independently by a `TemplateRef`.\n *\n * Properties of elements in a view can change, but the structure (number and order) of elements in\n * a view cannot. Change the structure of elements by inserting, moving, or\n * removing nested views in a view container.\n *\n * @see `ViewContainerRef`\n *\n * @usageNotes\n *\n * The following template breaks down into two separate `TemplateRef` instances,\n * an outer one and an inner one.\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * This is the outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * This is the inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * The outer and inner `TemplateRef` instances are assembled into views as follows:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @publicApi\n */\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef$1));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\nvar DebugNode__PRE_R3__ = /** @class */ (function () {\n    function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n        this.listeners = [];\n        this.parent = null;\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement__PRE_R3__) {\n            parent.addChild(this);\n        }\n    }\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode__PRE_R3__;\n}());\nvar DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n    __extends(DebugElement__PRE_R3__, _super);\n    function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    DebugElement__PRE_R3__.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n        var childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _this = this;\n        var _a;\n        var siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                child.parent = _this;\n            });\n        }\n    };\n    DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n        var refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    DebugElement__PRE_R3__.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n        get: function () {\n            return this\n                .childNodes //\n                .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement__PRE_R3__;\n}(DebugNode__PRE_R3__));\n/**\n * @publicApi\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement__PRE_R3__) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement__PRE_R3__) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement__PRE_R3__) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\nvar DebugNode__POST_R3__ = /** @class */ (function () {\n    function DebugNode__POST_R3__(nativeNode) {\n        this.nativeNode = nativeNode;\n    }\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n        get: function () {\n            var parent = this.nativeNode.parentNode;\n            return parent ? new DebugElement__POST_R3__(parent) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n        get: function () { return getInjector(this.nativeNode); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n        get: function () {\n            var nativeElement = this.nativeNode;\n            return nativeElement && getComponent(nativeElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n        get: function () { return getContext(this.nativeNode); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n        get: function () {\n            return getListeners(this.nativeNode).filter(isBrowserEvents);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n        get: function () { return getLocalRefs(this.nativeNode); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n        get: function () { return getInjectionTokens(this.nativeNode); },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode__POST_R3__;\n}());\nvar DebugElement__POST_R3__ = /** @class */ (function (_super) {\n    __extends(DebugElement__POST_R3__, _super);\n    function DebugElement__POST_R3__(nativeNode) {\n        var _this = this;\n        ngDevMode && assertDomNode(nativeNode);\n        _this = _super.call(this, nativeNode) || this;\n        return _this;\n    }\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n        get: function () {\n            return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n        get: function () { return this.nativeElement.nodeName; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n        get: function () {\n            var context = loadLContext(this.nativeNode);\n            var lView = context.lView;\n            var tView = lView[TVIEW];\n            var tNode = tView.data[context.nodeIndex];\n            var properties = {};\n            // TODO: https://angular-team.atlassian.net/browse/FW-681\n            // Missing implementation here...\n            return properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n        get: function () {\n            var attributes = {};\n            var element = this.nativeElement;\n            if (element) {\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    attributes[attr.name] = attr.value;\n                }\n            }\n            return attributes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n        get: function () {\n            var classes = {};\n            var element = this.nativeElement;\n            if (element) {\n                var lContext = loadLContextFromNode(element);\n                var lNode = lContext.lView[lContext.nodeIndex];\n                var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                if (stylingContext) {\n                    for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                        if (isClassBasedValue(lNode, i)) {\n                            var className = getProp(lNode, i);\n                            var value = getValue(lNode, i);\n                            if (typeof value == 'boolean') {\n                                // we want to ignore `null` since those don't overwrite the values.\n                                classes[className] = value;\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Fallback, just read DOM.\n                    var eClasses = element.classList;\n                    for (var i = 0; i < eClasses.length; i++) {\n                        classes[eClasses[i]] = true;\n                    }\n                }\n            }\n            return classes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n        get: function () {\n            var styles = {};\n            var element = this.nativeElement;\n            if (element) {\n                var lContext = loadLContextFromNode(element);\n                var lNode = lContext.lView[lContext.nodeIndex];\n                var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                if (stylingContext) {\n                    for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                        if (!isClassBasedValue(lNode, i)) {\n                            var styleName = getProp(lNode, i);\n                            var value = getValue(lNode, i);\n                            if (value !== null) {\n                                // we want to ignore `null` since those don't overwrite the values.\n                                styles[styleName] = value;\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Fallback, just read DOM.\n                    var eStyles = element.style;\n                    for (var i = 0; i < eStyles.length; i++) {\n                        var name_1 = eStyles.item(i);\n                        styles[name_1] = eStyles.getPropertyValue(name_1);\n                    }\n                }\n            }\n            return styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n        get: function () {\n            var childNodes = this.nativeNode.childNodes;\n            var children = [];\n            for (var i = 0; i < childNodes.length; i++) {\n                var element = childNodes[i];\n                children.push(getDebugNode__POST_R3__(element));\n            }\n            return children;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n        get: function () {\n            var nativeElement = this.nativeElement;\n            if (!nativeElement)\n                return [];\n            var childNodes = nativeElement.children;\n            var children = [];\n            for (var i = 0; i < childNodes.length; i++) {\n                var element = childNodes[i];\n                children.push(getDebugNode__POST_R3__(element));\n            }\n            return children;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement__POST_R3__.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryNodeChildrenR3(this, predicate, matches, true);\n        return matches;\n    };\n    DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryNodeChildrenR3(this, predicate, matches, false);\n        return matches;\n    };\n    DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name === eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement__POST_R3__;\n}(DebugNode__POST_R3__));\nfunction _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n    if (parentNode instanceof DebugElement__POST_R3__) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement__POST_R3__) {\n                if (elementsOnly ? node.nativeElement : true) {\n                    _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                }\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\nfunction getDebugNode__PRE_R3__(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\nfunction getDebugNode__POST_R3__(nativeNode) {\n    if (nativeNode instanceof Node) {\n        return nativeNode.nodeType == Node.ELEMENT_NODE ?\n            new DebugElement__POST_R3__(nativeNode) :\n            new DebugNode__POST_R3__(nativeNode);\n    }\n    return null;\n}\n/**\n * @publicApi\n */\nvar getDebugNode = getDebugNode__PRE_R3__;\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * @publicApi\n */\nvar DebugNode = DebugNode__PRE_R3__;\n/**\n * @publicApi\n */\nvar DebugElement = DebugElement__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * @publicApi\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        // Keeps track of the used records at any point in time (during & across `_check()` calls)\n        this._linkedRecords = null;\n        // Keeps track of the removed records at any point in time during `_check()` calls.\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        // Keeps track of records where custom track by is the same, but item identity has changed\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var nextIt = this._itHead;\n        var nextRemove = this._removalsHead;\n        var addRemoveOffset = 0;\n        var moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var record = !nextRemove ||\n                nextIt &&\n                    nextIt.currentIndex <\n                        getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                nextIt :\n                nextRemove;\n            var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = nextIt._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var localCurrentIndex = currentIndex - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var i = 0; i < localMovePreviousIndex; i++) {\n                            var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var record = this._itHead;\n        var mayBeDirty = false;\n        var index;\n        var item;\n        var itemTrackBy;\n        if (Array.isArray(collection)) {\n            this.length = collection.length;\n            for (var index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this.length = index;\n        }\n        this._truncate(record);\n        this.collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            var nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n        var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, record._prev, index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    DefaultIterableDiffer.prototype._truncate = function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var prev = record._prevRemoved;\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n        // TODO(vicb):\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._remove = function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._unlink = function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var prev = record._prev;\n        var next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prevDup = null;\n        /** @internal */\n        this._nextDup = null;\n        /** @internal */\n        this._prevRemoved = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextMoved = null;\n        /** @internal */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /** @internal */\n        this._head = null;\n        /** @internal */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    _DuplicateItemRecordList.prototype.add = function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n        var record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    _DuplicateItemRecordList.prototype.remove = function (record) {\n        // TODO(vicb):\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var prev = record._prevDup;\n        var next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    _DuplicateMap.prototype.put = function (record) {\n        var key = record.trackById;\n        var duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n        var key = trackById;\n        var recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    _DuplicateMap.prototype.remove = function (record) {\n        var key = record.trackById;\n        var recordList = this.map.get(key);\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        // _appendAfter is used in the check loop\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n        if (before) {\n            var prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var record_1 = this._records.get(key);\n            this._maybeAddToChanges(record_1, value);\n            var prev = record_1._prev;\n            var next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    // Add the record or a given key to the list of changes only when the value has actually changed\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            this._additionsTail._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            this._changesTail._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n * @publicApi\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    IterableDiffers.extend = function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    IterableDiffers.prototype.find = function (iterable) {\n        var factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    /** @nocollapse */\n    IterableDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n    });\n    return IterableDiffers;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n * @publicApi\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    KeyValueDiffers.extend = function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    KeyValueDiffers.prototype.find = function (kv) {\n        var factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    /** @nocollapse */\n    KeyValueDiffers.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n    });\n    return KeyValueDiffers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * @publicApi\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @publicApi\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @publicApi\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @publicApi\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the [i18n guide](guide/i18n#missing-translation) for more information.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @publicApi\n */\nvar MissingTranslationStrategy;\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(MissingTranslationStrategy || (MissingTranslationStrategy = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * A built-in [dependency injection token](guide/glossary#di-token)\n * that is used to configure the root injector for bootstrapping.\n */\nvar APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n    },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n];\n/**\n * Configures the root injector for an app with\n * providers of `@angular/core` dependencies that `ApplicationRef` needs\n * to bootstrap components.\n *\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * @publicApi\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule = __decorate([\n        NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n        __metadata(\"design:paramtypes\", [ApplicationRef])\n    ], ApplicationModule);\n    return ApplicationModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SWITCH_IVY_ENABLED__POST_R3__ = true;\nvar SWITCH_IVY_ENABLED__PRE_R3__ = false;\nvar ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var state = view.state;\n    var initState = state & 1792 /* InitState_Mask */;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asTextData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asElementData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asProviderData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asPureExpressionData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asQueryList(view, index) {\n    return view.nodes[index];\n}\nvar DebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: undefined,\n    createRootView: undefined,\n    createEmbeddedView: undefined,\n    createComponentView: undefined,\n    createNgModuleRef: undefined,\n    overrideProvider: undefined,\n    overrideComponentView: undefined,\n    clearOverrides: undefined,\n    checkAndUpdateView: undefined,\n    checkNoChangesView: undefined,\n    destroyView: undefined,\n    resolveDep: undefined,\n    createDebugContext: undefined,\n    handleEvent: undefined,\n    updateDirectives: undefined,\n    updateRenderer: undefined,\n    dirtyParentQueries: undefined,\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\nfunction viewDebugError(msg, context) {\n    var err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\nfunction _addDebugContext(err, context) {\n    err[ERROR_DEBUG_CONTEXT] = context;\n    err[ERROR_LOGGER] = context.logError.bind(context);\n}\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\nfunction tokenKey(token) {\n    var key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\nfunction unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount$1 = 0;\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount$1++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\nfunction checkBinding(view, def, bindingIdx, value) {\n    var oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction markParentViewsForCheck(view) {\n    var currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var nodeDef = view.def.nodes[nodeIndex];\n        var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var parentView = view.parent;\n        return asElementData(parentView, view.parentNodeDef.nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nfunction viewParentEl(view) {\n    var parentView = view.parent;\n    if (parentView) {\n        return view.parentNodeDef.parent;\n    }\n    else {\n        return null;\n    }\n}\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\nfunction isComponentView(view) {\n    return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var matchedQueries = {};\n    var matchedQueryIds = 0;\n    var references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var _a;\n        var token;\n        var flags;\n        if (Array.isArray(value)) {\n            _a = __read(value, 2), flags = _a[0], token = _a[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\nfunction getParentRenderElement(view, renderHost, def) {\n    var renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (renderParent.element.componentRendererType &&\n                renderParent.element.componentRendererType.encapsulation ===\n                    ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, def.renderParent.nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\nfunction resolveDefinition(factory) {\n    var value = DEFINITION_CACHE.get(factory);\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\nfunction rootRenderNodes(view) {\n    var renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var hostView = compView.parent;\n    var hostElDef = viewParentEl(compView);\n    var startIndex = hostElDef.nodeIndex + 1;\n    var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = hostView.def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!hostView.parent) {\n        // a root view\n        var projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            target.push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var match = name.match(NS_PREFIX_RE);\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\nfunction calcBindingFlags(bindings) {\n    var flags = 0;\n    for (var i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\nfunction interpolate(valueCount, constAndInterp) {\n    var result = '';\n    for (var i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY$4 = [];\nvar EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    var _a;\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n    var ns = null;\n    var name = null;\n    if (namespaceAndName) {\n        _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n    }\n    bindings = bindings || [];\n    var bindingDefs = new Array(bindings.length);\n    for (var i = 0; i < bindings.length; i++) {\n        var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n        var securityContext = undefined;\n        var suffix = undefined;\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = suffixOrSecurityContext;\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = suffixOrSecurityContext;\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var outputDefs = new Array(outputs.length);\n    for (var i = 0; i < outputs.length; i++) {\n        var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: target, eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var attrs = fixedAttrs.map(function (_a) {\n        var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n        var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n        return [ns, name, value];\n    });\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createElement(view, renderHost, def) {\n    var elDef = def.element;\n    var rootSelectorOrNode = view.root.selectorOrNode;\n    var renderer = view.renderer;\n    var el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n        var preserveContent = (!!elDef.componentRendererType &&\n            elDef.componentRendererType.encapsulation === ViewEncapsulation.ShadowDom);\n        el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n    }\n    if (elDef.attrs) {\n        for (var i = 0; i < elDef.attrs.length; i++) {\n            var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var i = 0; i < def.outputs.length; i++) {\n        var output = def.outputs[i];\n        var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var listenTarget = output.target;\n        var listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n        view.disposables[def.outputIndex + i] = disposable;\n    }\n}\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = def.bindings.length;\n    var changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var binding = def.bindings[bindingIdx];\n    var elData = asElementData(view, def.nodeIndex);\n    var renderNode$$1 = elData.renderElement;\n    var name = binding.name;\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, value);\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar INJECTORRefTokenKey = tokenKey(INJECTOR$1);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\nfunction moduleDef(providers) {\n    var providersByKey = {};\n    var modules = [];\n    var isRoot = false;\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        if (provider.token === APP_ROOT && provider.value === true) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\nfunction initNgModule(data) {\n    var def = data._def;\n    var providers = data._providers = new Array(def.providers.length);\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance(data, provDef);\n            }\n        }\n    }\n}\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    var former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        var tokenKey_1 = depDef.tokenKey;\n        switch (tokenKey_1) {\n            case InjectorRefTokenKey:\n            case INJECTORRefTokenKey:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        var providerDef = data._def.providersByKey[tokenKey_1];\n        var injectableDef = void 0;\n        if (providerDef) {\n            var providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n            var index = data._providers.length;\n            data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index: index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        else if (depDef.flags & 4 /* Self */) {\n            return notFoundValue;\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\nfunction _createProviderInstance(ngModule, providerDef) {\n    var injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\nfunction _createClass(ngModule, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction _callFactory(ngModule, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var def = ngModule._def;\n    var destroyed = new Set();\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                var onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, viewIndex, view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\nfunction attachProjectedView(vcElementData, view) {\n    var dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n}\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    var view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n        elementData.renderElement;\n    var parentNode = view.renderer.parentNode(prevRenderNode);\n    var nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return componentFactory.viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: function () {\n            var inputsArr = [];\n            var inputs = this._inputs;\n            for (var propName in inputs) {\n                var templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: function () {\n            var outputsArr = [];\n            for (var propName in this._outputs) {\n                var templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var viewDef = resolveDefinition(this.viewDefFactory);\n        var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n        var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: function () { return this._component.constructor; },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * @internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        /** @deprecated No replacement */\n        get: function () {\n            var view = this._view;\n            var elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = view.parent;\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.clear = function () {\n        var len = this._embeddedViews.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var view = detachEmbeddedView(this._data, i);\n            Services.destroyView(view);\n        }\n    };\n    ViewContainerRef_.prototype.get = function (index) {\n        var view = this._embeddedViews[index];\n        if (view) {\n            var ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var viewRef_ = viewRef;\n        var viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(viewRef._view);\n    };\n    ViewContainerRef_.prototype.remove = function (index) {\n        var viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    ViewContainerRef_.prototype.detach = function (index) {\n        var view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n    ViewRef_.prototype.detectChanges = function () {\n        var fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(callback);\n    };\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nfunction nodeValue(view, index) {\n    var def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var elData = asElementData(view, def.nodeIndex);\n        return def.element.template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        var el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var parentElement = this.delegate.parentNode(node);\n        var nextSibling = this.delegate.nextSibling(node);\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            var node = viewRootNodes[i];\n            var parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var i = 0; i < viewAllNodes.length; i++) {\n            this.delegate.destroyNode(viewAllNodes[i]);\n        }\n    };\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, callback);\n    };\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, callback);\n    };\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        renderElement[methodName].apply(renderElement, args);\n    };\n    RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = InjectFlags.Default; }\n        var flags = 0 /* None */;\n        if (injectFlags & InjectFlags.SkipSelf) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & InjectFlags.Self) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var bindings = [];\n    if (props) {\n        for (var prop in props) {\n            var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var outputDefs = [];\n    if (outputs) {\n        for (var propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance$1(view, def);\n}\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n}\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n    if (def.outputs.length) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var outputObservable = instance[output.propName];\n            if (isObservable(outputObservable)) {\n                var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n            else {\n                throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n            }\n        }\n    }\n    return instance;\n}\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    var bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = undefined;\n    for (var i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction _createProviderInstance$1(view, def) {\n    // private services can see other private services\n    var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n        case 256 /* TypeValueProvider */:\n            return providerDef.value;\n    }\n}\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n    }\n}\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, __spread(depValues));\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && elDef.element.componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = elDef.parent;\n    }\n    var searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (elDef.element.template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey$1:\n                case INJECTORRefTokenKey$1:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                        elDef.element.publicProviders)[tokenKey$$1];\n                    if (providerDef_1) {\n                        var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = viewParentEl(searchView);\n        searchView = searchView.parent;\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var compView = asElementData(view, def.parent.nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var binding = def.bindings[bindingIdx];\n    var propName = binding.name;\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var binding_1 = def.bindings[bindingIdx];\n        changes[binding_1.nonMinifiedName] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var nodes = view.def.nodes;\n    var initIndex = 0;\n    for (var i = 0; i < nodes.length; i++) {\n        var nodeDef = nodes[i];\n        var parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction queryDef(flags, id, bindings) {\n    var bindingDefs = [];\n    for (var propName in bindings) {\n        var bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\nfunction createQuery$1() {\n    return new QueryList$1();\n}\nfunction dirtyParentQueries(view) {\n    var queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var tplDef = view.parentNodeDef;\n        view = view.parent;\n        // content queries\n        var end = tplDef.nodeIndex + tplDef.childCount;\n        for (var i = 0; i <= end; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var i = 0; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var directiveInstance;\n    var newValues = undefined;\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var elementDef = nodeDef.parent.parent;\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n        directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var bindings = nodeDef.query.bindings;\n    var notify = false;\n    for (var i = 0; i < bindings.length; i++) {\n        var binding = bindings[i];\n        var boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        var valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n            (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = elementData.viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    var embeddedView = embeddedViews[k];\n                    var dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var k = 0; k < projectedViews.length; k++) {\n                    var projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\nfunction appendNgContent(view, renderHost, def) {\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var ngContentIndex = def.ngContent.index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var keys = Object.keys(propToIndex);\n    var nbKeys = keys.length;\n    var propertyNames = new Array(nbKeys);\n    for (var i = 0; i < nbKeys; i++) {\n        var key = keys[i];\n        var index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var bindings = new Array(propertyNames.length);\n    for (var i = 0; i < propertyNames.length; i++) {\n        var prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindings = def.bindings;\n    var changed = false;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[bindings[0].name] = v0;\n                if (bindLen > 1)\n                    value[bindings[1].name] = v1;\n                if (bindLen > 2)\n                    value[bindings[2].name] = v2;\n                if (bindLen > 3)\n                    value[bindings[3].name] = v3;\n                if (bindLen > 4)\n                    value[bindings[4].name] = v4;\n                if (bindLen > 5)\n                    value[bindings[5].name] = v5;\n                if (bindLen > 6)\n                    value[bindings[6].name] = v6;\n                if (bindLen > 7)\n                    value[bindings[7].name] = v7;\n                if (bindLen > 8)\n                    value[bindings[8].name] = v8;\n                if (bindLen > 9)\n                    value[bindings[9].name] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var i = 0; i < values.length; i++) {\n                    value[bindings[i].name] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = values[0];\n                var params = values.slice(1);\n                value = pipe.transform.apply(pipe, __spread(params));\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var bindings = new Array(staticText.length - 1);\n    for (var i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\nfunction createText(view, renderHost, def) {\n    var renderNode$$1;\n    var renderer = view.renderer;\n    renderNode$$1 = renderer.createText(def.text.prefix);\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var changed = false;\n    var bindings = def.bindings;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var value = def.text.prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var value = '';\n        for (var i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = def.text.prefix + value;\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction _addInterpolationPart(value, binding) {\n    var valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var viewBindingCount = 0;\n    var viewDisposableCount = 0;\n    var viewNodeFlags = 0;\n    var viewRootNodeFlags = 0;\n    var viewMatchedQueries = 0;\n    var currentParent = null;\n    var currentRenderParent = null;\n    var currentElementHasPublicProviders = false;\n    var currentElementHasPrivateProviders = false;\n    var lastRenderRootNode = null;\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? currentParent.element.publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true;\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent.element.publicProviders =\n                    Object.create(currentParent.element.publicProviders);\n                currentParent.element.allProviders = currentParent.element.publicProviders;\n            }\n            var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.allProviders =\n                        Object.create(currentParent.element.publicProviders);\n                }\n                currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n            }\n            if (isComponent) {\n                currentParent.element.componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var handleEvent = function (view, nodeIndex, eventName, event) {\n        return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n    };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n}\nfunction validateNode(parent, node, nodeCount) {\n    var template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createRootView(root, def, context) {\n    var view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var rendererType = nodeDef.element.componentRendererType;\n    var compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n}\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var nodes = new Array(def.nodes.length);\n    var disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\nfunction createViewNodes(view) {\n    var renderHost;\n    if (isComponentView(view)) {\n        var hostDef = view.parentNodeDef;\n        renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n    }\n    var def = view.def;\n    var nodes = view.nodes;\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var el = createElement(view, renderHost, nodeDef);\n                var componentView = undefined;\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = {\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                };\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = createText(view, renderHost, nodeDef);\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var instance = createProviderInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var instance = createPipeInstance(view, nodeDef);\n                nodeData = { instance: instance };\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = createPureExpression(view, nodeDef);\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = createQuery$1();\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\nfunction markProjectedViewsForCheck(view) {\n    var def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\nfunction destroyViewNodes(view) {\n    var len = view.def.nodes.length;\n    for (var i = 0; i < len; i++) {\n        var def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            view.renderer.destroyNode(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            view.renderer.destroyNode(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\nvar ViewAction;\n(function (ViewAction) {\n    ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n    ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n    ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n    ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n    ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n    ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n})(ViewAction || (ViewAction = {}));\nfunction execComponentViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction execEmbeddedViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction callViewAction(view, action) {\n    var viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var nodeCount = view.def.nodes.length;\n    for (var i = 0; i < nodeCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var sanitizer = ngModule.injector.get(Sanitizer);\n    var errorHandler = ngModule.injector.get(ErrorHandler);\n    var renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar providerOverridesWithScope = new Map();\nvar viewDefOverrides = new Map();\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    var injectableDef;\n    if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n        typeof injectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(override.token, override);\n    }\n}\nfunction debugOverrideComponentView(comp, compFactory) {\n    var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n    viewDefOverrides.set(comp, compViewDef);\n}\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var elIndicesWithOverwrittenProviders = [];\n        var lastElementDef = null;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(nodeDef.provider.token)) {\n                elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var provider = nodeDef.provider;\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    function calcHasOverrides(def) {\n        var hasOverrides = false;\n        var hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(function (module) {\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (getInjectableDef(token).providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    function applyProviderOverrides(def) {\n        for (var i = 0; i < def.providers.length; i++) {\n            var provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            var moduleSet_1 = new Set(def.modules);\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                    var provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction;\n(function (DebugAction) {\n    DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n    DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n    DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n    DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n    DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n})(DebugAction || (DebugAction = {}));\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n    if (changed) {\n        var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var bindingValues = {};\n            for (var i = 0; i < nodeDef.bindings.length; i++) {\n                var binding = nodeDef.bindings[i];\n                var value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var elDef = nodeDef.parent;\n            var el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!elDef.element.name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var attr in bindingValues) {\n                    var value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n}\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var elDef = this.nodeDef;\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = elDef.parent;\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = viewParentEl(elView);\n                elView = elView.parent;\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: function () { return createInjector$1(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: function () {\n            var tokens = [];\n            if (this.elDef) {\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(childDef.provider.token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: function () {\n            var references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: function () {\n            var elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var logViewDef;\n        var logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var currRenderNodeIndex = -1;\n        var nodeLogger = function () {\n            var _a;\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, __spread([console], values));\n            }\n            else {\n                return NOOP;\n            }\n        };\n        logViewDef.factory(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, __spread(values));\n        }\n    };\n    return DebugContext_;\n}());\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var renderNodeIndex = -1;\n    for (var i = 0; i <= nodeIndex; i++) {\n        var nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = view.parent;\n    }\n    if (view.parent) {\n        return asElementData(view.parent, viewParentEl(view).nodeIndex);\n    }\n    return null;\n}\nfunction collectReferences(view, nodeDef, references) {\n    for (var refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\nfunction callWithDebugContext(action, fn, self, args) {\n    var oldAction = _currentAction;\n    var oldView = _currentView;\n    var oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, getCurrentDebugContext());\n    }\n}\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    DebugRendererFactory2.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    DebugRendererFactory2.prototype.end = function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    DebugRendererFactory2.prototype.whenRenderingDone = function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        /**\n         * Factory function used to create a `DebugContext` when a node is created.\n         *\n         * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n         *\n         * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n         * or a Render context.\n         */\n        this.debugContextFactory = getCurrentDebugContext;\n        this.data = this.delegate.data;\n    }\n    DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        removeDebugNodeFromIndex(getDebugNode(node));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var el = this.delegate.createElement(name, namespace);\n        var debugCtx = this.createDebugContext(el);\n        if (debugCtx) {\n            var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.createComment = function (value) {\n        var comment = this.delegate.createComment(value);\n        var debugCtx = this.createDebugContext(comment);\n        if (debugCtx) {\n            indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    DebugRenderer2.prototype.createText = function (value) {\n        var text = this.delegate.createText(value);\n        var debugCtx = this.createDebugContext(text);\n        if (debugCtx) {\n            indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n        }\n        return text;\n    };\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        var debugRefEl = getDebugNode(refChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n        var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nfunction cloneNgModuleDefinition(def) {\n    var providers = Array.from(def.providers);\n    var modules = Array.from(def.modules);\n    var providersByKey = {};\n    for (var key in def.providersByKey) {\n        providersByKey[key] = def.providersByKey[key];\n    }\n    return {\n        factory: def.factory,\n        isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n    };\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    NgModuleFactory_.prototype.create = function (parentInjector) {\n        initServicesIfNeeded();\n        // Clone the NgModuleDefinition so that any tree shakeable provider definition\n        // added to this instance of the NgModuleRef doesn't affect the cached copy.\n        // See https://github.com/angular/angular/issues/25018.\n        var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format on\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APPLICATION_MODULE_PROVIDERS as Éµangular_packages_core_core_t, _iterableDiffersFactory as Éµangular_packages_core_core_q, _keyValueDiffersFactory as Éµangular_packages_core_core_r, _localeFactory as Éµangular_packages_core_core_s, _appIdRandomProviderFactory as Éµangular_packages_core_core_h, DefaultIterableDifferFactory as Éµangular_packages_core_core_o, DefaultKeyValueDifferFactory as Éµangular_packages_core_core_p, DebugElement__PRE_R3__ as Éµangular_packages_core_core_n, DebugNode__PRE_R3__ as Éµangular_packages_core_core_m, NullInjector as Éµangular_packages_core_core_c, injectInjectorOnly as Éµangular_packages_core_core_d, ReflectiveInjector_ as Éµangular_packages_core_core_e, ReflectiveDependency as Éµangular_packages_core_core_f, resolveReflectiveProviders as Éµangular_packages_core_core_g, getModuleFactory__PRE_R3__ as Éµangular_packages_core_core_l, wtfEnabled as Éµangular_packages_core_core_u, createScope as Éµangular_packages_core_core_w, detectWTF as Éµangular_packages_core_core_v, endTimeRange as Éµangular_packages_core_core_z, leave as Éµangular_packages_core_core_x, startTimeRange as Éµangular_packages_core_core_y, injectAttributeImpl as Éµangular_packages_core_core_bc, NG_INJECTABLE_DEF as Éµangular_packages_core_core_bj, getLView as Éµangular_packages_core_core_bd, getPreviousOrParentTNode as Éµangular_packages_core_core_be, nextContextImpl as Éµangular_packages_core_core_bf, BoundPlayerFactory as Éµangular_packages_core_core_bi, loadInternal as Éµangular_packages_core_core_bm, createElementRef as Éµangular_packages_core_core_i, createTemplateRef as Éµangular_packages_core_core_j, createViewRef as Éµangular_packages_core_core_k, makeParamDecorator as Éµangular_packages_core_core_a, makePropDecorator as Éµangular_packages_core_core_b, getClosureSafeProperty as Éµangular_packages_core_core_bk, _def as Éµangular_packages_core_core_ba, DebugContext as Éµangular_packages_core_core_bb, createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, createPlatformFactory, NgProbeToken, enableProdMode, isDevMode, APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationInitStatus, DebugElement, DebugNode, asNativeElements, getDebugNode, Testability, TestabilityRegistry, setTestabilityGetter, TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy, ApplicationModule, wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, Type, EventEmitter, ErrorHandler, Sanitizer, SecurityContext, ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren, Component, Directive, HostBinding, HostListener, Input, Output, Pipe, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule, ViewEncapsulation, Version, VERSION, defineInjectable, defineInjector, forwardRef, resolveForwardRef, Injectable, INJECTOR$1 as INJECTOR, Injector, inject, inject as Éµinject, InjectFlags, ReflectiveInjector, createInjector, ResolvedReflectiveFactory, ReflectiveKey, InjectionToken, Inject, Optional, Self, SkipSelf, Host, NgZone, NoopNgZone as ÉµNoopNgZone, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer, COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories, ComponentFactory, ComponentFactory as ÉµComponentFactory, ComponentRef, ComponentFactoryResolver, ElementRef, NgModuleFactory, NgModuleRef, NgModuleFactoryLoader, getModuleFactory, QueryList$1 as QueryList, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TemplateRef, ViewContainerRef, EmbeddedViewRef, ViewRef$1 as ViewRef, ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue, platformCore, ALLOW_MULTIPLE_PLATFORMS as ÉµALLOW_MULTIPLE_PLATFORMS, APP_ID_RANDOM_PROVIDER as ÉµAPP_ID_RANDOM_PROVIDER, defaultIterableDiffers as ÉµdefaultIterableDiffers, defaultKeyValueDiffers as ÉµdefaultKeyValueDiffers, devModeEqual as ÉµdevModeEqual, isListLikeIterable as ÉµisListLikeIterable, ChangeDetectorStatus as ÉµChangeDetectorStatus, isDefaultChangeDetectionStrategy as ÉµisDefaultChangeDetectionStrategy, Console as ÉµConsole, getInjectableDef as ÉµgetInjectableDef, setCurrentInjector as ÉµsetCurrentInjector, APP_ROOT as ÉµAPP_ROOT, ivyEnabled as ÉµivyEnabled, CodegenComponentFactoryResolver as ÉµCodegenComponentFactoryResolver, resolveComponentResources as ÉµresolveComponentResources, ReflectionCapabilities as ÉµReflectionCapabilities, RenderDebugInfo as ÉµRenderDebugInfo, _sanitizeHtml as Éµ_sanitizeHtml, _sanitizeStyle as Éµ_sanitizeStyle, _sanitizeUrl as Éµ_sanitizeUrl, _global as Éµglobal, looseIdentical as ÉµlooseIdentical, stringify as Éµstringify, makeDecorator as ÉµmakeDecorator, isObservable as ÉµisObservable, isPromise as ÉµisPromise, clearOverrides as ÉµclearOverrides, initServicesIfNeeded as ÉµinitServicesIfNeeded, overrideComponentView as ÉµoverrideComponentView, overrideProvider as ÉµoverrideProvider, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 as ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, defineBase as ÉµdefineBase, defineComponent as ÉµdefineComponent, defineDirective as ÉµdefineDirective, definePipe as ÉµdefinePipe, defineNgModule as ÉµdefineNgModule, detectChanges as ÉµdetectChanges, renderComponent as ÉµrenderComponent, ComponentFactory$1 as ÉµRender3ComponentFactory, ComponentRef$1 as ÉµRender3ComponentRef, directiveInject as ÉµdirectiveInject, injectAttribute as ÉµinjectAttribute, getFactoryOf as ÉµgetFactoryOf, getInheritedFactory as ÉµgetInheritedFactory, templateRefExtractor as ÉµtemplateRefExtractor, ProvidersFeature as ÉµProvidersFeature, InheritDefinitionFeature as ÉµInheritDefinitionFeature, NgOnChangesFeature as ÉµNgOnChangesFeature, LifecycleHooksFeature as ÉµLifecycleHooksFeature, NgModuleRef$1 as ÉµRender3NgModuleRef, markDirty as ÉµmarkDirty, NgModuleFactory$1 as ÉµNgModuleFactory, NO_CHANGE as ÉµNO_CHANGE, container as Éµcontainer, nextContext as ÉµnextContext, elementStart as ÉµelementStart, namespaceHTML as ÉµnamespaceHTML, namespaceMathML as ÉµnamespaceMathML, namespaceSVG as ÉµnamespaceSVG, element as Éµelement, listener as Éµlistener, text as Éµtext, embeddedViewStart as ÉµembeddedViewStart, query as Éµquery, registerContentQuery as ÉµregisterContentQuery, projection as Éµprojection, bind as Éµbind, interpolation1 as Éµinterpolation1, interpolation2 as Éµinterpolation2, interpolation3 as Éµinterpolation3, interpolation4 as Éµinterpolation4, interpolation5 as Éµinterpolation5, interpolation6 as Éµinterpolation6, interpolation7 as Éµinterpolation7, interpolation8 as Éµinterpolation8, interpolationV as ÉµinterpolationV, pipeBind1 as ÉµpipeBind1, pipeBind2 as ÉµpipeBind2, pipeBind3 as ÉµpipeBind3, pipeBind4 as ÉµpipeBind4, pipeBindV as ÉµpipeBindV, pureFunction0 as ÉµpureFunction0, pureFunction1 as ÉµpureFunction1, pureFunction2 as ÉµpureFunction2, pureFunction3 as ÉµpureFunction3, pureFunction4 as ÉµpureFunction4, pureFunction5 as ÉµpureFunction5, pureFunction6 as ÉµpureFunction6, pureFunction7 as ÉµpureFunction7, pureFunction8 as ÉµpureFunction8, pureFunctionV as ÉµpureFunctionV, getCurrentView as ÉµgetCurrentView, getHostElement as ÉµgetHostElement, restoreView as ÉµrestoreView, containerRefreshStart as ÉµcontainerRefreshStart, containerRefreshEnd as ÉµcontainerRefreshEnd, queryRefresh as ÉµqueryRefresh, loadQueryList as ÉµloadQueryList, elementEnd as ÉµelementEnd, elementProperty as ÉµelementProperty, componentHostSyntheticProperty as ÉµcomponentHostSyntheticProperty, projectionDef as ÉµprojectionDef, reference as Éµreference, enableBindings as ÉµenableBindings, disableBindings as ÉµdisableBindings, allocHostVars as ÉµallocHostVars, elementAttribute as ÉµelementAttribute, elementContainerStart as ÉµelementContainerStart, elementContainerEnd as ÉµelementContainerEnd, elementStyling as ÉµelementStyling, elementHostAttrs as ÉµelementHostAttrs, elementStylingMap as ÉµelementStylingMap, elementStyleProp as ÉµelementStyleProp, elementStylingApply as ÉµelementStylingApply, elementClassProp as ÉµelementClassProp, textBinding as ÉµtextBinding, template as Éµtemplate, embeddedViewEnd as ÉµembeddedViewEnd, store as Éµstore, load as Éµload, pipe as Éµpipe, whenRendered as ÉµwhenRendered, i18n as Éµi18n, i18nAttributes as Éµi18nAttributes, i18nExp as Éµi18nExp, i18nStart as Éµi18nStart, i18nEnd as Éµi18nEnd, i18nApply as Éµi18nApply, i18nPostprocess as Éµi18nPostprocess, setClassMetadata as ÉµsetClassMetadata, compileComponent as ÉµcompileComponent, compileDirective as ÉµcompileDirective, compileNgModule as ÉµcompileNgModule, compileNgModuleDefs as ÉµcompileNgModuleDefs, patchComponentDefWithScope as ÉµpatchComponentDefWithScope, resetCompiledComponents as ÉµresetCompiledComponents, compilePipe as ÉµcompilePipe, sanitizeHtml as ÉµsanitizeHtml, sanitizeStyle as ÉµsanitizeStyle, defaultStyleSanitizer as ÉµdefaultStyleSanitizer, sanitizeScript as ÉµsanitizeScript, sanitizeUrl as ÉµsanitizeUrl, sanitizeResourceUrl as ÉµsanitizeResourceUrl, bypassSanitizationTrustHtml as ÉµbypassSanitizationTrustHtml, bypassSanitizationTrustStyle as ÉµbypassSanitizationTrustStyle, bypassSanitizationTrustScript as ÉµbypassSanitizationTrustScript, bypassSanitizationTrustUrl as ÉµbypassSanitizationTrustUrl, bypassSanitizationTrustResourceUrl as ÉµbypassSanitizationTrustResourceUrl, getLContext as ÉµgetLContext, bindPlayerFactory as ÉµbindPlayerFactory, addPlayer as ÉµaddPlayer, getPlayers as ÉµgetPlayers, compileNgModuleFactory__POST_R3__ as ÉµcompileNgModuleFactory__POST_R3__, SWITCH_COMPILE_COMPONENT__POST_R3__ as ÉµSWITCH_COMPILE_COMPONENT__POST_R3__, SWITCH_COMPILE_DIRECTIVE__POST_R3__ as ÉµSWITCH_COMPILE_DIRECTIVE__POST_R3__, SWITCH_COMPILE_PIPE__POST_R3__ as ÉµSWITCH_COMPILE_PIPE__POST_R3__, SWITCH_COMPILE_NGMODULE__POST_R3__ as ÉµSWITCH_COMPILE_NGMODULE__POST_R3__, getDebugNode__POST_R3__ as ÉµgetDebugNode__POST_R3__, SWITCH_COMPILE_INJECTABLE__POST_R3__ as ÉµSWITCH_COMPILE_INJECTABLE__POST_R3__, SWITCH_IVY_ENABLED__POST_R3__ as ÉµSWITCH_IVY_ENABLED__POST_R3__, SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ as ÉµSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__, Compiler_compileModuleSync__POST_R3__ as ÉµCompiler_compileModuleSync__POST_R3__, Compiler_compileModuleAsync__POST_R3__ as ÉµCompiler_compileModuleAsync__POST_R3__, Compiler_compileModuleAndAllComponentsSync__POST_R3__ as ÉµCompiler_compileModuleAndAllComponentsSync__POST_R3__, Compiler_compileModuleAndAllComponentsAsync__POST_R3__ as ÉµCompiler_compileModuleAndAllComponentsAsync__POST_R3__, SWITCH_ELEMENT_REF_FACTORY__POST_R3__ as ÉµSWITCH_ELEMENT_REF_FACTORY__POST_R3__, SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ as ÉµSWITCH_TEMPLATE_REF_FACTORY__POST_R3__, SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ as ÉµSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__, SWITCH_RENDERER2_FACTORY__POST_R3__ as ÉµSWITCH_RENDERER2_FACTORY__POST_R3__, getModuleFactory__POST_R3__ as ÉµgetModuleFactory__POST_R3__, publishGlobalUtil as ÉµpublishGlobalUtil, publishDefaultGlobalUtils as ÉµpublishDefaultGlobalUtils, SWITCH_INJECTOR_FACTORY__POST_R3__ as ÉµSWITCH_INJECTOR_FACTORY__POST_R3__, registerModuleFactory as ÉµregisterModuleFactory, EMPTY_ARRAY$4 as ÉµEMPTY_ARRAY, EMPTY_MAP as ÉµEMPTY_MAP, anchorDef as Éµand, createComponentFactory as Éµccf, createNgModuleFactory as Éµcmf, createRendererType2 as Éµcrt, directiveDef as Éµdid, elementDef as Éµeld, elementEventFullName as ÉµelementEventFullName, getComponentViewDefinitionFactory as ÉµgetComponentViewDefinitionFactory, inlineInterpolate as ÉµinlineInterpolate, interpolate as Éµinterpolate, moduleDef as Éµmod, moduleProvideDef as Éµmpd, ngContentDef as Éµncd, nodeValue as Éµnov, pipeDef as Éµpid, providerDef as Éµprd, pureArrayDef as Éµpad, pureObjectDef as Éµpod, purePipeDef as Éµppd, queryDef as Éµqud, textDef as Éµted, unwrapValue$1 as Éµunv, viewDef as Éµvid };\n//# sourceMappingURL=core.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(fromArray(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map\n","/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar MulticastOperator = /*@__PURE__*/ (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexport { MulticastOperator };\n//# sourceMappingURL=multicast.js.map\n","/** JSDoc */\nexport var Severity;\n(function (Severity) {\n    /** JSDoc */\n    Severity[\"Fatal\"] = \"fatal\";\n    /** JSDoc */\n    Severity[\"Error\"] = \"error\";\n    /** JSDoc */\n    Severity[\"Warning\"] = \"warning\";\n    /** JSDoc */\n    Severity[\"Log\"] = \"log\";\n    /** JSDoc */\n    Severity[\"Info\"] = \"info\";\n    /** JSDoc */\n    Severity[\"Debug\"] = \"debug\";\n    /** JSDoc */\n    Severity[\"Critical\"] = \"critical\";\n})(Severity || (Severity = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Severity) {\n    /**\n     * Converts a string-based level into a {@link Severity}.\n     *\n     * @param level string representation of Severity\n     * @returns Severity\n     */\n    function fromString(level) {\n        switch (level) {\n            case 'debug':\n                return Severity.Debug;\n            case 'info':\n                return Severity.Info;\n            case 'warn':\n            case 'warning':\n                return Severity.Warning;\n            case 'error':\n                return Severity.Error;\n            case 'fatal':\n                return Severity.Fatal;\n            case 'critical':\n                return Severity.Critical;\n            case 'log':\n            default:\n                return Severity.Log;\n        }\n    }\n    Severity.fromString = fromString;\n})(Severity || (Severity = {}));\n//# sourceMappingURL=severity.js.map","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SentryErrorHandler } from 'src/sentry-error-handler.service';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule],\n  providers: [{ provide: ErrorHandler, useClass: SentryErrorHandler }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/hub';\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = getCurrentHub();\n    if (hub && hub[method]) {\n        // tslint:disable-next-line:no-unsafe-any\n        return hub[method].apply(hub, tslib_1.__spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\nexport function captureException(exception) {\n    var syntheticException;\n    try {\n        throw new Error('Sentry syntheticException');\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureException', exception, {\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message, level) {\n    var syntheticException;\n    try {\n        throw new Error(message);\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureMessage', message, level, {\n        originalException: message,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback) {\n    callOnHub('withScope', callback);\n}\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n */\nexport function _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, tslib_1.__spread(['_invokeClient', method], args));\n}\n//# sourceMappingURL=index.js.map","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { captureMessage, Severity } from '@sentry/browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tech-kafi-sentry';\n\n  constructor(private http: HttpClient) {}\n\n  executeRequest() {\n    const url =\n      'https://techkafi-backend-pitc-techkafi-sentry.ose3.puzzle.ch/api/get';\n    this.http\n      .get(url)\n      .subscribe(\n        res => console.log('success response:', res),\n        error => console.error('error response:', error)\n      );\n  }\n\n  badFunction() {\n    encodeURI('\\uD800');\n  }\n\n  anotherBadFunction() {\n    throw new Error('another bad');\n  }\n\n  customMessage() {\n    captureMessage('This should not happen', Severity.Info);\n  }\n}\n","/**\n * @license Angular v7.2.15\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { InjectionToken, Injectable, EventEmitter, Optional, Inject, LOCALE_ID, ÉµisListLikeIterable, Éµstringify, Input, Directive, IterableDiffers, KeyValueDiffers, ElementRef, Renderer2, NgModuleRef, ComponentFactoryResolver, Type, Injector, NgModuleFactory, ViewContainerRef, isDevMode, TemplateRef, Host, Attribute, Pipe, WrappedValue, ÉµisPromise, ÉµisObservable, ChangeDetectorRef, NgModule, Version, defineInjectable, inject, ErrorHandler } from '@angular/core';\nimport { __decorate, __metadata, __extends, __param, __read, __values, __assign } from 'tslib';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n *\n * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n * agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms that angular supports. For example, `@angular/platform-browser` provides an\n * implementation specific to the browser environment, while `@angular/platform-webworker` provides\n * one suitable for use with web workers.\n *\n * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n * when they need to interact with the DOM apis like pushState, popState, etc...\n *\n * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n * by the {@link Router} in order to navigate between routes. Since all interactions between {@link\n * Router} /\n * {@link Location} / {@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n * class they are all platform independent.\n *\n * @publicApi\n */\nvar PlatformLocation = /** @class */ (function () {\n    function PlatformLocation() {\n    }\n    return PlatformLocation;\n}());\n/**\n * @description\n * Indicates when a location is initialized.\n *\n * @publicApi\n */\nvar LOCATION_INITIALIZED = new InjectionToken('Location Initialized');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `LocationStrategy` is responsible for representing and reading route state\n * from the browser's URL. Angular provides two strategies:\n * {@link HashLocationStrategy} and {@link PathLocationStrategy}.\n *\n * This is used under the hood of the {@link Location} service.\n *\n * Applications should use the {@link Router} or {@link Location} services to\n * interact with application route state.\n *\n * For instance, {@link HashLocationStrategy} produces URLs like\n * `http://example.com#/foo`, and {@link PathLocationStrategy} produces\n * `http://example.com/foo` as an equivalent URL.\n *\n * See these two classes for more.\n *\n * @publicApi\n */\nvar LocationStrategy = /** @class */ (function () {\n    function LocationStrategy() {\n    }\n    return LocationStrategy;\n}());\n/**\n * A predefined [DI token](guide/glossary#di-token) for the base href\n * to be used with the `PathLocationStrategy`.\n * The base href is the URL prefix that should be preserved when generating\n * and recognizing URLs.\n *\n * @usageNotes\n *\n * The following example shows how to use this token to configure the root app injector\n * with a base href value, so that the DI framework can supply the dependency anywhere in the app.\n *\n * ```typescript\n * import {Component, NgModule} from '@angular/core';\n * import {APP_BASE_HREF} from '@angular/common';\n *\n * @NgModule({\n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n *\n * @publicApi\n */\nvar APP_BASE_HREF = new InjectionToken('appBaseHref');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * A service that applications can use to interact with a browser's URL.\n *\n * Depending on the {@link LocationStrategy} used, `Location` will either persist\n * to the URL's path or the URL's hash segment.\n *\n * @usageNotes\n *\n * It's better to use the {@link Router#navigate} service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n *\n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nvar Location = /** @class */ (function () {\n    function Location(platformStrategy) {\n        var _this = this;\n        /** @internal */\n        this._subject = new EventEmitter();\n        this._platformStrategy = platformStrategy;\n        var browserBaseHref = this._platformStrategy.getBaseHref();\n        this._baseHref = Location_1.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n        this._platformStrategy.onPopState(function (ev) {\n            _this._subject.emit({\n                'url': _this.path(true),\n                'pop': true,\n                'state': ev.state,\n                'type': ev.type,\n            });\n        });\n    }\n    Location_1 = Location;\n    /**\n     * Returns the normalized URL path.\n     *\n     * @param includeHash Whether path has an anchor fragment.\n     *\n     * @returns The normalized URL path.\n     */\n    // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n    // removed.\n    Location.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        return this.normalize(this._platformStrategy.path(includeHash));\n    };\n    /**\n     * Normalizes the given path and compares to the current normalized path.\n     *\n     * @param path The given URL path\n     * @param query Query parameters\n     *\n     * @returns `true` if the given URL path is equal to the current normalized path, `false`\n     * otherwise.\n     */\n    Location.prototype.isCurrentPathEqualTo = function (path, query) {\n        if (query === void 0) { query = ''; }\n        return this.path() == this.normalize(path + Location_1.normalizeQueryParams(query));\n    };\n    /**\n     * Given a string representing a URL, returns the URL path after stripping the\n     * trailing slashes.\n     *\n     * @param url String representing a URL.\n     *\n     * @returns Normalized URL string.\n     */\n    Location.prototype.normalize = function (url) {\n        return Location_1.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n    };\n    /**\n     * Given a string representing a URL, returns the platform-specific external URL path.\n     * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n     * before normalizing. This method also adds a hash if `HashLocationStrategy` is\n     * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n     *\n     *\n     * @param url String representing a URL.\n     *\n     * @returns  A normalized platform-specific URL.\n     */\n    Location.prototype.prepareExternalUrl = function (url) {\n        if (url && url[0] !== '/') {\n            url = '/' + url;\n        }\n        return this._platformStrategy.prepareExternalUrl(url);\n    };\n    // TODO: rename this method to pushState\n    /**\n     * Changes the browsers URL to a normalized version of the given URL, and pushes a\n     * new item onto the platform's history.\n     *\n     * @param path  URL path to normalizze\n     * @param query Query parameters\n     * @param state Location history state\n     *\n     */\n    Location.prototype.go = function (path, query, state) {\n        if (query === void 0) { query = ''; }\n        if (state === void 0) { state = null; }\n        this._platformStrategy.pushState(state, '', path, query);\n    };\n    /**\n     * Changes the browser's URL to a normalized version of the given URL, and replaces\n     * the top item on the platform's history stack.\n     *\n     * @param path  URL path to normalizze\n     * @param query Query parameters\n     * @param state Location history state\n     */\n    Location.prototype.replaceState = function (path, query, state) {\n        if (query === void 0) { query = ''; }\n        if (state === void 0) { state = null; }\n        this._platformStrategy.replaceState(state, '', path, query);\n    };\n    /**\n     * Navigates forward in the platform's history.\n     */\n    Location.prototype.forward = function () { this._platformStrategy.forward(); };\n    /**\n     * Navigates back in the platform's history.\n     */\n    Location.prototype.back = function () { this._platformStrategy.back(); };\n    /**\n     * Subscribe to the platform's `popState` events.\n     *\n     * @param value Event that is triggered when the state history changes.\n     * @param exception The exception to throw.\n     *\n     * @returns Subscribed events.\n     */\n    Location.prototype.subscribe = function (onNext, onThrow, onReturn) {\n        return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n    };\n    /**\n     * Given a string of url parameters, prepend with `?` if needed, otherwise return the\n     * parameters as is.\n     *\n     *  @param  params String of URL parameters\n     *\n     *  @returns URL parameters prepended with `?` or the parameters as is.\n     */\n    Location.normalizeQueryParams = function (params) {\n        return params && params[0] !== '?' ? '?' + params : params;\n    };\n    /**\n     * Given 2 parts of a URL, join them with a slash if needed.\n     *\n     * @param start  URL string\n     * @param end    URL string\n     *\n     *\n     * @returns Given URL strings joined with a slash, if needed.\n     */\n    Location.joinWithSlash = function (start, end) {\n        if (start.length == 0) {\n            return end;\n        }\n        if (end.length == 0) {\n            return start;\n        }\n        var slashes = 0;\n        if (start.endsWith('/')) {\n            slashes++;\n        }\n        if (end.startsWith('/')) {\n            slashes++;\n        }\n        if (slashes == 2) {\n            return start + end.substring(1);\n        }\n        if (slashes == 1) {\n            return start + end;\n        }\n        return start + '/' + end;\n    };\n    /**\n     * If URL has a trailing slash, remove it, otherwise return the URL as is. The\n     * method looks for the first occurrence of either `#`, `?`, or the end of the\n     * line as `/` characters and removes the trailing slash if one exists.\n     *\n     * @param url URL string\n     *\n     * @returns Returns a URL string after removing the trailing slash if one exists, otherwise\n     * returns the string as is.\n     */\n    Location.stripTrailingSlash = function (url) {\n        var match = url.match(/#|\\?|$/);\n        var pathEndIdx = match && match.index || url.length;\n        var droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n        return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n    };\n    var Location_1;\n    Location = Location_1 = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [LocationStrategy])\n    ], Location);\n    return Location;\n}());\nfunction _stripBaseHref(baseHref, url) {\n    return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\nfunction _stripIndexHtml(url) {\n    return url.replace(/\\/index.html$/, '');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n *\n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nvar HashLocationStrategy = /** @class */ (function (_super) {\n    __extends(HashLocationStrategy, _super);\n    function HashLocationStrategy(_platformLocation, _baseHref) {\n        var _this = _super.call(this) || this;\n        _this._platformLocation = _platformLocation;\n        _this._baseHref = '';\n        if (_baseHref != null) {\n            _this._baseHref = _baseHref;\n        }\n        return _this;\n    }\n    HashLocationStrategy.prototype.onPopState = function (fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    };\n    HashLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n    HashLocationStrategy.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        // the hash value is always prefixed with a `#`\n        // and if it is empty then it will stay empty\n        var path = this._platformLocation.hash;\n        if (path == null)\n            path = '#';\n        return path.length > 0 ? path.substring(1) : path;\n    };\n    HashLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n        var url = Location.joinWithSlash(this._baseHref, internal);\n        return url.length > 0 ? ('#' + url) : url;\n    };\n    HashLocationStrategy.prototype.pushState = function (state, title, path, queryParams) {\n        var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.pushState(state, title, url);\n    };\n    HashLocationStrategy.prototype.replaceState = function (state, title, path, queryParams) {\n        var url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.replaceState(state, title, url);\n    };\n    HashLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n    HashLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n    HashLocationStrategy = __decorate([\n        Injectable(),\n        __param(1, Optional()), __param(1, Inject(APP_BASE_HREF)),\n        __metadata(\"design:paramtypes\", [PlatformLocation, String])\n    ], HashLocationStrategy);\n    return HashLocationStrategy;\n}(LocationStrategy));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n *\n * If you're using `PathLocationStrategy`, you must provide a {@link APP_BASE_HREF}\n * or add a base element to the document. This URL prefix that will be preserved\n * when generating and recognizing URLs.\n *\n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * Similarly, if you add `<base href='/my/app'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nvar PathLocationStrategy = /** @class */ (function (_super) {\n    __extends(PathLocationStrategy, _super);\n    function PathLocationStrategy(_platformLocation, href) {\n        var _this = _super.call(this) || this;\n        _this._platformLocation = _platformLocation;\n        if (href == null) {\n            href = _this._platformLocation.getBaseHrefFromDOM();\n        }\n        if (href == null) {\n            throw new Error(\"No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.\");\n        }\n        _this._baseHref = href;\n        return _this;\n    }\n    PathLocationStrategy.prototype.onPopState = function (fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    };\n    PathLocationStrategy.prototype.getBaseHref = function () { return this._baseHref; };\n    PathLocationStrategy.prototype.prepareExternalUrl = function (internal) {\n        return Location.joinWithSlash(this._baseHref, internal);\n    };\n    PathLocationStrategy.prototype.path = function (includeHash) {\n        if (includeHash === void 0) { includeHash = false; }\n        var pathname = this._platformLocation.pathname +\n            Location.normalizeQueryParams(this._platformLocation.search);\n        var hash = this._platformLocation.hash;\n        return hash && includeHash ? \"\" + pathname + hash : pathname;\n    };\n    PathLocationStrategy.prototype.pushState = function (state, title, url, queryParams) {\n        var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.pushState(state, title, externalUrl);\n    };\n    PathLocationStrategy.prototype.replaceState = function (state, title, url, queryParams) {\n        var externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.replaceState(state, title, externalUrl);\n    };\n    PathLocationStrategy.prototype.forward = function () { this._platformLocation.forward(); };\n    PathLocationStrategy.prototype.back = function () { this._platformLocation.back(); };\n    PathLocationStrategy = __decorate([\n        Injectable(),\n        __param(1, Optional()), __param(1, Inject(APP_BASE_HREF)),\n        __metadata(\"design:paramtypes\", [PlatformLocation, String])\n    ], PathLocationStrategy);\n    return PathLocationStrategy;\n}(LocationStrategy));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// THIS CODE IS GENERATED - DO NOT MODIFY\n// See angular/tools/gulp-tasks/cldr/extract.js\nvar u = undefined;\nfunction plural(n) {\n    var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n    if (i === 1 && v === 0)\n        return 1;\n    return 5;\n}\nvar localeEn = [\n    'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n    [\n        ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n    ],\n    u,\n    [\n        ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n        ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ]\n    ],\n    u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n    ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n    ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n    ['.', ',', ';', '%', '+', '-', 'E', 'Ã', 'â°', 'â', 'NaN', ':'],\n    ['#,##0.###', '#,##0%', 'Â¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar LOCALE_DATA = {};\n/**\n * Register global data to be used internally by Angular. See the\n * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n *\n * @publicApi\n */\n// The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1\nfunction registerLocaleData(data, localeId, extraData) {\n    if (typeof localeId !== 'string') {\n        extraData = localeId;\n        localeId = data[0 /* LocaleId */];\n    }\n    localeId = localeId.toLowerCase().replace(/_/g, '-');\n    LOCALE_DATA[localeId] = data;\n    if (extraData) {\n        LOCALE_DATA[localeId][19 /* ExtraData */] = extraData;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @internal */\nvar CURRENCIES_EN = {\n    'ADP': [undefined, undefined, 0],\n    'AFN': [undefined, undefined, 0],\n    'ALL': [undefined, undefined, 0],\n    'AMD': [undefined, undefined, 0],\n    'AOA': [undefined, 'Kz'],\n    'ARS': [undefined, '$'],\n    'AUD': ['A$', '$'],\n    'BAM': [undefined, 'KM'],\n    'BBD': [undefined, '$'],\n    'BDT': [undefined, 'à§³'],\n    'BHD': [undefined, undefined, 3],\n    'BIF': [undefined, undefined, 0],\n    'BMD': [undefined, '$'],\n    'BND': [undefined, '$'],\n    'BOB': [undefined, 'Bs'],\n    'BRL': ['R$'],\n    'BSD': [undefined, '$'],\n    'BWP': [undefined, 'P'],\n    'BYN': [undefined, 'Ñ.', 2],\n    'BYR': [undefined, undefined, 0],\n    'BZD': [undefined, '$'],\n    'CAD': ['CA$', '$', 2],\n    'CHF': [undefined, undefined, 2],\n    'CLF': [undefined, undefined, 4],\n    'CLP': [undefined, '$', 0],\n    'CNY': ['CNÂ¥', 'Â¥'],\n    'COP': [undefined, '$', 0],\n    'CRC': [undefined, 'â¡', 2],\n    'CUC': [undefined, '$'],\n    'CUP': [undefined, '$'],\n    'CZK': [undefined, 'KÄ', 2],\n    'DJF': [undefined, undefined, 0],\n    'DKK': [undefined, 'kr', 2],\n    'DOP': [undefined, '$'],\n    'EGP': [undefined, 'EÂ£'],\n    'ESP': [undefined, 'â§', 0],\n    'EUR': ['â¬'],\n    'FJD': [undefined, '$'],\n    'FKP': [undefined, 'Â£'],\n    'GBP': ['Â£'],\n    'GEL': [undefined, 'â¾'],\n    'GIP': [undefined, 'Â£'],\n    'GNF': [undefined, 'FG', 0],\n    'GTQ': [undefined, 'Q'],\n    'GYD': [undefined, '$', 0],\n    'HKD': ['HK$', '$'],\n    'HNL': [undefined, 'L'],\n    'HRK': [undefined, 'kn'],\n    'HUF': [undefined, 'Ft', 2],\n    'IDR': [undefined, 'Rp', 0],\n    'ILS': ['âª'],\n    'INR': ['â¹'],\n    'IQD': [undefined, undefined, 0],\n    'IRR': [undefined, undefined, 0],\n    'ISK': [undefined, 'kr', 0],\n    'ITL': [undefined, undefined, 0],\n    'JMD': [undefined, '$'],\n    'JOD': [undefined, undefined, 3],\n    'JPY': ['Â¥', undefined, 0],\n    'KHR': [undefined, 'á'],\n    'KMF': [undefined, 'CF', 0],\n    'KPW': [undefined, 'â©', 0],\n    'KRW': ['â©', undefined, 0],\n    'KWD': [undefined, undefined, 3],\n    'KYD': [undefined, '$'],\n    'KZT': [undefined, 'â¸'],\n    'LAK': [undefined, 'â­', 0],\n    'LBP': [undefined, 'LÂ£', 0],\n    'LKR': [undefined, 'Rs'],\n    'LRD': [undefined, '$'],\n    'LTL': [undefined, 'Lt'],\n    'LUF': [undefined, undefined, 0],\n    'LVL': [undefined, 'Ls'],\n    'LYD': [undefined, undefined, 3],\n    'MGA': [undefined, 'Ar', 0],\n    'MGF': [undefined, undefined, 0],\n    'MMK': [undefined, 'K', 0],\n    'MNT': [undefined, 'â®', 0],\n    'MRO': [undefined, undefined, 0],\n    'MUR': [undefined, 'Rs', 0],\n    'MXN': ['MX$', '$'],\n    'MYR': [undefined, 'RM'],\n    'NAD': [undefined, '$'],\n    'NGN': [undefined, 'â¦'],\n    'NIO': [undefined, 'C$'],\n    'NOK': [undefined, 'kr', 2],\n    'NPR': [undefined, 'Rs'],\n    'NZD': ['NZ$', '$'],\n    'OMR': [undefined, undefined, 3],\n    'PHP': [undefined, 'â±'],\n    'PKR': [undefined, 'Rs', 0],\n    'PLN': [undefined, 'zÅ'],\n    'PYG': [undefined, 'â²', 0],\n    'RON': [undefined, 'lei'],\n    'RSD': [undefined, undefined, 0],\n    'RUB': [undefined, 'â½'],\n    'RUR': [undefined, 'Ñ.'],\n    'RWF': [undefined, 'RF', 0],\n    'SBD': [undefined, '$'],\n    'SEK': [undefined, 'kr', 2],\n    'SGD': [undefined, '$'],\n    'SHP': [undefined, 'Â£'],\n    'SLL': [undefined, undefined, 0],\n    'SOS': [undefined, undefined, 0],\n    'SRD': [undefined, '$'],\n    'SSP': [undefined, 'Â£'],\n    'STD': [undefined, undefined, 0],\n    'STN': [undefined, 'Db'],\n    'SYP': [undefined, 'Â£', 0],\n    'THB': [undefined, 'à¸¿'],\n    'TMM': [undefined, undefined, 0],\n    'TND': [undefined, undefined, 3],\n    'TOP': [undefined, 'T$'],\n    'TRL': [undefined, undefined, 0],\n    'TRY': [undefined, 'âº'],\n    'TTD': [undefined, '$'],\n    'TWD': ['NT$', '$', 2],\n    'TZS': [undefined, undefined, 0],\n    'UAH': [undefined, 'â´'],\n    'UGX': [undefined, undefined, 0],\n    'USD': ['$'],\n    'UYI': [undefined, undefined, 0],\n    'UYU': [undefined, '$'],\n    'UZS': [undefined, undefined, 0],\n    'VEF': [undefined, 'Bs'],\n    'VND': ['â«', undefined, 0],\n    'VUV': [undefined, undefined, 0],\n    'XAF': ['FCFA', undefined, 0],\n    'XCD': ['EC$', '$'],\n    'XOF': ['CFA', undefined, 0],\n    'XPF': ['CFPF', undefined, 0],\n    'YER': [undefined, undefined, 0],\n    'ZAR': [undefined, 'R'],\n    'ZMK': [undefined, undefined, 0],\n    'ZMW': [undefined, 'ZK'],\n    'ZWD': [undefined, undefined, 0]\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Format styles that can be used to represent numbers.\n * @see `getLocaleNumberFormat()`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nvar NumberFormatStyle;\n(function (NumberFormatStyle) {\n    NumberFormatStyle[NumberFormatStyle[\"Decimal\"] = 0] = \"Decimal\";\n    NumberFormatStyle[NumberFormatStyle[\"Percent\"] = 1] = \"Percent\";\n    NumberFormatStyle[NumberFormatStyle[\"Currency\"] = 2] = \"Currency\";\n    NumberFormatStyle[NumberFormatStyle[\"Scientific\"] = 3] = \"Scientific\";\n})(NumberFormatStyle || (NumberFormatStyle = {}));\n/**\n * Plurality cases used for translating plurals to different languages.\n *\n * @see `NgPlural`\n * @see `NgPluralCase`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi */\nvar Plural;\n(function (Plural) {\n    Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n    Plural[Plural[\"One\"] = 1] = \"One\";\n    Plural[Plural[\"Two\"] = 2] = \"Two\";\n    Plural[Plural[\"Few\"] = 3] = \"Few\";\n    Plural[Plural[\"Many\"] = 4] = \"Many\";\n    Plural[Plural[\"Other\"] = 5] = \"Other\";\n})(Plural || (Plural = {}));\n/**\n * Context-dependant translation forms for strings.\n * Typically the standalone version is for the nominative form of the word,\n * and the format version is used for the genitive case.\n * @see [CLDR website](http://cldr.unicode.org/translation/date-time#TOC-Stand-Alone-vs.-Format-Styles)\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nvar FormStyle;\n(function (FormStyle) {\n    FormStyle[FormStyle[\"Format\"] = 0] = \"Format\";\n    FormStyle[FormStyle[\"Standalone\"] = 1] = \"Standalone\";\n})(FormStyle || (FormStyle = {}));\n/**\n * String widths available for translations.\n * The specific character widths are locale-specific.\n * Examples are given for the word \"Sunday\" in English.\n *\n * @publicApi\n */\nvar TranslationWidth;\n(function (TranslationWidth) {\n    /** 1 character for `en-US`. For example: 'S' */\n    TranslationWidth[TranslationWidth[\"Narrow\"] = 0] = \"Narrow\";\n    /** 3 characters for `en-US`. For example: 'Sun' */\n    TranslationWidth[TranslationWidth[\"Abbreviated\"] = 1] = \"Abbreviated\";\n    /** Full length for `en-US`. For example: \"Sunday\" */\n    TranslationWidth[TranslationWidth[\"Wide\"] = 2] = \"Wide\";\n    /** 2 characters for `en-US`, For example: \"Su\" */\n    TranslationWidth[TranslationWidth[\"Short\"] = 3] = \"Short\";\n})(TranslationWidth || (TranslationWidth = {}));\n/**\n * String widths available for date-time formats.\n * The specific character widths are locale-specific.\n * Examples are given for `en-US`.\n *\n * @see `getLocaleDateFormat()`\n * @see `getLocaleTimeFormat()``\n * @see `getLocaleDateTimeFormat()`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n * @publicApi\n */\nvar FormatWidth;\n(function (FormatWidth) {\n    /**\n     * For `en-US`, 'M/d/yy, h:mm a'`\n     * (Example: `6/15/15, 9:03 AM`)\n     */\n    FormatWidth[FormatWidth[\"Short\"] = 0] = \"Short\";\n    /**\n     * For `en-US`, `'MMM d, y, h:mm:ss a'`\n     * (Example: `Jun 15, 2015, 9:03:01 AM`)\n     */\n    FormatWidth[FormatWidth[\"Medium\"] = 1] = \"Medium\";\n    /**\n     * For `en-US`, `'MMMM d, y, h:mm:ss a z'`\n     * (Example: `June 15, 2015 at 9:03:01 AM GMT+1`)\n     */\n    FormatWidth[FormatWidth[\"Long\"] = 2] = \"Long\";\n    /**\n     * For `en-US`, `'EEEE, MMMM d, y, h:mm:ss a zzzz'`\n     * (Example: `Monday, June 15, 2015 at 9:03:01 AM GMT+01:00`)\n     */\n    FormatWidth[FormatWidth[\"Full\"] = 3] = \"Full\";\n})(FormatWidth || (FormatWidth = {}));\n/**\n * Symbols that can be used to replace placeholders in number patterns.\n * Examples are based on `en-US` values.\n *\n * @see `getLocaleNumberSymbol()`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nvar NumberSymbol;\n(function (NumberSymbol) {\n    /**\n     * Decimal separator.\n     * For `en-US`, the dot character.\n     * Example : 2,345`.`67\n     */\n    NumberSymbol[NumberSymbol[\"Decimal\"] = 0] = \"Decimal\";\n    /**\n     * Grouping separator, typically for thousands.\n     * For `en-US`, the comma character.\n     * Example: 2`,`345.67\n     */\n    NumberSymbol[NumberSymbol[\"Group\"] = 1] = \"Group\";\n    /**\n     * List-item separator.\n     * Example: \"one, two, and three\"\n     */\n    NumberSymbol[NumberSymbol[\"List\"] = 2] = \"List\";\n    /**\n     * Sign for percentage (out of 100).\n     * Example: 23.4%\n     */\n    NumberSymbol[NumberSymbol[\"PercentSign\"] = 3] = \"PercentSign\";\n    /**\n     * Sign for positive numbers.\n     * Example: +23\n     */\n    NumberSymbol[NumberSymbol[\"PlusSign\"] = 4] = \"PlusSign\";\n    /**\n     * Sign for negative numbers.\n     * Example: -23\n     */\n    NumberSymbol[NumberSymbol[\"MinusSign\"] = 5] = \"MinusSign\";\n    /**\n     * Computer notation for exponential value (n times a power of 10).\n     * Example: 1.2E3\n     */\n    NumberSymbol[NumberSymbol[\"Exponential\"] = 6] = \"Exponential\";\n    /**\n     * Human-readable format of exponential.\n     * Example: 1.2x103\n     */\n    NumberSymbol[NumberSymbol[\"SuperscriptingExponent\"] = 7] = \"SuperscriptingExponent\";\n    /**\n     * Sign for permille (out of 1000).\n     * Example: 23.4â°\n     */\n    NumberSymbol[NumberSymbol[\"PerMille\"] = 8] = \"PerMille\";\n    /**\n     * Infinity, can be used with plus and minus.\n     * Example: â, +â, -â\n     */\n    NumberSymbol[NumberSymbol[\"Infinity\"] = 9] = \"Infinity\";\n    /**\n     * Not a number.\n     * Example: NaN\n     */\n    NumberSymbol[NumberSymbol[\"NaN\"] = 10] = \"NaN\";\n    /**\n     * Symbol used between time units.\n     * Example: 10:52\n     */\n    NumberSymbol[NumberSymbol[\"TimeSeparator\"] = 11] = \"TimeSeparator\";\n    /**\n     * Decimal separator for currency values (fallback to `Decimal`).\n     * Example: $2,345.67\n     */\n    NumberSymbol[NumberSymbol[\"CurrencyDecimal\"] = 12] = \"CurrencyDecimal\";\n    /**\n     * Group separator for currency values (fallback to `Group`).\n     * Example: $2,345.67\n     */\n    NumberSymbol[NumberSymbol[\"CurrencyGroup\"] = 13] = \"CurrencyGroup\";\n})(NumberSymbol || (NumberSymbol = {}));\n/**\n * The value for each day of the week, based on the `en-US` locale\n *\n * @publicApi\n */\nvar WeekDay;\n(function (WeekDay) {\n    WeekDay[WeekDay[\"Sunday\"] = 0] = \"Sunday\";\n    WeekDay[WeekDay[\"Monday\"] = 1] = \"Monday\";\n    WeekDay[WeekDay[\"Tuesday\"] = 2] = \"Tuesday\";\n    WeekDay[WeekDay[\"Wednesday\"] = 3] = \"Wednesday\";\n    WeekDay[WeekDay[\"Thursday\"] = 4] = \"Thursday\";\n    WeekDay[WeekDay[\"Friday\"] = 5] = \"Friday\";\n    WeekDay[WeekDay[\"Saturday\"] = 6] = \"Saturday\";\n})(WeekDay || (WeekDay = {}));\n/**\n * Retrieves the locale ID from the currently loaded locale.\n * The loaded locale could be, for example, a global one rather than a regional one.\n * @param locale A locale code, such as `fr-FR`.\n * @returns The locale code. For example, `fr`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleId(locale) {\n    return findLocaleData(locale)[0 /* LocaleId */];\n}\n/**\n * Retrieves day period strings for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized period strings. For example, `[AM, PM]` for `en-US`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleDayPeriods(locale, formStyle, width) {\n    var data = findLocaleData(locale);\n    var amPmData = [data[1 /* DayPeriodsFormat */], data[2 /* DayPeriodsStandalone */]];\n    var amPm = getLastDefinedValue(amPmData, formStyle);\n    return getLastDefinedValue(amPm, width);\n}\n/**\n * Retrieves days of the week for the given locale, using the Gregorian calendar.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized name strings.\n * For example,`[Sunday, Monday, ... Saturday]` for `en-US`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleDayNames(locale, formStyle, width) {\n    var data = findLocaleData(locale);\n    var daysData = [data[3 /* DaysFormat */], data[4 /* DaysStandalone */]];\n    var days = getLastDefinedValue(daysData, formStyle);\n    return getLastDefinedValue(days, width);\n}\n/**\n * Retrieves months of the year for the given locale, using the Gregorian calendar.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized name strings.\n * For example,  `[January, February, ...]` for `en-US`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleMonthNames(locale, formStyle, width) {\n    var data = findLocaleData(locale);\n    var monthsData = [data[5 /* MonthsFormat */], data[6 /* MonthsStandalone */]];\n    var months = getLastDefinedValue(monthsData, formStyle);\n    return getLastDefinedValue(months, width);\n}\n/**\n * Retrieves Gregorian-calendar eras for the given locale.\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n\n * @returns An array of localized era strings.\n * For example, `[AD, BC]` for `en-US`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleEraNames(locale, width) {\n    var data = findLocaleData(locale);\n    var erasData = data[7 /* Eras */];\n    return getLastDefinedValue(erasData, width);\n}\n/**\n * Retrieves the first day of the week for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns A day index number, using the 0-based week-day index for `en-US`\n * (Sunday = 0, Monday = 1, ...).\n * For example, for `fr-FR`, returns 1 to indicate that the first day is Monday.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleFirstDayOfWeek(locale) {\n    var data = findLocaleData(locale);\n    return data[8 /* FirstDayOfWeek */];\n}\n/**\n * Range of week days that are considered the week-end for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The range of day values, `[startDay, endDay]`.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleWeekEndRange(locale) {\n    var data = findLocaleData(locale);\n    return data[9 /* WeekendRange */];\n}\n/**\n * Retrieves a localized date-value formating string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formating string.\n * @see `FormatWidth`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleDateFormat(locale, width) {\n    var data = findLocaleData(locale);\n    return getLastDefinedValue(data[10 /* DateFormat */], width);\n}\n/**\n * Retrieves a localized time-value formatting string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formatting string.\n * @see `FormatWidth`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n\n * @publicApi\n */\nfunction getLocaleTimeFormat(locale, width) {\n    var data = findLocaleData(locale);\n    return getLastDefinedValue(data[11 /* TimeFormat */], width);\n}\n/**\n * Retrieves a localized date-time formatting string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formatting string.\n * @see `FormatWidth`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleDateTimeFormat(locale, width) {\n    var data = findLocaleData(locale);\n    var dateTimeFormatData = data[12 /* DateTimeFormat */];\n    return getLastDefinedValue(dateTimeFormatData, width);\n}\n/**\n * Retrieves a localized number symbol that can be used to replace placeholders in number formats.\n * @param locale The locale code.\n * @param symbol The symbol to localize.\n * @returns The character for the localized symbol.\n * @see `NumberSymbol`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleNumberSymbol(locale, symbol) {\n    var data = findLocaleData(locale);\n    var res = data[13 /* NumberSymbols */][symbol];\n    if (typeof res === 'undefined') {\n        if (symbol === NumberSymbol.CurrencyDecimal) {\n            return data[13 /* NumberSymbols */][NumberSymbol.Decimal];\n        }\n        else if (symbol === NumberSymbol.CurrencyGroup) {\n            return data[13 /* NumberSymbols */][NumberSymbol.Group];\n        }\n    }\n    return res;\n}\n/**\n * Retrieves a number format for a given locale.\n *\n * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`\n * when used to format the number 12345.678 could result in \"12'345,678\". That would happen if the\n * grouping separator for your language is an apostrophe, and the decimal separator is a comma.\n *\n * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders\n * that stand for the decimal separator, and so on, and are NOT real characters.\n * You must NOT \"translate\" the placeholders. For example, don't change `.` to `,` even though in\n * your language the decimal point is written with a comma. The symbols should be replaced by the\n * local equivalents, using the appropriate `NumberSymbol` for your language.\n *\n * Here are the special characters used in number patterns:\n *\n * | Symbol | Meaning |\n * |--------|---------|\n * | . | Replaced automatically by the character used for the decimal point. |\n * | , | Replaced by the \"grouping\" (thousands) separator. |\n * | 0 | Replaced by a digit (or zero if there aren't enough digits). |\n * | # | Replaced by a digit (or nothing if there aren't enough). |\n * | Â¤ | Replaced by a currency symbol, such as $ or USD. |\n * | % | Marks a percent format. The % symbol may change position, but must be retained. |\n * | E | Marks a scientific format. The E symbol may change position, but must be retained. |\n * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |\n *\n * @param locale A locale code for the locale format rules to use.\n * @param type The type of numeric value to be formatted (such as `Decimal` or `Currency`.)\n * @returns The localized format string.\n * @see `NumberFormatStyle`\n * @see [CLDR website](http://cldr.unicode.org/translation/number-patterns)\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleNumberFormat(locale, type) {\n    var data = findLocaleData(locale);\n    return data[14 /* NumberFormats */][type];\n}\n/**\n * Retrieves the symbol used to represent the currency for the main country\n * corresponding to a given locale. For example, '$' for `en-US`.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The localized symbol character,\n * or `null` if the main country cannot be determined.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleCurrencySymbol(locale) {\n    var data = findLocaleData(locale);\n    return data[15 /* CurrencySymbol */] || null;\n}\n/**\n * Retrieves the name of the currency for the main country corresponding\n * to a given locale. For example, 'US Dollar' for `en-US`.\n * @param locale A locale code for the locale format rules to use.\n * @returns The currency name,\n * or `null` if the main country cannot be determined.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleCurrencyName(locale) {\n    var data = findLocaleData(locale);\n    return data[16 /* CurrencyName */] || null;\n}\n/**\n * Retrieves the currency values for a given locale.\n * @param locale A locale code for the locale format rules to use.\n * @returns The currency values.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n */\nfunction getLocaleCurrencies(locale) {\n    var data = findLocaleData(locale);\n    return data[17 /* Currencies */];\n}\n/**\n * Retrieves the plural function used by ICU expressions to determine the plural case to use\n * for a given locale.\n * @param locale A locale code for the locale format rules to use.\n * @returns The plural function for the locale.\n * @see `NgPlural`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocalePluralCase(locale) {\n    var data = findLocaleData(locale);\n    return data[18 /* PluralCase */];\n}\nfunction checkFullData(data) {\n    if (!data[19 /* ExtraData */]) {\n        throw new Error(\"Missing extra locale data for the locale \\\"\" + data[0 /* LocaleId */] + \"\\\". Use \\\"registerLocaleData\\\" to load new data. See the \\\"I18n guide\\\" on angular.io to know more.\");\n    }\n}\n/**\n * Retrieves locale-specific rules used to determine which day period to use\n * when more than one period is defined for a locale.\n *\n * There is a rule for each defined day period. The\n * first rule is applied to the first day period and so on.\n * Fall back to AM/PM when no rules are available.\n *\n * A rule can specify a period as time range, or as a single time value.\n *\n * This functionality is only available when you have loaded the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes).\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The rules for the locale, a single time value or array of *from-time, to-time*,\n * or null if no periods are available.\n *\n * @see `getLocaleExtraDayPeriods()`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleExtraDayPeriodRules(locale) {\n    var data = findLocaleData(locale);\n    checkFullData(data);\n    var rules = data[19 /* ExtraData */][2 /* ExtraDayPeriodsRules */] || [];\n    return rules.map(function (rule) {\n        if (typeof rule === 'string') {\n            return extractTime(rule);\n        }\n        return [extractTime(rule[0]), extractTime(rule[1])];\n    });\n}\n/**\n * Retrieves locale-specific day periods, which indicate roughly how a day is broken up\n * in different languages.\n * For example, for `en-US`, periods are morning, noon, afternoon, evening, and midnight.\n *\n * This functionality is only available when you have loaded the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes).\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns The translated day-period strings.\n * @see `getLocaleExtraDayPeriodRules()`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLocaleExtraDayPeriods(locale, formStyle, width) {\n    var data = findLocaleData(locale);\n    checkFullData(data);\n    var dayPeriodsData = [\n        data[19 /* ExtraData */][0 /* ExtraDayPeriodFormats */],\n        data[19 /* ExtraData */][1 /* ExtraDayPeriodStandalone */]\n    ];\n    var dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\n    return getLastDefinedValue(dayPeriods, width) || [];\n}\n/**\n * Retrieves the first value that is defined in an array, going backwards from an index position.\n *\n * To avoid repeating the same data (as when the \"format\" and \"standalone\" forms are the same)\n * add the first value to the locale data arrays, and add other values only if they are different.\n *\n * @param data The data array to retrieve from.\n * @param index A 0-based index into the array to start from.\n * @returns The value immediately before the given index position.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getLastDefinedValue(data, index) {\n    for (var i = index; i > -1; i--) {\n        if (typeof data[i] !== 'undefined') {\n            return data[i];\n        }\n    }\n    throw new Error('Locale data API: locale data undefined');\n}\n/**\n * Extracts the hours and minutes from a string like \"15:45\"\n */\nfunction extractTime(time) {\n    var _a = __read(time.split(':'), 2), h = _a[0], m = _a[1];\n    return { hours: +h, minutes: +m };\n}\n/**\n * Finds the locale data for a given locale.\n *\n * @param locale The locale code.\n * @returns The locale data.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction findLocaleData(locale) {\n    var normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n    var match = LOCALE_DATA[normalizedLocale];\n    if (match) {\n        return match;\n    }\n    // let's try to find a parent locale\n    var parentLocale = normalizedLocale.split('-')[0];\n    match = LOCALE_DATA[parentLocale];\n    if (match) {\n        return match;\n    }\n    if (parentLocale === 'en') {\n        return localeEn;\n    }\n    throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n}\n/**\n * Retrieves the currency symbol for a given currency code.\n *\n * For example, for the default `en-US` locale, the code `USD` can\n * be represented by the narrow symbol `$` or the wide symbol `US$`.\n *\n * @param code The currency code.\n * @param format The format, `wide` or `narrow`.\n * @param locale A locale code for the locale format rules to use.\n *\n * @returns The symbol, or the currency code if no symbol is available.0\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getCurrencySymbol(code, format, locale) {\n    if (locale === void 0) { locale = 'en'; }\n    var currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];\n    var symbolNarrow = currency[1 /* SymbolNarrow */];\n    if (format === 'narrow' && typeof symbolNarrow === 'string') {\n        return symbolNarrow;\n    }\n    return currency[0 /* Symbol */] || code;\n}\n// Most currencies have cents, that's why the default is 2\nvar DEFAULT_NB_OF_CURRENCY_DIGITS = 2;\n/**\n * Reports the number of decimal digits for a given currency.\n * The value depends upon the presence of cents in that particular currency.\n *\n * @param code The currency code.\n * @returns The number of decimal digits, typically 0 or 2.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction getNumberOfCurrencyDigits(code) {\n    var digits;\n    var currency = CURRENCIES_EN[code];\n    if (currency) {\n        digits = currency[2 /* NbOfDigits */];\n    }\n    return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n//    1        2       3         4          5          6          7          8  9     10      11\nvar NAMED_FORMATS = {};\nvar DATE_FORMATS_SPLIT = /((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\\s\\S]*)/;\nvar ZoneWidth;\n(function (ZoneWidth) {\n    ZoneWidth[ZoneWidth[\"Short\"] = 0] = \"Short\";\n    ZoneWidth[ZoneWidth[\"ShortGMT\"] = 1] = \"ShortGMT\";\n    ZoneWidth[ZoneWidth[\"Long\"] = 2] = \"Long\";\n    ZoneWidth[ZoneWidth[\"Extended\"] = 3] = \"Extended\";\n})(ZoneWidth || (ZoneWidth = {}));\nvar DateType;\n(function (DateType) {\n    DateType[DateType[\"FullYear\"] = 0] = \"FullYear\";\n    DateType[DateType[\"Month\"] = 1] = \"Month\";\n    DateType[DateType[\"Date\"] = 2] = \"Date\";\n    DateType[DateType[\"Hours\"] = 3] = \"Hours\";\n    DateType[DateType[\"Minutes\"] = 4] = \"Minutes\";\n    DateType[DateType[\"Seconds\"] = 5] = \"Seconds\";\n    DateType[DateType[\"FractionalSeconds\"] = 6] = \"FractionalSeconds\";\n    DateType[DateType[\"Day\"] = 7] = \"Day\";\n})(DateType || (DateType = {}));\nvar TranslationType;\n(function (TranslationType) {\n    TranslationType[TranslationType[\"DayPeriods\"] = 0] = \"DayPeriods\";\n    TranslationType[TranslationType[\"Days\"] = 1] = \"Days\";\n    TranslationType[TranslationType[\"Months\"] = 2] = \"Months\";\n    TranslationType[TranslationType[\"Eras\"] = 3] = \"Eras\";\n})(TranslationType || (TranslationType = {}));\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date according to locale rules.\n *\n * @param value The date to format, as a Date, or a number (milliseconds since UTC epoch)\n * or an [ISO date-time string](https://www.w3.org/TR/NOTE-datetime).\n * @param format The date-time components to include. See `DatePipe` for details.\n * @param locale A locale code for the locale format rules to use.\n * @param timezone The time zone. A time zone offset from GMT (such as `'+0430'`),\n * or a standard UTC/GMT or continental US time zone abbreviation.\n * If not specified, uses host system settings.\n *\n * @returns The formatted date string.\n *\n * @see `DatePipe`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction formatDate(value, format, locale, timezone) {\n    var date = toDate(value);\n    var namedFormat = getNamedFormat(locale, format);\n    format = namedFormat || format;\n    var parts = [];\n    var match;\n    while (format) {\n        match = DATE_FORMATS_SPLIT.exec(format);\n        if (match) {\n            parts = parts.concat(match.slice(1));\n            var part = parts.pop();\n            if (!part) {\n                break;\n            }\n            format = part;\n        }\n        else {\n            parts.push(format);\n            break;\n        }\n    }\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    if (timezone) {\n        dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n        date = convertTimezoneToLocal(date, timezone, true);\n    }\n    var text = '';\n    parts.forEach(function (value) {\n        var dateFormatter = getDateFormatter(value);\n        text += dateFormatter ?\n            dateFormatter(date, locale, dateTimezoneOffset) :\n            value === '\\'\\'' ? '\\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n    });\n    return text;\n}\nfunction getNamedFormat(locale, format) {\n    var localeId = getLocaleId(locale);\n    NAMED_FORMATS[localeId] = NAMED_FORMATS[localeId] || {};\n    if (NAMED_FORMATS[localeId][format]) {\n        return NAMED_FORMATS[localeId][format];\n    }\n    var formatValue = '';\n    switch (format) {\n        case 'shortDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Short);\n            break;\n        case 'mediumDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);\n            break;\n        case 'longDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Long);\n            break;\n        case 'fullDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Full);\n            break;\n        case 'shortTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);\n            break;\n        case 'mediumTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);\n            break;\n        case 'longTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);\n            break;\n        case 'fullTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);\n            break;\n        case 'short':\n            var shortTime = getNamedFormat(locale, 'shortTime');\n            var shortDate = getNamedFormat(locale, 'shortDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);\n            break;\n        case 'medium':\n            var mediumTime = getNamedFormat(locale, 'mediumTime');\n            var mediumDate = getNamedFormat(locale, 'mediumDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);\n            break;\n        case 'long':\n            var longTime = getNamedFormat(locale, 'longTime');\n            var longDate = getNamedFormat(locale, 'longDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);\n            break;\n        case 'full':\n            var fullTime = getNamedFormat(locale, 'fullTime');\n            var fullDate = getNamedFormat(locale, 'fullDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);\n            break;\n    }\n    if (formatValue) {\n        NAMED_FORMATS[localeId][format] = formatValue;\n    }\n    return formatValue;\n}\nfunction formatDateTime(str, opt_values) {\n    if (opt_values) {\n        str = str.replace(/\\{([^}]+)}/g, function (match, key) {\n            return (opt_values != null && key in opt_values) ? opt_values[key] : match;\n        });\n    }\n    return str;\n}\nfunction padNumber(num, digits, minusSign, trim, negWrap) {\n    if (minusSign === void 0) { minusSign = '-'; }\n    var neg = '';\n    if (num < 0 || (negWrap && num <= 0)) {\n        if (negWrap) {\n            num = -num + 1;\n        }\n        else {\n            num = -num;\n            neg = minusSign;\n        }\n    }\n    var strNum = String(num);\n    while (strNum.length < digits) {\n        strNum = '0' + strNum;\n    }\n    if (trim) {\n        strNum = strNum.substr(strNum.length - digits);\n    }\n    return neg + strNum;\n}\nfunction formatFractionalSeconds(milliseconds, digits) {\n    var strMs = padNumber(milliseconds, 3);\n    return strMs.substr(0, digits);\n}\n/**\n * Returns a date formatter that transforms a date into its locale digit representation\n */\nfunction dateGetter(name, size, offset, trim, negWrap) {\n    if (offset === void 0) { offset = 0; }\n    if (trim === void 0) { trim = false; }\n    if (negWrap === void 0) { negWrap = false; }\n    return function (date, locale) {\n        var part = getDatePart(name, date);\n        if (offset > 0 || part > -offset) {\n            part += offset;\n        }\n        if (name === DateType.Hours) {\n            if (part === 0 && offset === -12) {\n                part = 12;\n            }\n        }\n        else if (name === DateType.FractionalSeconds) {\n            return formatFractionalSeconds(part, size);\n        }\n        var localeMinus = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n        return padNumber(part, size, localeMinus, trim, negWrap);\n    };\n}\nfunction getDatePart(part, date) {\n    switch (part) {\n        case DateType.FullYear:\n            return date.getFullYear();\n        case DateType.Month:\n            return date.getMonth();\n        case DateType.Date:\n            return date.getDate();\n        case DateType.Hours:\n            return date.getHours();\n        case DateType.Minutes:\n            return date.getMinutes();\n        case DateType.Seconds:\n            return date.getSeconds();\n        case DateType.FractionalSeconds:\n            return date.getMilliseconds();\n        case DateType.Day:\n            return date.getDay();\n        default:\n            throw new Error(\"Unknown DateType value \\\"\" + part + \"\\\".\");\n    }\n}\n/**\n * Returns a date formatter that transforms a date into its locale string representation\n */\nfunction dateStrGetter(name, width, form, extended) {\n    if (form === void 0) { form = FormStyle.Format; }\n    if (extended === void 0) { extended = false; }\n    return function (date, locale) {\n        return getDateTranslation(date, locale, name, width, form, extended);\n    };\n}\n/**\n * Returns the locale translation of a date for a given form, type and width\n */\nfunction getDateTranslation(date, locale, name, width, form, extended) {\n    switch (name) {\n        case TranslationType.Months:\n            return getLocaleMonthNames(locale, form, width)[date.getMonth()];\n        case TranslationType.Days:\n            return getLocaleDayNames(locale, form, width)[date.getDay()];\n        case TranslationType.DayPeriods:\n            var currentHours_1 = date.getHours();\n            var currentMinutes_1 = date.getMinutes();\n            if (extended) {\n                var rules = getLocaleExtraDayPeriodRules(locale);\n                var dayPeriods_1 = getLocaleExtraDayPeriods(locale, form, width);\n                var result_1;\n                rules.forEach(function (rule, index) {\n                    if (Array.isArray(rule)) {\n                        // morning, afternoon, evening, night\n                        var _a = rule[0], hoursFrom = _a.hours, minutesFrom = _a.minutes;\n                        var _b = rule[1], hoursTo = _b.hours, minutesTo = _b.minutes;\n                        if (currentHours_1 >= hoursFrom && currentMinutes_1 >= minutesFrom &&\n                            (currentHours_1 < hoursTo ||\n                                (currentHours_1 === hoursTo && currentMinutes_1 < minutesTo))) {\n                            result_1 = dayPeriods_1[index];\n                        }\n                    }\n                    else { // noon or midnight\n                        var hours = rule.hours, minutes = rule.minutes;\n                        if (hours === currentHours_1 && minutes === currentMinutes_1) {\n                            result_1 = dayPeriods_1[index];\n                        }\n                    }\n                });\n                if (result_1) {\n                    return result_1;\n                }\n            }\n            // if no rules for the day periods, we use am/pm by default\n            return getLocaleDayPeriods(locale, form, width)[currentHours_1 < 12 ? 0 : 1];\n        case TranslationType.Eras:\n            return getLocaleEraNames(locale, width)[date.getFullYear() <= 0 ? 0 : 1];\n        default:\n            // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n            // However Closure Compiler does not understand that and reports an error in typed mode.\n            // The `throw new Error` below works around the problem, and the unexpected: never variable\n            // makes sure tsc still checks this code is unreachable.\n            var unexpected = name;\n            throw new Error(\"unexpected translation type \" + unexpected);\n    }\n}\n/**\n * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or\n * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,\n * extended = +04:30)\n */\nfunction timeZoneGetter(width) {\n    return function (date, locale, offset) {\n        var zone = -1 * offset;\n        var minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n        var hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);\n        switch (width) {\n            case ZoneWidth.Short:\n                return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.ShortGMT:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 1, minusSign);\n            case ZoneWidth.Long:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.Extended:\n                if (offset === 0) {\n                    return 'Z';\n                }\n                else {\n                    return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                        padNumber(Math.abs(zone % 60), 2, minusSign);\n                }\n            default:\n                throw new Error(\"Unknown zone width \\\"\" + width + \"\\\"\");\n        }\n    };\n}\nvar JANUARY = 0;\nvar THURSDAY = 4;\nfunction getFirstThursdayOfYear(year) {\n    var firstDayOfYear = (new Date(year, JANUARY, 1)).getDay();\n    return new Date(year, 0, 1 + ((firstDayOfYear <= THURSDAY) ? THURSDAY : THURSDAY + 7) - firstDayOfYear);\n}\nfunction getThursdayThisWeek(datetime) {\n    return new Date(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + (THURSDAY - datetime.getDay()));\n}\nfunction weekGetter(size, monthBased) {\n    if (monthBased === void 0) { monthBased = false; }\n    return function (date, locale) {\n        var result;\n        if (monthBased) {\n            var nbDaysBefore1stDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;\n            var today = date.getDate();\n            result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);\n        }\n        else {\n            var firstThurs = getFirstThursdayOfYear(date.getFullYear());\n            var thisThurs = getThursdayThisWeek(date);\n            var diff = thisThurs.getTime() - firstThurs.getTime();\n            result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\n        }\n        return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    };\n}\nvar DATE_FORMATS = {};\n// Based on CLDR formats:\n// See complete list: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n// See also explanations: http://cldr.unicode.org/translation/date-time\n// TODO(ocombe): support all missing cldr formats: Y, U, Q, D, F, e, c, j, J, C, A, v, V, X, x\nfunction getDateFormatter(format) {\n    if (DATE_FORMATS[format]) {\n        return DATE_FORMATS[format];\n    }\n    var formatter;\n    switch (format) {\n        // Era name (AD/BC)\n        case 'G':\n        case 'GG':\n        case 'GGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Abbreviated);\n            break;\n        case 'GGGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Wide);\n            break;\n        case 'GGGGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Narrow);\n            break;\n        // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)\n        case 'y':\n            formatter = dateGetter(DateType.FullYear, 1, 0, false, true);\n            break;\n        // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yy':\n            formatter = dateGetter(DateType.FullYear, 2, 0, true, true);\n            break;\n        // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yyy':\n            formatter = dateGetter(DateType.FullYear, 3, 0, false, true);\n            break;\n        // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)\n        case 'yyyy':\n            formatter = dateGetter(DateType.FullYear, 4, 0, false, true);\n            break;\n        // Month of the year (1-12), numeric\n        case 'M':\n        case 'L':\n            formatter = dateGetter(DateType.Month, 1, 1);\n            break;\n        case 'MM':\n        case 'LL':\n            formatter = dateGetter(DateType.Month, 2, 1);\n            break;\n        // Month of the year (January, ...), string, format\n        case 'MMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated);\n            break;\n        case 'MMMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide);\n            break;\n        case 'MMMMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow);\n            break;\n        // Month of the year (January, ...), string, standalone\n        case 'LLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated, FormStyle.Standalone);\n            break;\n        case 'LLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Wide, FormStyle.Standalone);\n            break;\n        case 'LLLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Narrow, FormStyle.Standalone);\n            break;\n        // Week of the year (1, ... 52)\n        case 'w':\n            formatter = weekGetter(1);\n            break;\n        case 'ww':\n            formatter = weekGetter(2);\n            break;\n        // Week of the month (1, ...)\n        case 'W':\n            formatter = weekGetter(1, true);\n            break;\n        // Day of the month (1-31)\n        case 'd':\n            formatter = dateGetter(DateType.Date, 1);\n            break;\n        case 'dd':\n            formatter = dateGetter(DateType.Date, 2);\n            break;\n        // Day of the Week\n        case 'E':\n        case 'EE':\n        case 'EEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Abbreviated);\n            break;\n        case 'EEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Wide);\n            break;\n        case 'EEEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Narrow);\n            break;\n        case 'EEEEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Short);\n            break;\n        // Generic period of the day (am-pm)\n        case 'a':\n        case 'aa':\n        case 'aaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated);\n            break;\n        case 'aaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide);\n            break;\n        case 'aaaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow);\n            break;\n        // Extended period of the day (midnight, at night, ...), standalone\n        case 'b':\n        case 'bb':\n        case 'bbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Standalone, true);\n            break;\n        case 'bbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Standalone, true);\n            break;\n        case 'bbbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Standalone, true);\n            break;\n        // Extended period of the day (midnight, night, ...), standalone\n        case 'B':\n        case 'BB':\n        case 'BBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Format, true);\n            break;\n        case 'BBBB':\n            formatter =\n                dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Format, true);\n            break;\n        case 'BBBBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Format, true);\n            break;\n        // Hour in AM/PM, (1-12)\n        case 'h':\n            formatter = dateGetter(DateType.Hours, 1, -12);\n            break;\n        case 'hh':\n            formatter = dateGetter(DateType.Hours, 2, -12);\n            break;\n        // Hour of the day (0-23)\n        case 'H':\n            formatter = dateGetter(DateType.Hours, 1);\n            break;\n        // Hour in day, padded (00-23)\n        case 'HH':\n            formatter = dateGetter(DateType.Hours, 2);\n            break;\n        // Minute of the hour (0-59)\n        case 'm':\n            formatter = dateGetter(DateType.Minutes, 1);\n            break;\n        case 'mm':\n            formatter = dateGetter(DateType.Minutes, 2);\n            break;\n        // Second of the minute (0-59)\n        case 's':\n            formatter = dateGetter(DateType.Seconds, 1);\n            break;\n        case 'ss':\n            formatter = dateGetter(DateType.Seconds, 2);\n            break;\n        // Fractional second\n        case 'S':\n            formatter = dateGetter(DateType.FractionalSeconds, 1);\n            break;\n        case 'SS':\n            formatter = dateGetter(DateType.FractionalSeconds, 2);\n            break;\n        case 'SSS':\n            formatter = dateGetter(DateType.FractionalSeconds, 3);\n            break;\n        // Timezone ISO8601 short format (-0430)\n        case 'Z':\n        case 'ZZ':\n        case 'ZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Short);\n            break;\n        // Timezone ISO8601 extended format (-04:30)\n        case 'ZZZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Extended);\n            break;\n        // Timezone GMT short format (GMT+4)\n        case 'O':\n        case 'OO':\n        case 'OOO':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'z':\n        case 'zz':\n        case 'zzz':\n            formatter = timeZoneGetter(ZoneWidth.ShortGMT);\n            break;\n        // Timezone GMT long format (GMT+0430)\n        case 'OOOO':\n        case 'ZZZZ':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'zzzz':\n            formatter = timeZoneGetter(ZoneWidth.Long);\n            break;\n        default:\n            return null;\n    }\n    DATE_FORMATS[format] = formatter;\n    return formatter;\n}\nfunction timezoneToOffset(timezone, fallback) {\n    // Support: IE 9-11 only, Edge 13-15+\n    // IE/Edge do not \"understand\" colon (`:`) in timezone\n    timezone = timezone.replace(/:/g, '');\n    var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n    return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n}\nfunction addDateMinutes(date, minutes) {\n    date = new Date(date.getTime());\n    date.setMinutes(date.getMinutes() + minutes);\n    return date;\n}\nfunction convertTimezoneToLocal(date, timezone, reverse) {\n    var reverseValue = reverse ? -1 : 1;\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n    return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));\n}\n/**\n * Converts a value to date.\n *\n * Supported input formats:\n * - `Date`\n * - number: timestamp\n * - string: numeric (e.g. \"1234\"), ISO and date strings in a format supported by\n *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\n *   Note: ISO strings without time return a date without timeoffset.\n *\n * Throws if unable to convert to a date.\n */\nfunction toDate(value) {\n    if (isDate(value)) {\n        return value;\n    }\n    if (typeof value === 'number' && !isNaN(value)) {\n        return new Date(value);\n    }\n    if (typeof value === 'string') {\n        value = value.trim();\n        var parsedNb = parseFloat(value);\n        // any string that only contains numbers, like \"1234\" but not like \"1234hello\"\n        if (!isNaN(value - parsedNb)) {\n            return new Date(parsedNb);\n        }\n        if (/^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            /* For ISO Strings without time the day, month and year must be extracted from the ISO String\n            before Date creation to avoid time offset and errors in the new Date.\n            If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n            date, some browsers (e.g. IE 9) will throw an invalid Date error.\n            If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n            is applied.\n            Note: ISO months are 0 for January, 1 for February, ... */\n            var _a = __read(value.split('-').map(function (val) { return +val; }), 3), y = _a[0], m = _a[1], d = _a[2];\n            return new Date(y, m - 1, d);\n        }\n        var match = void 0;\n        if (match = value.match(ISO8601_DATE_REGEX)) {\n            return isoStringToDate(match);\n        }\n    }\n    var date = new Date(value);\n    if (!isDate(date)) {\n        throw new Error(\"Unable to convert \\\"\" + value + \"\\\" into a date\");\n    }\n    return date;\n}\n/**\n * Converts a date in ISO8601 to a Date.\n * Used instead of `Date.parse` because of browser discrepancies.\n */\nfunction isoStringToDate(match) {\n    var date = new Date(0);\n    var tzHour = 0;\n    var tzMin = 0;\n    // match[8] means that the string contains \"Z\" (UTC) or a timezone like \"+01:00\" or \"+0100\"\n    var dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n    var timeSetter = match[8] ? date.setUTCHours : date.setHours;\n    // if there is a timezone defined like \"+01:00\" or \"+0100\"\n    if (match[9]) {\n        tzHour = Number(match[9] + match[10]);\n        tzMin = Number(match[9] + match[11]);\n    }\n    dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));\n    var h = Number(match[4] || 0) - tzHour;\n    var m = Number(match[5] || 0) - tzMin;\n    var s = Number(match[6] || 0);\n    var ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n    timeSetter.call(date, h, m, s, ms);\n    return date;\n}\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\nvar MAX_DIGITS = 22;\nvar DECIMAL_SEP = '.';\nvar ZERO_CHAR = '0';\nvar PATTERN_SEP = ';';\nvar GROUP_SEP = ',';\nvar DIGIT_CHAR = '#';\nvar CURRENCY_CHAR = 'Â¤';\nvar PERCENT_CHAR = '%';\n/**\n * Transforms a number to a locale string based on a style and a format.\n */\nfunction formatNumberToLocaleString(value, pattern, locale, groupSymbol, decimalSymbol, digitsInfo, isPercent) {\n    if (isPercent === void 0) { isPercent = false; }\n    var formattedText = '';\n    var isZero = false;\n    if (!isFinite(value)) {\n        formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);\n    }\n    else {\n        var parsedNumber = parseNumber(value);\n        if (isPercent) {\n            parsedNumber = toPercent(parsedNumber);\n        }\n        var minInt = pattern.minInt;\n        var minFraction = pattern.minFrac;\n        var maxFraction = pattern.maxFrac;\n        if (digitsInfo) {\n            var parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n            if (parts === null) {\n                throw new Error(digitsInfo + \" is not a valid digit info\");\n            }\n            var minIntPart = parts[1];\n            var minFractionPart = parts[3];\n            var maxFractionPart = parts[5];\n            if (minIntPart != null) {\n                minInt = parseIntAutoRadix(minIntPart);\n            }\n            if (minFractionPart != null) {\n                minFraction = parseIntAutoRadix(minFractionPart);\n            }\n            if (maxFractionPart != null) {\n                maxFraction = parseIntAutoRadix(maxFractionPart);\n            }\n            else if (minFractionPart != null && minFraction > maxFraction) {\n                maxFraction = minFraction;\n            }\n        }\n        roundNumber(parsedNumber, minFraction, maxFraction);\n        var digits = parsedNumber.digits;\n        var integerLen = parsedNumber.integerLen;\n        var exponent = parsedNumber.exponent;\n        var decimals = [];\n        isZero = digits.every(function (d) { return !d; });\n        // pad zeros for small numbers\n        for (; integerLen < minInt; integerLen++) {\n            digits.unshift(0);\n        }\n        // pad zeros for small numbers\n        for (; integerLen < 0; integerLen++) {\n            digits.unshift(0);\n        }\n        // extract decimals digits\n        if (integerLen > 0) {\n            decimals = digits.splice(integerLen, digits.length);\n        }\n        else {\n            decimals = digits;\n            digits = [0];\n        }\n        // format the integer digits with grouping separators\n        var groups = [];\n        if (digits.length >= pattern.lgSize) {\n            groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));\n        }\n        while (digits.length > pattern.gSize) {\n            groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));\n        }\n        if (digits.length) {\n            groups.unshift(digits.join(''));\n        }\n        formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol));\n        // append the decimal digits\n        if (decimals.length) {\n            formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');\n        }\n        if (exponent) {\n            formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;\n        }\n    }\n    if (value < 0 && !isZero) {\n        formattedText = pattern.negPre + formattedText + pattern.negSuf;\n    }\n    else {\n        formattedText = pattern.posPre + formattedText + pattern.posSuf;\n    }\n    return formattedText;\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as currency using locale rules.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param currency A string containing the currency symbol or its name,\n * such as \"$\" or \"Canadian Dollar\". Used in output string, but does not affect the operation\n * of the function.\n * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)\n * currency code to use in the result string, such as `USD` for the US dollar and `EUR` for the euro.\n * @param digitInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted currency value.\n *\n * @see `formatNumber()`\n * @see `DecimalPipe`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction formatCurrency(value, locale, currency, currencyCode, digitsInfo) {\n    var format = getLocaleNumberFormat(locale, NumberFormatStyle.Currency);\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    pattern.minFrac = getNumberOfCurrencyDigits(currencyCode);\n    pattern.maxFrac = pattern.minFrac;\n    var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.CurrencyGroup, NumberSymbol.CurrencyDecimal, digitsInfo);\n    return res\n        .replace(CURRENCY_CHAR, currency)\n        // if we have 2 time the currency character, the second one is ignored\n        .replace(CURRENCY_CHAR, '');\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as a percentage according to locale rules.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param digitInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted percentage value.\n *\n * @see `formatNumber()`\n * @see `DecimalPipe`\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n * @publicApi\n *\n */\nfunction formatPercent(value, locale, digitsInfo) {\n    var format = getLocaleNumberFormat(locale, NumberFormatStyle.Percent);\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    var res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo, true);\n    return res.replace(new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as text, with group sizing, separator, and other\n * parameters based on the locale.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param digitInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted text string.\n * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n *\n * @publicApi\n */\nfunction formatNumber(value, locale, digitsInfo) {\n    var format = getLocaleNumberFormat(locale, NumberFormatStyle.Decimal);\n    var pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    return formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo);\n}\nfunction parseNumberFormat(format, minusSign) {\n    if (minusSign === void 0) { minusSign = '-'; }\n    var p = {\n        minInt: 1,\n        minFrac: 0,\n        maxFrac: 0,\n        posPre: '',\n        posSuf: '',\n        negPre: '',\n        negSuf: '',\n        gSize: 0,\n        lgSize: 0\n    };\n    var patternParts = format.split(PATTERN_SEP);\n    var positive = patternParts[0];\n    var negative = patternParts[1];\n    var positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ?\n        positive.split(DECIMAL_SEP) :\n        [\n            positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1),\n            positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)\n        ], integer = positiveParts[0], fraction = positiveParts[1] || '';\n    p.posPre = integer.substr(0, integer.indexOf(DIGIT_CHAR));\n    for (var i = 0; i < fraction.length; i++) {\n        var ch = fraction.charAt(i);\n        if (ch === ZERO_CHAR) {\n            p.minFrac = p.maxFrac = i + 1;\n        }\n        else if (ch === DIGIT_CHAR) {\n            p.maxFrac = i + 1;\n        }\n        else {\n            p.posSuf += ch;\n        }\n    }\n    var groups = integer.split(GROUP_SEP);\n    p.gSize = groups[1] ? groups[1].length : 0;\n    p.lgSize = (groups[2] || groups[1]) ? (groups[2] || groups[1]).length : 0;\n    if (negative) {\n        var trunkLen = positive.length - p.posPre.length - p.posSuf.length, pos = negative.indexOf(DIGIT_CHAR);\n        p.negPre = negative.substr(0, pos).replace(/'/g, '');\n        p.negSuf = negative.substr(pos + trunkLen).replace(/'/g, '');\n    }\n    else {\n        p.negPre = minusSign + p.posPre;\n        p.negSuf = p.posSuf;\n    }\n    return p;\n}\n// Transforms a parsed number into a percentage by multiplying it by 100\nfunction toPercent(parsedNumber) {\n    // if the number is 0, don't do anything\n    if (parsedNumber.digits[0] === 0) {\n        return parsedNumber;\n    }\n    // Getting the current number of decimals\n    var fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;\n    if (parsedNumber.exponent) {\n        parsedNumber.exponent += 2;\n    }\n    else {\n        if (fractionLen === 0) {\n            parsedNumber.digits.push(0, 0);\n        }\n        else if (fractionLen === 1) {\n            parsedNumber.digits.push(0);\n        }\n        parsedNumber.integerLen += 2;\n    }\n    return parsedNumber;\n}\n/**\n * Parses a number.\n * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/\n */\nfunction parseNumber(num) {\n    var numStr = Math.abs(num) + '';\n    var exponent = 0, digits, integerLen;\n    var i, j, zeros;\n    // Decimal point?\n    if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {\n        numStr = numStr.replace(DECIMAL_SEP, '');\n    }\n    // Exponential form?\n    if ((i = numStr.search(/e/i)) > 0) {\n        // Work out the exponent.\n        if (integerLen < 0)\n            integerLen = i;\n        integerLen += +numStr.slice(i + 1);\n        numStr = numStr.substring(0, i);\n    }\n    else if (integerLen < 0) {\n        // There was no decimal point or exponent so it is an integer.\n        integerLen = numStr.length;\n    }\n    // Count the number of leading zeros.\n    for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) { /* empty */\n    }\n    if (i === (zeros = numStr.length)) {\n        // The digits are all zero.\n        digits = [0];\n        integerLen = 1;\n    }\n    else {\n        // Count the number of trailing zeros\n        zeros--;\n        while (numStr.charAt(zeros) === ZERO_CHAR)\n            zeros--;\n        // Trailing zeros are insignificant so ignore them\n        integerLen -= i;\n        digits = [];\n        // Convert string to array of digits without leading/trailing zeros.\n        for (j = 0; i <= zeros; i++, j++) {\n            digits[j] = Number(numStr.charAt(i));\n        }\n    }\n    // If the number overflows the maximum allowed digits then use an exponent.\n    if (integerLen > MAX_DIGITS) {\n        digits = digits.splice(0, MAX_DIGITS - 1);\n        exponent = integerLen - 1;\n        integerLen = 1;\n    }\n    return { digits: digits, exponent: exponent, integerLen: integerLen };\n}\n/**\n * Round the parsed number to the specified number of decimal places\n * This function changes the parsedNumber in-place\n */\nfunction roundNumber(parsedNumber, minFrac, maxFrac) {\n    if (minFrac > maxFrac) {\n        throw new Error(\"The minimum number of digits after fraction (\" + minFrac + \") is higher than the maximum (\" + maxFrac + \").\");\n    }\n    var digits = parsedNumber.digits;\n    var fractionLen = digits.length - parsedNumber.integerLen;\n    var fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac);\n    // The index of the digit to where rounding is to occur\n    var roundAt = fractionSize + parsedNumber.integerLen;\n    var digit = digits[roundAt];\n    if (roundAt > 0) {\n        // Drop fractional digits beyond `roundAt`\n        digits.splice(Math.max(parsedNumber.integerLen, roundAt));\n        // Set non-fractional digits beyond `roundAt` to 0\n        for (var j = roundAt; j < digits.length; j++) {\n            digits[j] = 0;\n        }\n    }\n    else {\n        // We rounded to zero so reset the parsedNumber\n        fractionLen = Math.max(0, fractionLen);\n        parsedNumber.integerLen = 1;\n        digits.length = Math.max(1, roundAt = fractionSize + 1);\n        digits[0] = 0;\n        for (var i = 1; i < roundAt; i++)\n            digits[i] = 0;\n    }\n    if (digit >= 5) {\n        if (roundAt - 1 < 0) {\n            for (var k = 0; k > roundAt; k--) {\n                digits.unshift(0);\n                parsedNumber.integerLen++;\n            }\n            digits.unshift(1);\n            parsedNumber.integerLen++;\n        }\n        else {\n            digits[roundAt - 1]++;\n        }\n    }\n    // Pad out with zeros to get the required fraction length\n    for (; fractionLen < Math.max(0, fractionSize); fractionLen++)\n        digits.push(0);\n    var dropTrailingZeros = fractionSize !== 0;\n    // Minimal length = nb of decimals required + current nb of integers\n    // Any number besides that is optional and can be removed if it's a trailing 0\n    var minLen = minFrac + parsedNumber.integerLen;\n    // Do any carrying, e.g. a digit was rounded up to 10\n    var carry = digits.reduceRight(function (carry, d, i, digits) {\n        d = d + carry;\n        digits[i] = d < 10 ? d : d - 10; // d % 10\n        if (dropTrailingZeros) {\n            // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)\n            if (digits[i] === 0 && i >= minLen) {\n                digits.pop();\n            }\n            else {\n                dropTrailingZeros = false;\n            }\n        }\n        return d >= 10 ? 1 : 0; // Math.floor(d / 10);\n    }, 0);\n    if (carry) {\n        digits.unshift(carry);\n        parsedNumber.integerLen++;\n    }\n}\nfunction parseIntAutoRadix(text) {\n    var result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated from v5\n */\nvar DEPRECATED_PLURAL_FN = new InjectionToken('UseV4Plurals');\n/**\n * @publicApi\n */\nvar NgLocalization = /** @class */ (function () {\n    function NgLocalization() {\n    }\n    return NgLocalization;\n}());\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n */\nfunction getPluralCategory(value, cases, ngLocalization, locale) {\n    var key = \"=\" + value;\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    key = ngLocalization.getPluralCategory(value, locale);\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    if (cases.indexOf('other') > -1) {\n        return 'other';\n    }\n    throw new Error(\"No plural message found for value \\\"\" + value + \"\\\"\");\n}\n/**\n * Returns the plural case based on the locale\n *\n * @publicApi\n */\nvar NgLocaleLocalization = /** @class */ (function (_super) {\n    __extends(NgLocaleLocalization, _super);\n    function NgLocaleLocalization(locale, \n    /** @deprecated from v5 */\n    deprecatedPluralFn) {\n        var _this = _super.call(this) || this;\n        _this.locale = locale;\n        _this.deprecatedPluralFn = deprecatedPluralFn;\n        return _this;\n    }\n    NgLocaleLocalization.prototype.getPluralCategory = function (value, locale) {\n        var plural = this.deprecatedPluralFn ? this.deprecatedPluralFn(locale || this.locale, value) :\n            getLocalePluralCase(locale || this.locale)(value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    };\n    NgLocaleLocalization = __decorate([\n        Injectable(),\n        __param(0, Inject(LOCALE_ID)),\n        __param(1, Optional()), __param(1, Inject(DEPRECATED_PLURAL_FN)),\n        __metadata(\"design:paramtypes\", [String, Object])\n    ], NgLocaleLocalization);\n    return NgLocaleLocalization;\n}(NgLocalization));\n/**\n * Returns the plural case based on the locale\n *\n * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n * @publicApi\n */\nfunction getPluralCase(locale, nLike) {\n    // TODO(vicb): lazy compute\n    if (typeof nLike === 'string') {\n        nLike = parseInt(nLike, 10);\n    }\n    var n = nLike;\n    var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n    var i = Math.floor(Math.abs(n));\n    var v = nDecimal.length;\n    var f = parseInt(nDecimal, 10);\n    var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n    var lang = locale.split('-')[0].toLowerCase();\n    switch (lang) {\n        case 'af':\n        case 'asa':\n        case 'az':\n        case 'bem':\n        case 'bez':\n        case 'bg':\n        case 'brx':\n        case 'ce':\n        case 'cgg':\n        case 'chr':\n        case 'ckb':\n        case 'ee':\n        case 'el':\n        case 'eo':\n        case 'es':\n        case 'eu':\n        case 'fo':\n        case 'fur':\n        case 'gsw':\n        case 'ha':\n        case 'haw':\n        case 'hu':\n        case 'jgo':\n        case 'jmc':\n        case 'ka':\n        case 'kk':\n        case 'kkj':\n        case 'kl':\n        case 'ks':\n        case 'ksb':\n        case 'ky':\n        case 'lb':\n        case 'lg':\n        case 'mas':\n        case 'mgo':\n        case 'ml':\n        case 'mn':\n        case 'nb':\n        case 'nd':\n        case 'ne':\n        case 'nn':\n        case 'nnh':\n        case 'nyn':\n        case 'om':\n        case 'or':\n        case 'os':\n        case 'ps':\n        case 'rm':\n        case 'rof':\n        case 'rwk':\n        case 'saq':\n        case 'seh':\n        case 'sn':\n        case 'so':\n        case 'sq':\n        case 'ta':\n        case 'te':\n        case 'teo':\n        case 'tk':\n        case 'tr':\n        case 'ug':\n        case 'uz':\n        case 'vo':\n        case 'vun':\n        case 'wae':\n        case 'xog':\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ak':\n        case 'ln':\n        case 'mg':\n        case 'pa':\n        case 'ti':\n            if (n === Math.floor(n) && n >= 0 && n <= 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'am':\n        case 'as':\n        case 'bn':\n        case 'fa':\n        case 'gu':\n        case 'hi':\n        case 'kn':\n        case 'mr':\n        case 'zu':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ar':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                return Plural.Many;\n            return Plural.Other;\n        case 'ast':\n        case 'ca':\n        case 'de':\n        case 'en':\n        case 'et':\n        case 'fi':\n        case 'fy':\n        case 'gl':\n        case 'it':\n        case 'nl':\n        case 'sv':\n        case 'sw':\n        case 'ur':\n        case 'yi':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            return Plural.Other;\n        case 'be':\n            if (n % 10 === 1 && !(n % 100 === 11))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                !(n % 100 >= 12 && n % 100 <= 14))\n                return Plural.Few;\n            if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'br':\n            if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                return Plural.One;\n            if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                return Plural.Two;\n            if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                    n % 100 >= 90 && n % 100 <= 99))\n                return Plural.Few;\n            if (!(n === 0) && n % 1e6 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'bs':\n        case 'hr':\n        case 'sr':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14) ||\n                f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                    !(f % 100 >= 12 && f % 100 <= 14))\n                return Plural.Few;\n            return Plural.Other;\n        case 'cs':\n        case 'sk':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'cy':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === 3)\n                return Plural.Few;\n            if (n === 6)\n                return Plural.Many;\n            return Plural.Other;\n        case 'da':\n            if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                return Plural.One;\n            return Plural.Other;\n        case 'dsb':\n        case 'hsb':\n            if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ff':\n        case 'fr':\n        case 'hy':\n        case 'kab':\n            if (i === 0 || i === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'fil':\n            if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                return Plural.One;\n            return Plural.Other;\n        case 'ga':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === Math.floor(n) && n >= 3 && n <= 6)\n                return Plural.Few;\n            if (n === Math.floor(n) && n >= 7 && n <= 10)\n                return Plural.Many;\n            return Plural.Other;\n        case 'gd':\n            if (n === 1 || n === 11)\n                return Plural.One;\n            if (n === 2 || n === 12)\n                return Plural.Two;\n            if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                return Plural.Few;\n            return Plural.Other;\n        case 'gv':\n            if (v === 0 && i % 10 === 1)\n                return Plural.One;\n            if (v === 0 && i % 10 === 2)\n                return Plural.Two;\n            if (v === 0 &&\n                (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'he':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === 2 && v === 0)\n                return Plural.Two;\n            if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'is':\n            if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'ksh':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'kw':\n        case 'naq':\n        case 'se':\n        case 'smn':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            return Plural.Other;\n        case 'lag':\n            if (n === 0)\n                return Plural.Zero;\n            if ((i === 0 || i === 1) && !(n === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'lt':\n            if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.Few;\n            if (!(f === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'lv':\n        case 'prg':\n            if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                return Plural.Zero;\n            if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                !(v === 2) && f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mk':\n            if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mt':\n            if (n === 1)\n                return Plural.One;\n            if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pl':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pt':\n            if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                return Plural.One;\n            return Plural.Other;\n        case 'ro':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (!(v === 0) || n === 0 ||\n                !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ru':\n        case 'uk':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && i % 10 === 0 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'shi':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            if (n === Math.floor(n) && n >= 2 && n <= 10)\n                return Plural.Few;\n            return Plural.Other;\n        case 'si':\n            if (n === 0 || n === 1 || i === 0 && f === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'sl':\n            if (v === 0 && i % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                return Plural.Few;\n            return Plural.Other;\n        case 'tzm':\n            if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                return Plural.One;\n            return Plural.Other;\n        // When there is no specification, the default is always \"other\"\n        // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n        // > other (requiredâgeneral plural form â also used if the language only has a single form)\n        default:\n            return Plural.Other;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction parseCookieValue(cookieStr, name) {\n    var e_1, _a;\n    name = encodeURIComponent(name);\n    try {\n        for (var _b = __values(cookieStr.split(';')), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var cookie = _c.value;\n            var eqIndex = cookie.indexOf('=');\n            var _d = __read(eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)], 2), cookieName = _d[0], cookieValue = _d[1];\n            if (cookieName.trim() === name) {\n                return decodeURIComponent(cookieValue);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n *\n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n *\n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n *\n * @description\n *\n * Adds and removes CSS classes on an HTML element.\n *\n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n *\n * @publicApi\n */\nvar NgClass = /** @class */ (function () {\n    function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n        this._iterableDiffers = _iterableDiffers;\n        this._keyValueDiffers = _keyValueDiffers;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n        this._initialClasses = [];\n    }\n    Object.defineProperty(NgClass.prototype, \"klass\", {\n        set: function (value) {\n            this._removeClasses(this._initialClasses);\n            this._initialClasses = typeof value === 'string' ? value.split(/\\s+/) : [];\n            this._applyClasses(this._initialClasses);\n            this._applyClasses(this._rawClass);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgClass.prototype, \"ngClass\", {\n        set: function (value) {\n            this._removeClasses(this._rawClass);\n            this._applyClasses(this._initialClasses);\n            this._iterableDiffer = null;\n            this._keyValueDiffer = null;\n            this._rawClass = typeof value === 'string' ? value.split(/\\s+/) : value;\n            if (this._rawClass) {\n                if (ÉµisListLikeIterable(this._rawClass)) {\n                    this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n                }\n                else {\n                    this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgClass.prototype.ngDoCheck = function () {\n        if (this._iterableDiffer) {\n            var iterableChanges = this._iterableDiffer.diff(this._rawClass);\n            if (iterableChanges) {\n                this._applyIterableChanges(iterableChanges);\n            }\n        }\n        else if (this._keyValueDiffer) {\n            var keyValueChanges = this._keyValueDiffer.diff(this._rawClass);\n            if (keyValueChanges) {\n                this._applyKeyValueChanges(keyValueChanges);\n            }\n        }\n    };\n    NgClass.prototype._applyKeyValueChanges = function (changes) {\n        var _this = this;\n        changes.forEachAddedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n        changes.forEachChangedItem(function (record) { return _this._toggleClass(record.key, record.currentValue); });\n        changes.forEachRemovedItem(function (record) {\n            if (record.previousValue) {\n                _this._toggleClass(record.key, false);\n            }\n        });\n    };\n    NgClass.prototype._applyIterableChanges = function (changes) {\n        var _this = this;\n        changes.forEachAddedItem(function (record) {\n            if (typeof record.item === 'string') {\n                _this._toggleClass(record.item, true);\n            }\n            else {\n                throw new Error(\"NgClass can only toggle CSS classes expressed as strings, got \" + Éµstringify(record.item));\n            }\n        });\n        changes.forEachRemovedItem(function (record) { return _this._toggleClass(record.item, false); });\n    };\n    /**\n     * Applies a collection of CSS classes to the DOM element.\n     *\n     * For argument of type Set and Array CSS class names contained in those collections are always\n     * added.\n     * For argument of type Map CSS class name in the map's key is toggled based on the value (added\n     * for truthy and removed for falsy).\n     */\n    NgClass.prototype._applyClasses = function (rawClassVal) {\n        var _this = this;\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                rawClassVal.forEach(function (klass) { return _this._toggleClass(klass, true); });\n            }\n            else {\n                Object.keys(rawClassVal).forEach(function (klass) { return _this._toggleClass(klass, !!rawClassVal[klass]); });\n            }\n        }\n    };\n    /**\n     * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup\n     * purposes.\n     */\n    NgClass.prototype._removeClasses = function (rawClassVal) {\n        var _this = this;\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                rawClassVal.forEach(function (klass) { return _this._toggleClass(klass, false); });\n            }\n            else {\n                Object.keys(rawClassVal).forEach(function (klass) { return _this._toggleClass(klass, false); });\n            }\n        }\n    };\n    NgClass.prototype._toggleClass = function (klass, enabled) {\n        var _this = this;\n        klass = klass.trim();\n        if (klass) {\n            klass.split(/\\s+/g).forEach(function (klass) {\n                if (enabled) {\n                    _this._renderer.addClass(_this._ngEl.nativeElement, klass);\n                }\n                else {\n                    _this._renderer.removeClass(_this._ngEl.nativeElement, klass);\n                }\n            });\n        }\n    };\n    __decorate([\n        Input('class'),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], NgClass.prototype, \"klass\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgClass.prototype, \"ngClass\", null);\n    NgClass = __decorate([\n        Directive({ selector: '[ngClass]' }),\n        __metadata(\"design:paramtypes\", [IterableDiffers, KeyValueDiffers,\n            ElementRef, Renderer2])\n    ], NgClass);\n    return NgClass;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Instantiates a single {@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n *\n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n *\n * @usageNotes\n *\n * ### Fine tune control\n *\n * You can control the component creation process by using the following optional attributes:\n *\n * * `ngComponentOutletInjector`: Optional custom {@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n *\n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n *\n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n *\n * ### Syntax\n *\n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n *\n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n *\n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n *\n * ### A simple example\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n *\n * A more complete example with additional options:\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n\n * A more complete example with ngModuleFactory:\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}\n *\n * @publicApi\n * @ngModule CommonModule\n */\nvar NgComponentOutlet = /** @class */ (function () {\n    function NgComponentOutlet(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._componentRef = null;\n        this._moduleRef = null;\n    }\n    NgComponentOutlet.prototype.ngOnChanges = function (changes) {\n        this._viewContainerRef.clear();\n        this._componentRef = null;\n        if (this.ngComponentOutlet) {\n            var elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n            if (changes['ngComponentOutletNgModuleFactory']) {\n                if (this._moduleRef)\n                    this._moduleRef.destroy();\n                if (this.ngComponentOutletNgModuleFactory) {\n                    var parentModule = elInjector.get(NgModuleRef);\n                    this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n                }\n                else {\n                    this._moduleRef = null;\n                }\n            }\n            var componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                elInjector.get(ComponentFactoryResolver);\n            var componentFactory = componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n            this._componentRef = this._viewContainerRef.createComponent(componentFactory, this._viewContainerRef.length, elInjector, this.ngComponentOutletContent);\n        }\n    };\n    NgComponentOutlet.prototype.ngOnDestroy = function () {\n        if (this._moduleRef)\n            this._moduleRef.destroy();\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Type)\n    ], NgComponentOutlet.prototype, \"ngComponentOutlet\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Injector)\n    ], NgComponentOutlet.prototype, \"ngComponentOutletInjector\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array)\n    ], NgComponentOutlet.prototype, \"ngComponentOutletContent\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", NgModuleFactory)\n    ], NgComponentOutlet.prototype, \"ngComponentOutletNgModuleFactory\", void 0);\n    NgComponentOutlet = __decorate([\n        Directive({ selector: '[ngComponentOutlet]' }),\n        __metadata(\"design:paramtypes\", [ViewContainerRef])\n    ], NgComponentOutlet);\n    return NgComponentOutlet;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar NgForOfContext = /** @class */ (function () {\n    function NgForOfContext($implicit, ngForOf, index, count) {\n        this.$implicit = $implicit;\n        this.ngForOf = ngForOf;\n        this.index = index;\n        this.count = count;\n    }\n    Object.defineProperty(NgForOfContext.prototype, \"first\", {\n        get: function () { return this.index === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"last\", {\n        get: function () { return this.index === this.count - 1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"even\", {\n        get: function () { return this.index % 2 === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOfContext.prototype, \"odd\", {\n        get: function () { return !this.even; },\n        enumerable: true,\n        configurable: true\n    });\n    return NgForOfContext;\n}());\n/**\n * A [structural directive](guide/structural-directives) that renders\n * a template for each item in a collection.\n * The directive is placed on an element, which becomes the parent\n * of the cloned templates.\n *\n * The `ngForOf` is generally used in the\n * [shorthand form](guide/structural-directives#the-asterisk--prefix) `*ngFor`.\n * In this form, the template to be rendered for each iteration is the content\n * of an anchor element containing the directive.\n *\n * The following example shows the shorthand syntax with some options,\n * contained in an `<li>` element.\n *\n * ```\n * <li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>\n * ```\n *\n * The shorthand form expands into a long form that uses the `ngForOf` selector\n * on an `<ng-template>` element.\n * The content of the `<ng-template>` element is the `<li>` element that held the\n * short-form directive.\n *\n * Here is the expanded version of the short-form example.\n *\n * ```\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n *\n * Angular automatically expands the shorthand syntax as it compiles the template.\n * The context for each embedded view is logically merged to the current component\n * context according to its lexical position.\n *\n * When using the shorthand syntax, Angular allows only [one structural directive\n * on an element](guide/structural-directives#one-structural-directive-per-host-element).\n * If you want to iterate conditionally, for example,\n * put the `*ngIf` on a container element that wraps the `*ngFor` element.\n * For futher discussion, see\n * [Structural Directives](guide/structural-directives#one-per-element).\n *\n * @usageNotes\n *\n * ### Local variables\n *\n * `NgForOf` provides exported values that can be aliased to local variables.\n * For example:\n *\n *  ```\n * <li *ngFor=\"let user of userObservable | async as users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n *\n * The following exported values can be aliased to local variables:\n *\n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n *\n * ### Change propagation\n *\n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n *\n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n *\n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls that are present, such as `<input>` elements that accept user input. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n * For more on animations, see [Transitions and Triggers](guide/transition-and-triggers).\n *\n * The identities of elements in the iterator can change while the data does not.\n * This can happen, for example, if the iterator is produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response produces objects with\n * different identities, and Angular must tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted).\n *\n * To avoid this expensive operation, you can customize the default tracking algorithm.\n * by supplying the `trackBy` option to `NgForOf`.\n * `trackBy` takes a function that has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n *\n * @see [Structural Directives](guide/structural-directives)\n * @ngModule CommonModule\n * @publicApi\n */\nvar NgForOf = /** @class */ (function () {\n    function NgForOf(_viewContainer, _template, _differs) {\n        this._viewContainer = _viewContainer;\n        this._template = _template;\n        this._differs = _differs;\n        this._ngForOfDirty = true;\n        this._differ = null;\n    }\n    Object.defineProperty(NgForOf.prototype, \"ngForOf\", {\n        set: function (ngForOf) {\n            this._ngForOf = ngForOf;\n            this._ngForOfDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOf.prototype, \"ngForTrackBy\", {\n        get: function () { return this._trackByFn; },\n        set: function (fn) {\n            if (isDevMode() && fn != null && typeof fn !== 'function') {\n                // TODO(vicb): use a log service once there is a public one available\n                if (console && console.warn) {\n                    console.warn(\"trackBy must be a function, but received \" + JSON.stringify(fn) + \". \" +\n                        \"See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.\");\n                }\n            }\n            this._trackByFn = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForOf.prototype, \"ngForTemplate\", {\n        set: function (value) {\n            // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n            // The current type is too restrictive; a template that just uses index, for example,\n            // should be acceptable.\n            if (value) {\n                this._template = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgForOf.prototype.ngDoCheck = function () {\n        if (this._ngForOfDirty) {\n            this._ngForOfDirty = false;\n            // React on ngForOf changes only once all inputs have been initialized\n            var value = this._ngForOf;\n            if (!this._differ && value) {\n                try {\n                    this._differ = this._differs.find(value).create(this.ngForTrackBy);\n                }\n                catch (_a) {\n                    throw new Error(\"Cannot find a differ supporting object '\" + value + \"' of type '\" + getTypeNameForDebugging(value) + \"'. NgFor only supports binding to Iterables such as Arrays.\");\n                }\n            }\n        }\n        if (this._differ) {\n            var changes = this._differ.diff(this._ngForOf);\n            if (changes)\n                this._applyChanges(changes);\n        }\n    };\n    NgForOf.prototype._applyChanges = function (changes) {\n        var _this = this;\n        var insertTuples = [];\n        changes.forEachOperation(function (item, adjustedPreviousIndex, currentIndex) {\n            if (item.previousIndex == null) {\n                var view = _this._viewContainer.createEmbeddedView(_this._template, new NgForOfContext(null, _this._ngForOf, -1, -1), currentIndex);\n                var tuple = new RecordViewTuple(item, view);\n                insertTuples.push(tuple);\n            }\n            else if (currentIndex == null) {\n                _this._viewContainer.remove(adjustedPreviousIndex);\n            }\n            else {\n                var view = _this._viewContainer.get(adjustedPreviousIndex);\n                _this._viewContainer.move(view, currentIndex);\n                var tuple = new RecordViewTuple(item, view);\n                insertTuples.push(tuple);\n            }\n        });\n        for (var i = 0; i < insertTuples.length; i++) {\n            this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n        }\n        for (var i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\n            var viewRef = this._viewContainer.get(i);\n            viewRef.context.index = i;\n            viewRef.context.count = ilen;\n            viewRef.context.ngForOf = this._ngForOf;\n        }\n        changes.forEachIdentityChange(function (record) {\n            var viewRef = _this._viewContainer.get(record.currentIndex);\n            viewRef.context.$implicit = record.item;\n        });\n    };\n    NgForOf.prototype._perViewChange = function (view, record) {\n        view.context.$implicit = record.item;\n    };\n    /**\n     * Asserts the correct type of the context for the template that `NgForOf` will render.\n     *\n     * The presence of this method is a signal to the Ivy template type-check compiler that the\n     * `NgForOf` structural directive renders its template with a specific context type.\n     */\n    NgForOf.ngTemplateContextGuard = function (dir, ctx) {\n        return true;\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgForOf.prototype, \"ngForOf\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function])\n    ], NgForOf.prototype, \"ngForTrackBy\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", TemplateRef),\n        __metadata(\"design:paramtypes\", [TemplateRef])\n    ], NgForOf.prototype, \"ngForTemplate\", null);\n    NgForOf = __decorate([\n        Directive({ selector: '[ngFor][ngForOf]' }),\n        __metadata(\"design:paramtypes\", [ViewContainerRef, TemplateRef,\n            IterableDiffers])\n    ], NgForOf);\n    return NgForOf;\n}());\nvar RecordViewTuple = /** @class */ (function () {\n    function RecordViewTuple(record, view) {\n        this.record = record;\n        this.view = view;\n    }\n    return RecordViewTuple;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A structural directive that conditionally includes a template based on the value of\n * an expression coerced to Boolean.\n * When the expression evaluates to true, Angular renders the template\n * provided in a `then` clause, and when  false or null,\n * Angular renders the template provided in an optional `else` clause. The default\n * template for the `else` clause is blank.\n *\n * A [shorthand form](guide/structural-directives#the-asterisk--prefix) of the directive,\n * `*ngIf=\"condition\"`, is generally used, provided\n * as an attribute of the anchor element for the inserted template.\n * Angular expands this into a more explicit version, in which the anchor element\n * is contained in an `<ng-template>` element.\n *\n * Simple form with shorthand syntax:\n *\n * ```\n * <div *ngIf=\"condition\">Content to render when condition is true.</div>\n * ```\n *\n * Simple form with expanded syntax:\n *\n * ```\n * <ng-template [ngIf]=\"condition\"><div>Content to render when condition is\n * true.</div></ng-template>\n * ```\n *\n * Form with an \"else\" block:\n *\n * ```\n * <div *ngIf=\"condition; else elseBlock\">Content to render when condition is true.</div>\n * <ng-template #elseBlock>Content to render when condition is false.</ng-template>\n * ```\n *\n * Shorthand form with \"then\" and \"else\" blocks:\n *\n * ```\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>Content to render when condition is true.</ng-template>\n * <ng-template #elseBlock>Content to render when condition is false.</ng-template>\n * ```\n *\n * Form with storing the value locally:\n *\n * ```\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>Content to render when value is null.</ng-template>\n * ```\n *\n * @usageNotes\n *\n * The `*ngIf` directive is most commonly used to conditionally show an inline template,\n * as seen in the following  example.\n * The default `else` template is blank.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfSimple'}\n *\n * ### Showing an alternative template using `else`\n *\n * To display a template when `expression` evaluates to false, use an `else` template\n * binding as shown in the following example.\n * The `else` binding points to an `<ng-template>`  element labeled `#elseBlock`.\n * The template can be defined anywhere in the component view, but is typically placed right after\n * `ngIf` for readability.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfElse'}\n *\n * ### Using an external `then` template\n *\n * In the previous example, the then-clause template is specified inline, as the content of the\n * tag that contains the `ngIf` directive. You can also specify a template that is defined\n * externally, by referencing a labeled `<ng-template>` element. When you do this, you can\n * change which template to use at runtime, as shown in the following example.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n *\n * ### Storing a conditional result in a variable\n *\n * You might want to show a set of properties from the same object. If you are waiting\n * for asynchronous data, the object can be undefined.\n * In this case, you can use `ngIf` and store the result of the condition in a local\n * variable as shown in the the following example.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfAs'}\n *\n * This code uses only one `AsyncPipe`, so only one subscription is created.\n * The conditional statement stores the result of `userStream|async` in the local variable `user`.\n * You can then bind the local `user` repeatedly.\n *\n * The conditional displays the data only if `userStream` returns a value,\n * so you don't need to use the\n * [safe-navigation-operator](guide/template-syntax#safe-navigation-operator) (`?.`)\n * to guard against null values when accessing properties.\n * You can display an alternative template while waiting for the data.\n *\n * ### Shorthand syntax\n *\n * The shorthand syntax `*ngIf` expands into two separate template specifications\n * for the \"then\" and \"else\" clauses. For example, consider the following shorthand statement,\n * that is meant to show a loading page while waiting for data to be loaded.\n *\n * ```\n * <div class=\"hero-list\" *ngIf=\"heroes else loading\">\n *  ...\n * </div>\n *\n * <ng-template #loading>\n *  <div>Loading...</div>\n * </ng-template>\n * ```\n *\n * You can see that the \"else\" clause references the `<ng-template>`\n * with the `#loading` label, and the template for the \"then\" clause\n * is provided as the content of the anchor element.\n *\n * However, when Angular expands the shorthand syntax, it creates\n * another `<ng-template>` tag, with `ngIf` and `ngIfElse` directives.\n * The anchor element containing the template for the \"then\" clause becomes\n * the content of this unlabeled `<ng-template>` tag.\n *\n * ```\n * <ng-template [ngIf]=\"hero-list\" [ngIfElse]=\"loading\">\n *  <div class=\"hero-list\">\n *   ...\n *  </div>\n * </ng-template>\n *\n * <ng-template #loading>\n *  <div>Loading...</div>\n * </ng-template>\n * ```\n *\n * The presence of the implicit template object has implications for the nesting of\n * structural directives. For more on this subject, see\n * [Structural Directives](https://angular.io/guide/structural-directives#one-per-element).\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar NgIf = /** @class */ (function () {\n    function NgIf(_viewContainer, templateRef) {\n        this._viewContainer = _viewContainer;\n        this._context = new NgIfContext();\n        this._thenTemplateRef = null;\n        this._elseTemplateRef = null;\n        this._thenViewRef = null;\n        this._elseViewRef = null;\n        this._thenTemplateRef = templateRef;\n    }\n    Object.defineProperty(NgIf.prototype, \"ngIf\", {\n        set: function (condition) {\n            this._context.$implicit = this._context.ngIf = condition;\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgIf.prototype, \"ngIfThen\", {\n        set: function (templateRef) {\n            assertTemplate('ngIfThen', templateRef);\n            this._thenTemplateRef = templateRef;\n            this._thenViewRef = null; // clear previous view if any.\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgIf.prototype, \"ngIfElse\", {\n        set: function (templateRef) {\n            assertTemplate('ngIfElse', templateRef);\n            this._elseTemplateRef = templateRef;\n            this._elseViewRef = null; // clear previous view if any.\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgIf.prototype._updateView = function () {\n        if (this._context.$implicit) {\n            if (!this._thenViewRef) {\n                this._viewContainer.clear();\n                this._elseViewRef = null;\n                if (this._thenTemplateRef) {\n                    this._thenViewRef =\n                        this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n                }\n            }\n        }\n        else {\n            if (!this._elseViewRef) {\n                this._viewContainer.clear();\n                this._thenViewRef = null;\n                if (this._elseTemplateRef) {\n                    this._elseViewRef =\n                        this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n                }\n            }\n        }\n    };\n    /**\n     * Assert the correct type of the expression bound to the `ngIf` input within the template.\n     *\n     * The presence of this method is a signal to the Ivy template type check compiler that when the\n     * `NgIf` structural directive renders its template, the type of the expression bound to `ngIf`\n     * should be narrowed in some way. For `NgIf`, it is narrowed to be non-null, which allows the\n     * strictNullChecks feature of TypeScript to work with `NgIf`.\n     */\n    NgIf.ngTemplateGuard_ngIf = function (dir, expr) { return true; };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgIf.prototype, \"ngIf\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgIf.prototype, \"ngIfThen\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgIf.prototype, \"ngIfElse\", null);\n    NgIf = __decorate([\n        Directive({ selector: '[ngIf]' }),\n        __metadata(\"design:paramtypes\", [ViewContainerRef, TemplateRef])\n    ], NgIf);\n    return NgIf;\n}());\n/**\n * @publicApi\n */\nvar NgIfContext = /** @class */ (function () {\n    function NgIfContext() {\n        this.$implicit = null;\n        this.ngIf = null;\n    }\n    return NgIfContext;\n}());\nfunction assertTemplate(property, templateRef) {\n    var isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);\n    if (!isTemplateRefOrNull) {\n        throw new Error(property + \" must be a TemplateRef, but received '\" + Éµstringify(templateRef) + \"'.\");\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SwitchView = /** @class */ (function () {\n    function SwitchView(_viewContainerRef, _templateRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._templateRef = _templateRef;\n        this._created = false;\n    }\n    SwitchView.prototype.create = function () {\n        this._created = true;\n        this._viewContainerRef.createEmbeddedView(this._templateRef);\n    };\n    SwitchView.prototype.destroy = function () {\n        this._created = false;\n        this._viewContainerRef.clear();\n    };\n    SwitchView.prototype.enforceState = function (created) {\n        if (created && !this._created) {\n            this.create();\n        }\n        else if (!created && this._created) {\n            this.destroy();\n        }\n    };\n    return SwitchView;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description A structural directive that adds or removes templates (displaying or hiding views)\n * when the next match expression matches the switch expression.\n *\n * The `[ngSwitch]` directive on a container specifies an expression to match against.\n * The expressions to match are provided by `ngSwitchCase` directives on views within the container.\n * - Every view that matches is rendered.\n * - If there are no matches, a view with the `ngSwitchDefault` directive is rendered.\n * - Elements within the `[NgSwitch]` statement but outside of any `NgSwitchCase`\n * or `ngSwitchDefault` directive are preserved at the location.\n *\n * @usageNotes\n * Define a container element for the directive, and specify the switch expression\n * to match against as an attribute:\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n * ```\n *\n * Within the container, `*ngSwitchCase` statements specify the match expressions\n * as attributes. Include `*ngSwitchDefault` as the final case.\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *    <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * ...\n *    <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * ### Usage Examples\n *\n * The following example shows how to use more than one case to display the same view:\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <!-- the same view can be shown in more than one case -->\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *   <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *   <!--default case when there are no matches -->\n *   <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * The following example shows how cases can be nested:\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n *\n * @publicApi\n * @see `NgSwitchCase`\n * @see `NgSwitchDefault`\n * @see [Stuctural Directives](guide/structural-directives)\n *\n */\nvar NgSwitch = /** @class */ (function () {\n    function NgSwitch() {\n        this._defaultUsed = false;\n        this._caseCount = 0;\n        this._lastCaseCheckIndex = 0;\n        this._lastCasesMatched = false;\n    }\n    Object.defineProperty(NgSwitch.prototype, \"ngSwitch\", {\n        set: function (newValue) {\n            this._ngSwitch = newValue;\n            if (this._caseCount === 0) {\n                this._updateDefaultCases(true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    NgSwitch.prototype._addCase = function () { return this._caseCount++; };\n    /** @internal */\n    NgSwitch.prototype._addDefault = function (view) {\n        if (!this._defaultViews) {\n            this._defaultViews = [];\n        }\n        this._defaultViews.push(view);\n    };\n    /** @internal */\n    NgSwitch.prototype._matchCase = function (value) {\n        var matched = value == this._ngSwitch;\n        this._lastCasesMatched = this._lastCasesMatched || matched;\n        this._lastCaseCheckIndex++;\n        if (this._lastCaseCheckIndex === this._caseCount) {\n            this._updateDefaultCases(!this._lastCasesMatched);\n            this._lastCaseCheckIndex = 0;\n            this._lastCasesMatched = false;\n        }\n        return matched;\n    };\n    NgSwitch.prototype._updateDefaultCases = function (useDefault) {\n        if (this._defaultViews && useDefault !== this._defaultUsed) {\n            this._defaultUsed = useDefault;\n            for (var i = 0; i < this._defaultViews.length; i++) {\n                var defaultView = this._defaultViews[i];\n                defaultView.enforceState(useDefault);\n            }\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgSwitch.prototype, \"ngSwitch\", null);\n    NgSwitch = __decorate([\n        Directive({ selector: '[ngSwitch]' })\n    ], NgSwitch);\n    return NgSwitch;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description\n * Provides a switch case expression to match against an enclosing `ngSwitch` expression.\n * When the expressions match, the given `NgSwitchCase` template is rendered.\n * If multiple match expressions match the switch expression value, all of them are displayed.\n *\n * @usageNotes\n *\n * Within a switch container, `*ngSwitchCase` statements specify the match expressions\n * as attributes. Include `*ngSwitchDefault` as the final case.\n *\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   ...\n *   <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * Each switch-case statement contains an in-line HTML template or template reference\n * that defines the subtree to be selected if the value of the match expression\n * matches the value of the switch expression.\n *\n * Unlike JavaScript, which uses strict equality, Angular uses loose equality.\n * This means that the empty string, `\"\"` matches 0.\n *\n * @publicApi\n * @see `NgSwitch`\n * @see `NgSwitchDefault`\n *\n */\nvar NgSwitchCase = /** @class */ (function () {\n    function NgSwitchCase(viewContainer, templateRef, ngSwitch) {\n        this.ngSwitch = ngSwitch;\n        ngSwitch._addCase();\n        this._view = new SwitchView(viewContainer, templateRef);\n    }\n    /**\n     * Performs case matching. For internal use only.\n     */\n    NgSwitchCase.prototype.ngDoCheck = function () { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], NgSwitchCase.prototype, \"ngSwitchCase\", void 0);\n    NgSwitchCase = __decorate([\n        Directive({ selector: '[ngSwitchCase]' }),\n        __param(2, Host()),\n        __metadata(\"design:paramtypes\", [ViewContainerRef, TemplateRef,\n            NgSwitch])\n    ], NgSwitchCase);\n    return NgSwitchCase;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that is rendered when no `NgSwitchCase` expressions\n * match the `NgSwitch` expression.\n * This statement should be the final case in an `NgSwitch`.\n *\n * @publicApi\n * @see `NgSwitch`\n * @see `NgSwitchCase`\n *\n */\nvar NgSwitchDefault = /** @class */ (function () {\n    function NgSwitchDefault(viewContainer, templateRef, ngSwitch) {\n        ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n    }\n    NgSwitchDefault = __decorate([\n        Directive({ selector: '[ngSwitchDefault]' }),\n        __param(2, Host()),\n        __metadata(\"design:paramtypes\", [ViewContainerRef, TemplateRef,\n            NgSwitch])\n    ], NgSwitchDefault);\n    return NgSwitchDefault;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n *\n * @description\n *\n * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n *\n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n *\n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n *\n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n *\n * @publicApi\n */\nvar NgPlural = /** @class */ (function () {\n    function NgPlural(_localization) {\n        this._localization = _localization;\n        this._caseViews = {};\n    }\n    Object.defineProperty(NgPlural.prototype, \"ngPlural\", {\n        set: function (value) {\n            this._switchValue = value;\n            this._updateView();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgPlural.prototype.addCase = function (value, switchView) { this._caseViews[value] = switchView; };\n    NgPlural.prototype._updateView = function () {\n        this._clearViews();\n        var cases = Object.keys(this._caseViews);\n        var key = getPluralCategory(this._switchValue, cases, this._localization);\n        this._activateView(this._caseViews[key]);\n    };\n    NgPlural.prototype._clearViews = function () {\n        if (this._activeView)\n            this._activeView.destroy();\n    };\n    NgPlural.prototype._activateView = function (view) {\n        if (view) {\n            this._activeView = view;\n            this._activeView.create();\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], NgPlural.prototype, \"ngPlural\", null);\n    NgPlural = __decorate([\n        Directive({ selector: '[ngPlural]' }),\n        __metadata(\"design:paramtypes\", [NgLocalization])\n    ], NgPlural);\n    return NgPlural;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that will be added/removed from the parent {@link NgPlural} when the\n * given expression matches the plural expression according to CLDR rules.\n *\n * @usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n *```\n *\n * See {@link NgPlural} for more details and example.\n *\n * @publicApi\n */\nvar NgPluralCase = /** @class */ (function () {\n    function NgPluralCase(value, template, viewContainer, ngPlural) {\n        this.value = value;\n        var isANumber = !isNaN(Number(value));\n        ngPlural.addCase(isANumber ? \"=\" + value : value, new SwitchView(viewContainer, template));\n    }\n    NgPluralCase = __decorate([\n        Directive({ selector: '[ngPluralCase]' }),\n        __param(0, Attribute('ngPluralCase')),\n        __param(3, Host()),\n        __metadata(\"design:paramtypes\", [String, TemplateRef,\n            ViewContainerRef, NgPlural])\n    ], NgPluralCase);\n    return NgPluralCase;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n *\n * Set the font of the containing element to the result of an expression.\n *\n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n * ```\n *\n * Set the width of the containing element to a pixel value returned by an expression.\n *\n * ```\n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n * ```\n *\n * Set a collection of style values using an expression that returns key-value pairs.\n *\n * ```\n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n *\n * @description\n *\n * An attribute directive that updates styles for the containing HTML element.\n * Sets one or more style properties, specified as colon-separated key-value pairs.\n * The key is a style name, with an optional `.<unit>` suffix\n * (such as 'top.px', 'font-style.em').\n * The value is an expression to be evaluated.\n * The resulting non-null value, expressed in the given unit,\n * is assigned to the given style property.\n * If the result of evaluation is null, the corresponding style is removed.\n *\n * @publicApi\n */\nvar NgStyle = /** @class */ (function () {\n    function NgStyle(_differs, _ngEl, _renderer) {\n        this._differs = _differs;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n    }\n    Object.defineProperty(NgStyle.prototype, \"ngStyle\", {\n        set: function (\n        /**\n         * A map of style properties, specified as colon-separated\n         * key-value pairs.\n         * * The key is a style name, with an optional `.<unit>` suffix\n         *    (such as 'top.px', 'font-style.em').\n         * * The value is an expression to be evaluated.\n         */\n        values) {\n            this._ngStyle = values;\n            if (!this._differ && values) {\n                this._differ = this._differs.find(values).create();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Applies the new styles if needed.\n     */\n    NgStyle.prototype.ngDoCheck = function () {\n        if (this._differ) {\n            var changes = this._differ.diff(this._ngStyle);\n            if (changes) {\n                this._applyChanges(changes);\n            }\n        }\n    };\n    NgStyle.prototype._applyChanges = function (changes) {\n        var _this = this;\n        changes.forEachRemovedItem(function (record) { return _this._setStyle(record.key, null); });\n        changes.forEachAddedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n        changes.forEachChangedItem(function (record) { return _this._setStyle(record.key, record.currentValue); });\n    };\n    NgStyle.prototype._setStyle = function (nameAndUnit, value) {\n        var _a = __read(nameAndUnit.split('.'), 2), name = _a[0], unit = _a[1];\n        value = value != null && unit ? \"\" + value + unit : value;\n        if (value != null) {\n            this._renderer.setStyle(this._ngEl.nativeElement, name, value);\n        }\n        else {\n            this._renderer.removeStyle(this._ngEl.nativeElement, name);\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], NgStyle.prototype, \"ngStyle\", null);\n    NgStyle = __decorate([\n        Directive({ selector: '[ngStyle]' }),\n        __metadata(\"design:paramtypes\", [KeyValueDiffers, ElementRef, Renderer2])\n    ], NgStyle);\n    return NgStyle;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Inserts an embedded view from a prepared `TemplateRef`.\n *\n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n *\n * @usageNotes\n * ```\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n *\n * Using the key `$implicit` in the context object will set its value as default.\n *\n * ### Example\n *\n * {@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n *\n * @publicApi\n */\nvar NgTemplateOutlet = /** @class */ (function () {\n    function NgTemplateOutlet(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n    }\n    NgTemplateOutlet.prototype.ngOnChanges = function (changes) {\n        var recreateView = this._shouldRecreateView(changes);\n        if (recreateView) {\n            if (this._viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n            }\n            if (this.ngTemplateOutlet) {\n                this._viewRef = this._viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext);\n            }\n        }\n        else {\n            if (this._viewRef && this.ngTemplateOutletContext) {\n                this._updateExistingContext(this.ngTemplateOutletContext);\n            }\n        }\n    };\n    /**\n     * We need to re-create existing embedded view if:\n     * - templateRef has changed\n     * - context has changes\n     *\n     * We mark context object as changed when the corresponding object\n     * shape changes (new properties are added or existing properties are removed).\n     * In other words we consider context with the same properties as \"the same\" even\n     * if object reference changes (see https://github.com/angular/angular/issues/13407).\n     */\n    NgTemplateOutlet.prototype._shouldRecreateView = function (changes) {\n        var ctxChange = changes['ngTemplateOutletContext'];\n        return !!changes['ngTemplateOutlet'] || (ctxChange && this._hasContextShapeChanged(ctxChange));\n    };\n    NgTemplateOutlet.prototype._hasContextShapeChanged = function (ctxChange) {\n        var e_1, _a;\n        var prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n        var currCtxKeys = Object.keys(ctxChange.currentValue || {});\n        if (prevCtxKeys.length === currCtxKeys.length) {\n            try {\n                for (var currCtxKeys_1 = __values(currCtxKeys), currCtxKeys_1_1 = currCtxKeys_1.next(); !currCtxKeys_1_1.done; currCtxKeys_1_1 = currCtxKeys_1.next()) {\n                    var propName = currCtxKeys_1_1.value;\n                    if (prevCtxKeys.indexOf(propName) === -1) {\n                        return true;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (currCtxKeys_1_1 && !currCtxKeys_1_1.done && (_a = currCtxKeys_1.return)) _a.call(currCtxKeys_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    NgTemplateOutlet.prototype._updateExistingContext = function (ctx) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(Object.keys(ctx)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var propName = _c.value;\n                this._viewRef.context[propName] = this.ngTemplateOutletContext[propName];\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], NgTemplateOutlet.prototype, \"ngTemplateOutletContext\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", TemplateRef)\n    ], NgTemplateOutlet.prototype, \"ngTemplateOutlet\", void 0);\n    NgTemplateOutlet = __decorate([\n        Directive({ selector: '[ngTemplateOutlet]' }),\n        __metadata(\"design:paramtypes\", [ViewContainerRef])\n    ], NgTemplateOutlet);\n    return NgTemplateOutlet;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n */\nvar COMMON_DIRECTIVES = [\n    NgClass,\n    NgComponentOutlet,\n    NgForOf,\n    NgIf,\n    NgTemplateOutlet,\n    NgStyle,\n    NgSwitch,\n    NgSwitchCase,\n    NgSwitchDefault,\n    NgPlural,\n    NgPluralCase,\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction invalidPipeArgumentError(type, value) {\n    return Error(\"InvalidPipeArgument: '\" + value + \"' for pipe '\" + Éµstringify(type) + \"'\");\n}\n\nvar NumberFormatter = /** @class */ (function () {\n    function NumberFormatter() {\n    }\n    NumberFormatter.format = function (num, locale, style, opts) {\n        if (opts === void 0) { opts = {}; }\n        var minimumIntegerDigits = opts.minimumIntegerDigits, minimumFractionDigits = opts.minimumFractionDigits, maximumFractionDigits = opts.maximumFractionDigits, currency = opts.currency, _a = opts.currencyAsSymbol, currencyAsSymbol = _a === void 0 ? false : _a;\n        var options = {\n            minimumIntegerDigits: minimumIntegerDigits,\n            minimumFractionDigits: minimumFractionDigits,\n            maximumFractionDigits: maximumFractionDigits,\n            style: NumberFormatStyle[style].toLowerCase()\n        };\n        if (style == NumberFormatStyle.Currency) {\n            options.currency = typeof currency == 'string' ? currency : undefined;\n            options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n        }\n        return new Intl.NumberFormat(locale, options).format(num);\n    };\n    return NumberFormatter;\n}());\nvar DATE_FORMATS_SPLIT$1 = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\nvar PATTERN_ALIASES = {\n    // Keys are quoted so they do not get renamed during closure compilation.\n    'yMMMdjms': datePartGetterFactory(combine([\n        digitCondition('year', 1),\n        nameCondition('month', 3),\n        digitCondition('day', 1),\n        digitCondition('hour', 1),\n        digitCondition('minute', 1),\n        digitCondition('second', 1),\n    ])),\n    'yMdjm': datePartGetterFactory(combine([\n        digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n        digitCondition('hour', 1), digitCondition('minute', 1)\n    ])),\n    'yMMMMEEEEd': datePartGetterFactory(combine([\n        digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n        digitCondition('day', 1)\n    ])),\n    'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n    'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n    'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n    'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n    'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\nvar DATE_FORMATS$1 = {\n    // Keys are quoted so they do not get renamed.\n    'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n    'yy': datePartGetterFactory(digitCondition('year', 2)),\n    'y': datePartGetterFactory(digitCondition('year', 1)),\n    'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n    'MMM': datePartGetterFactory(nameCondition('month', 3)),\n    'MM': datePartGetterFactory(digitCondition('month', 2)),\n    'M': datePartGetterFactory(digitCondition('month', 1)),\n    'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n    'L': datePartGetterFactory(nameCondition('month', 1)),\n    'dd': datePartGetterFactory(digitCondition('day', 2)),\n    'd': datePartGetterFactory(digitCondition('day', 1)),\n    'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n    'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n    'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n    'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'jj': datePartGetterFactory(digitCondition('hour', 2)),\n    'j': datePartGetterFactory(digitCondition('hour', 1)),\n    'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n    'm': datePartGetterFactory(digitCondition('minute', 1)),\n    'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n    's': datePartGetterFactory(digitCondition('second', 1)),\n    // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n    // we can be just safely rely on using `sss` since we currently don't support single or two digit\n    // fractions\n    'sss': datePartGetterFactory(digitCondition('second', 3)),\n    'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n    'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n    'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n    'E': datePartGetterFactory(nameCondition('weekday', 1)),\n    'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'Z': timeZoneGetter$1('short'),\n    'z': timeZoneGetter$1('long'),\n    'ww': datePartGetterFactory({}),\n    // first Thursday of the year. not support ?\n    'w': datePartGetterFactory({}),\n    // of the year not support ?\n    'G': datePartGetterFactory(nameCondition('era', 1)),\n    'GG': datePartGetterFactory(nameCondition('era', 2)),\n    'GGG': datePartGetterFactory(nameCondition('era', 3)),\n    'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\nfunction digitModifier(inner) {\n    return function (date, locale) {\n        var result = inner(date, locale);\n        return result.length == 1 ? '0' + result : result;\n    };\n}\nfunction hourClockExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n}\nfunction hourExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n}\nfunction intlDateFormat(date, locale, options) {\n    return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\nfunction timeZoneGetter$1(timezone) {\n    // To workaround `Intl` API restriction for single timezone let format with 24 hours\n    var options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n    return function (date, locale) {\n        var result = intlDateFormat(date, locale, options);\n        // Then extract first 3 letters that related to hours\n        return result ? result.substring(3) : '';\n    };\n}\nfunction hour12Modify(options, value) {\n    options.hour12 = value;\n    return options;\n}\nfunction digitCondition(prop, len) {\n    var result = {};\n    result[prop] = len === 2 ? '2-digit' : 'numeric';\n    return result;\n}\nfunction nameCondition(prop, len) {\n    var result = {};\n    if (len < 4) {\n        result[prop] = len > 1 ? 'short' : 'narrow';\n    }\n    else {\n        result[prop] = 'long';\n    }\n    return result;\n}\nfunction combine(options) {\n    return options.reduce(function (merged, opt) { return (__assign({}, merged, opt)); }, {});\n}\nfunction datePartGetterFactory(ret) {\n    return function (date, locale) { return intlDateFormat(date, locale, ret); };\n}\nvar DATE_FORMATTER_CACHE = new Map();\nfunction dateFormatter(format, date, locale) {\n    var fn = PATTERN_ALIASES[format];\n    if (fn)\n        return fn(date, locale);\n    var cacheKey = format;\n    var parts = DATE_FORMATTER_CACHE.get(cacheKey);\n    if (!parts) {\n        parts = [];\n        var match = void 0;\n        DATE_FORMATS_SPLIT$1.exec(format);\n        var _format = format;\n        while (_format) {\n            match = DATE_FORMATS_SPLIT$1.exec(_format);\n            if (match) {\n                parts = parts.concat(match.slice(1));\n                _format = parts.pop();\n            }\n            else {\n                parts.push(_format);\n                _format = null;\n            }\n        }\n        DATE_FORMATTER_CACHE.set(cacheKey, parts);\n    }\n    return parts.reduce(function (text, part) {\n        var fn = DATE_FORMATS$1[part];\n        return text + (fn ? fn(date, locale) : partToTime(part));\n    }, '');\n}\nfunction partToTime(part) {\n    return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\nvar DateFormatter = /** @class */ (function () {\n    function DateFormatter() {\n    }\n    DateFormatter.format = function (date, locale, pattern) {\n        return dateFormatter(pattern, date, locale);\n    };\n    return DateFormatter;\n}());\n\n/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n  */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date according to locale rules.\n *\n * Where:\n * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n * (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. The format can be predefined as\n *   shown below or custom as shown in the table.\n *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n *\n *\n *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n *\n * In javascript, only the components specified will be respected (not the ordering,\n * punctuations, ...) and details of the formatting will be dependent on the locale.\n *\n * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n *\n * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n * applied and the formatted text will have the same day, month and year of the expression.\n *\n * WARNINGS:\n * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n *   Instead users should treat the date as an immutable object and change the reference when the\n *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n *   which would be an expensive operation).\n * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n *   browsers.\n *\n * @usageNotes\n *\n * ### Examples\n *\n * Assuming `dateObj` is (year: 2010, month: 9, day: 3, hour: 12 PM, minute: 05, second: 08)\n * in the _local_ time and locale is 'en-US':\n *\n * {@example common/pipes/ts/date_pipe.ts region='DeprecatedDatePipe'}\n *\n * @publicApi\n */\nvar DeprecatedDatePipe = /** @class */ (function () {\n    function DeprecatedDatePipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedDatePipe_1 = DeprecatedDatePipe;\n    DeprecatedDatePipe.prototype.transform = function (value, pattern) {\n        if (pattern === void 0) { pattern = 'mediumDate'; }\n        if (value == null || value === '' || value !== value)\n            return null;\n        var date;\n        if (typeof value === 'string') {\n            value = value.trim();\n        }\n        if (isDate$1(value)) {\n            date = value;\n        }\n        else if (!isNaN(value - parseFloat(value))) {\n            date = new Date(parseFloat(value));\n        }\n        else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            /**\n             * For ISO Strings without time the day, month and year must be extracted from the ISO String\n             * before Date creation to avoid time offset and errors in the new Date.\n             * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n             * date, some browsers (e.g. IE 9) will throw an invalid Date error\n             * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the\n             * timeoffset\n             * is applied\n             * Note: ISO months are 0 for January, 1 for February, ...\n             */\n            var _a = __read(value.split('-').map(function (val) { return parseInt(val, 10); }), 3), y = _a[0], m = _a[1], d = _a[2];\n            date = new Date(y, m - 1, d);\n        }\n        else {\n            date = new Date(value);\n        }\n        if (!isDate$1(date)) {\n            var match = void 0;\n            if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n                date = isoStringToDate(match);\n            }\n            else {\n                throw invalidPipeArgumentError(DeprecatedDatePipe_1, value);\n            }\n        }\n        return DateFormatter.format(date, this._locale, DeprecatedDatePipe_1._ALIASES[pattern] || pattern);\n    };\n    var DeprecatedDatePipe_1;\n    /** @internal */\n    DeprecatedDatePipe._ALIASES = {\n        'medium': 'yMMMdjms',\n        'short': 'yMdjm',\n        'fullDate': 'yMMMMEEEEd',\n        'longDate': 'yMMMMd',\n        'mediumDate': 'yMMMd',\n        'shortDate': 'yMd',\n        'mediumTime': 'jms',\n        'shortTime': 'jm'\n    };\n    DeprecatedDatePipe = DeprecatedDatePipe_1 = __decorate([\n        Pipe({ name: 'date', pure: true }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DeprecatedDatePipe);\n    return DeprecatedDatePipe;\n}());\nfunction isDate$1(value) {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction formatNumber$1(pipe, locale, value, style, digits, currency, currencyAsSymbol) {\n    if (currency === void 0) { currency = null; }\n    if (currencyAsSymbol === void 0) { currencyAsSymbol = false; }\n    if (value == null)\n        return null;\n    // Convert strings to numbers\n    value = typeof value === 'string' && !isNaN(+value - parseFloat(value)) ? +value : value;\n    if (typeof value !== 'number') {\n        throw invalidPipeArgumentError(pipe, value);\n    }\n    var minInt;\n    var minFraction;\n    var maxFraction;\n    if (style !== NumberFormatStyle.Currency) {\n        // rely on Intl default for currency\n        minInt = 1;\n        minFraction = 0;\n        maxFraction = 3;\n    }\n    if (digits) {\n        var parts = digits.match(NUMBER_FORMAT_REGEXP);\n        if (parts === null) {\n            throw new Error(digits + \" is not a valid digit info for number pipes\");\n        }\n        if (parts[1] != null) { // min integer digits\n            minInt = parseIntAutoRadix(parts[1]);\n        }\n        if (parts[3] != null) { // min fraction digits\n            minFraction = parseIntAutoRadix(parts[3]);\n        }\n        if (parts[5] != null) { // max fraction digits\n            maxFraction = parseIntAutoRadix(parts[5]);\n        }\n    }\n    return NumberFormatter.format(value, locale, style, {\n        minimumIntegerDigits: minInt,\n        minimumFractionDigits: minFraction,\n        maximumFractionDigits: maxFraction,\n        currency: currency,\n        currencyAsSymbol: currencyAsSymbol,\n    });\n}\n/**\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the active locale.\n *\n * where `expression` is a number:\n *  - `digitInfo` is a `string` which has a following format: <br>\n *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n *\n * For more information on the acceptable range for each of these numbers and other\n * details see your native internationalization library.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/number_pipe.ts region='DeprecatedNumberPipe'}\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar DeprecatedDecimalPipe = /** @class */ (function () {\n    function DeprecatedDecimalPipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedDecimalPipe_1 = DeprecatedDecimalPipe;\n    DeprecatedDecimalPipe.prototype.transform = function (value, digits) {\n        return formatNumber$1(DeprecatedDecimalPipe_1, this._locale, value, NumberFormatStyle.Decimal, digits);\n    };\n    var DeprecatedDecimalPipe_1;\n    DeprecatedDecimalPipe = DeprecatedDecimalPipe_1 = __decorate([\n        Pipe({ name: 'number' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DeprecatedDecimalPipe);\n    return DeprecatedDecimalPipe;\n}());\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Formats a number as percentage according to locale rules.\n *\n * - `digitInfo` See {@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/percent_pipe.ts region='DeprecatedPercentPipe'}\n *\n * @publicApi\n */\nvar DeprecatedPercentPipe = /** @class */ (function () {\n    function DeprecatedPercentPipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedPercentPipe_1 = DeprecatedPercentPipe;\n    DeprecatedPercentPipe.prototype.transform = function (value, digits) {\n        return formatNumber$1(DeprecatedPercentPipe_1, this._locale, value, NumberFormatStyle.Percent, digits);\n    };\n    var DeprecatedPercentPipe_1;\n    DeprecatedPercentPipe = DeprecatedPercentPipe_1 = __decorate([\n        Pipe({ name: 'percent' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DeprecatedPercentPipe);\n    return DeprecatedPercentPipe;\n}());\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as currency using locale rules.\n *\n * Use `currency` to format a number as currency.\n *\n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n *   - `true`: use symbol (e.g. `$`).\n *   - `false`(default): use code (e.g. `USD`).\n * - `digitInfo` See {@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/currency_pipe.ts region='DeprecatedCurrencyPipe'}\n *\n * @publicApi\n */\nvar DeprecatedCurrencyPipe = /** @class */ (function () {\n    function DeprecatedCurrencyPipe(_locale) {\n        this._locale = _locale;\n    }\n    DeprecatedCurrencyPipe_1 = DeprecatedCurrencyPipe;\n    DeprecatedCurrencyPipe.prototype.transform = function (value, currencyCode, symbolDisplay, digits) {\n        if (currencyCode === void 0) { currencyCode = 'USD'; }\n        if (symbolDisplay === void 0) { symbolDisplay = false; }\n        return formatNumber$1(DeprecatedCurrencyPipe_1, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n    };\n    var DeprecatedCurrencyPipe_1;\n    DeprecatedCurrencyPipe = DeprecatedCurrencyPipe_1 = __decorate([\n        Pipe({ name: 'currency' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DeprecatedCurrencyPipe);\n    return DeprecatedCurrencyPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of deprecated i18n pipes that require intl api\n *\n * @deprecated from v5\n */\nvar COMMON_DEPRECATED_I18N_PIPES = [DeprecatedDecimalPipe, DeprecatedPercentPipe, DeprecatedCurrencyPipe, DeprecatedDatePipe];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ObservableStrategy = /** @class */ (function () {\n    function ObservableStrategy() {\n    }\n    ObservableStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n        return async.subscribe({ next: updateLatestValue, error: function (e) { throw e; } });\n    };\n    ObservableStrategy.prototype.dispose = function (subscription) { subscription.unsubscribe(); };\n    ObservableStrategy.prototype.onDestroy = function (subscription) { subscription.unsubscribe(); };\n    return ObservableStrategy;\n}());\nvar PromiseStrategy = /** @class */ (function () {\n    function PromiseStrategy() {\n    }\n    PromiseStrategy.prototype.createSubscription = function (async, updateLatestValue) {\n        return async.then(updateLatestValue, function (e) { throw e; });\n    };\n    PromiseStrategy.prototype.dispose = function (subscription) { };\n    PromiseStrategy.prototype.onDestroy = function (subscription) { };\n    return PromiseStrategy;\n}());\nvar _promiseStrategy = new PromiseStrategy();\nvar _observableStrategy = new ObservableStrategy();\n/**\n * @ngModule CommonModule\n * @description\n *\n * Unwraps a value from an asynchronous primitive.\n *\n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks.\n *\n * @usageNotes\n *\n * ### Examples\n *\n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n *\n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n *\n * @publicApi\n */\nvar AsyncPipe = /** @class */ (function () {\n    function AsyncPipe(_ref) {\n        this._ref = _ref;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n        this._strategy = null;\n    }\n    AsyncPipe_1 = AsyncPipe;\n    AsyncPipe.prototype.ngOnDestroy = function () {\n        if (this._subscription) {\n            this._dispose();\n        }\n    };\n    AsyncPipe.prototype.transform = function (obj) {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.transform(obj);\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    };\n    AsyncPipe.prototype._subscribe = function (obj) {\n        var _this = this;\n        this._obj = obj;\n        this._strategy = this._selectStrategy(obj);\n        this._subscription = this._strategy.createSubscription(obj, function (value) { return _this._updateLatestValue(obj, value); });\n    };\n    AsyncPipe.prototype._selectStrategy = function (obj) {\n        if (ÉµisPromise(obj)) {\n            return _promiseStrategy;\n        }\n        if (ÉµisObservable(obj)) {\n            return _observableStrategy;\n        }\n        throw invalidPipeArgumentError(AsyncPipe_1, obj);\n    };\n    AsyncPipe.prototype._dispose = function () {\n        this._strategy.dispose(this._subscription);\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    };\n    AsyncPipe.prototype._updateLatestValue = function (async, value) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    };\n    var AsyncPipe_1;\n    AsyncPipe = AsyncPipe_1 = __decorate([\n        Pipe({ name: 'async', pure: false }),\n        __metadata(\"design:paramtypes\", [ChangeDetectorRef])\n    ], AsyncPipe);\n    return AsyncPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms text to all lower case.\n *\n * @see `UpperCasePipe`\n * @see `TitleCasePipe`\n * @usageNotes\n *\n * The following example defines a view that allows the user to enter\n * text, and then uses the pipe to convert the input text to all lower case.\n *\n * <code-example path=\"common/pipes/ts/lowerupper_pipe.ts\" region='LowerUpperPipe'></code-example>\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar LowerCasePipe = /** @class */ (function () {\n    function LowerCasePipe() {\n    }\n    LowerCasePipe_1 = LowerCasePipe;\n    /**\n     * @param value The string to transform to lower case.\n     */\n    LowerCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(LowerCasePipe_1, value);\n        }\n        return value.toLowerCase();\n    };\n    var LowerCasePipe_1;\n    LowerCasePipe = LowerCasePipe_1 = __decorate([\n        Pipe({ name: 'lowercase' })\n    ], LowerCasePipe);\n    return LowerCasePipe;\n}());\n//\n// Regex below matches any Unicode word and compatible with ES5. In ES2018 the same result\n// can be achieved by using /\\p{L}\\S*/gu and also known as Unicode Property Escapes\n// (http://2ality.com/2017/07/regexp-unicode-property-escapes.html). Since there is no\n// transpilation of this functionality down to ES5 without external tool, the only solution is\n// to use already transpiled form. Example can be found here -\n// https://mothereff.in/regexpu#input=var+regex+%3D+/%5Cp%7BL%7D/u%3B&unicodePropertyEscape=1\n//\nvar unicodeWordMatch = /(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])\\S*/g;\n/**\n * Transforms text to title case.\n * Capitalizes the first letter of each word, and transforms the\n * rest of the word to lower case.\n * Words are delimited by any whitespace character, such as a space, tab, or line-feed character.\n *\n * @see `LowerCasePipe`\n * @see `UpperCasePipe`\n *\n * @usageNotes\n * The following example shows the result of transforming various strings into title case.\n *\n * <code-example path=\"common/pipes/ts/titlecase_pipe.ts\" region='TitleCasePipe'></code-example>\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar TitleCasePipe = /** @class */ (function () {\n    function TitleCasePipe() {\n    }\n    TitleCasePipe_1 = TitleCasePipe;\n    /**\n     * @param value The string to transform to title case.\n     */\n    TitleCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(TitleCasePipe_1, value);\n        }\n        return value.replace(unicodeWordMatch, (function (txt) { return txt[0].toUpperCase() + txt.substr(1).toLowerCase(); }));\n    };\n    var TitleCasePipe_1;\n    TitleCasePipe = TitleCasePipe_1 = __decorate([\n        Pipe({ name: 'titlecase' })\n    ], TitleCasePipe);\n    return TitleCasePipe;\n}());\n/**\n * Transforms text to all upper case.\n * @see `LowerCasePipe`\n * @see `TitleCasePipe`\n *\n * @ngModule CommonModule\n * @publicApi\n */\nvar UpperCasePipe = /** @class */ (function () {\n    function UpperCasePipe() {\n    }\n    UpperCasePipe_1 = UpperCasePipe;\n    /**\n     * @param value The string to transform to upper case.\n     */\n    UpperCasePipe.prototype.transform = function (value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(UpperCasePipe_1, value);\n        }\n        return value.toUpperCase();\n    };\n    var UpperCasePipe_1;\n    UpperCasePipe = UpperCasePipe_1 = __decorate([\n        Pipe({ name: 'uppercase' })\n    ], UpperCasePipe);\n    return UpperCasePipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// clang-format off\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date value according to locale rules.\n *\n * Only the `en-US` locale data comes with Angular. To localize dates\n * in another language, you must import the corresponding locale data.\n * See the [I18n guide](guide/i18n#i18n-pipes) for more information.\n *\n * @see `formatDate()`\n *\n *\n * @usageNotes\n *\n * The result of this pipe is not reevaluated when the input is mutated. To avoid the need to\n * reformat the date on every change-detection cycle, treat the date as an immutable object\n * and change the reference when the pipe needs to run again.\n *\n * ### Pre-defined format options\n *\n * Examples are given in `en-US` locale.\n *\n * - `'short'`: equivalent to `'M/d/yy, h:mm a'` (`6/15/15, 9:03 AM`).\n * - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (`Jun 15, 2015, 9:03:01 AM`).\n * - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (`June 15, 2015 at 9:03:01 AM\n * GMT+1`).\n * - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (`Monday, June 15, 2015 at\n * 9:03:01 AM GMT+01:00`).\n * - `'shortDate'`: equivalent to `'M/d/yy'` (`6/15/15`).\n * - `'mediumDate'`: equivalent to `'MMM d, y'` (`Jun 15, 2015`).\n * - `'longDate'`: equivalent to `'MMMM d, y'` (`June 15, 2015`).\n * - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (`Monday, June 15, 2015`).\n * - `'shortTime'`: equivalent to `'h:mm a'` (`9:03 AM`).\n * - `'mediumTime'`: equivalent to `'h:mm:ss a'` (`9:03:01 AM`).\n * - `'longTime'`: equivalent to `'h:mm:ss a z'` (`9:03:01 AM GMT+1`).\n * - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (`9:03:01 AM GMT+01:00`).\n *\n * ### Custom format options\n *\n * You can construct a format string using symbols to specify the components\n * of a date-time value, as described in the following table.\n * Format details depend on the locale.\n * Fields marked with (*) are only available in the extra data set for the given locale.\n *\n *  | Field type         | Format      | Description                                                   | Example Value                                              |\n *  |--------------------|-------------|---------------------------------------------------------------|------------------------------------------------------------|\n *  | Era                | G, GG & GGG | Abbreviated                                                   | AD                                                         |\n *  |                    | GGGG        | Wide                                                          | Anno Domini                                                |\n *  |                    | GGGGG       | Narrow                                                        | A                                                          |\n *  | Year               | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\n *  |                    | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\n *  |                    | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\n *  |                    | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\n *  | Month              | M           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | MMM         | Abbreviated                                                   | Sep                                                        |\n *  |                    | MMMM        | Wide                                                          | September                                                  |\n *  |                    | MMMMM       | Narrow                                                        | S                                                          |\n *  | Month standalone   | L           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | LLL         | Abbreviated                                                   | Sep                                                        |\n *  |                    | LLLL        | Wide                                                          | September                                                  |\n *  |                    | LLLLL       | Narrow                                                        | S                                                          |\n *  | Week of year       | w           | Numeric: minimum digits                                       | 1... 53                                                    |\n *  |                    | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |\n *  | Week of month      | W           | Numeric: 1 digit                                              | 1... 5                                                     |\n *  | Day of month       | d           | Numeric: minimum digits                                       | 1                                                          |\n *  |                    | dd          | Numeric: 2 digits + zero padded                               | 01                                                          |\n *  | Week day           | E, EE & EEE | Abbreviated                                                   | Tue                                                        |\n *  |                    | EEEE        | Wide                                                          | Tuesday                                                    |\n *  |                    | EEEEE       | Narrow                                                        | T                                                          |\n *  |                    | EEEEEE      | Short                                                         | Tu                                                         |\n *  | Period             | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |\n *  |                    | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |\n *  |                    | aaaaa       | Narrow                                                        | a/p                                                        |\n *  | Period*            | B, BB & BBB | Abbreviated                                                   | mid.                                                       |\n *  |                    | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | BBBBB       | Narrow                                                        | md                                                         |\n *  | Period standalone* | b, bb & bbb | Abbreviated                                                   | mid.                                                       |\n *  |                    | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | bbbbb       | Narrow                                                        | md                                                         |\n *  | Hour 1-12          | h           | Numeric: minimum digits                                       | 1, 12                                                      |\n *  |                    | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |\n *  | Hour 0-23          | H           | Numeric: minimum digits                                       | 0, 23                                                      |\n *  |                    | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |\n *  | Minute             | m           | Numeric: minimum digits                                       | 8, 59                                                      |\n *  |                    | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |\n *  | Second             | s           | Numeric: minimum digits                                       | 0... 59                                                    |\n *  |                    | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |\n *  | Fractional seconds | S           | Numeric: 1 digit                                              | 0... 9                                                     |\n *  |                    | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |\n *  |                    | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |\n *  | Zone               | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |\n *  |                    | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |\n *  |                    | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |\n *  |                    | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |\n *  |                    | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |\n *  |                    | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |\n *  |                    | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |\n *\n * Note that timezone correction is not applied to an ISO string that has no time component, such as \"2016-09-19\"\n *\n * ### Format examples\n *\n * These examples transform a date into various formats,\n * assuming that `dateObj` is a JavaScript `Date` object for\n * year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11,\n * given in the local time for the `en-US` locale.\n *\n * ```\n * {{ dateObj | date }}               // output is 'Jun 15, 2015'\n * {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n * {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n * {{ dateObj | date:'mmss' }}        // output is '43:11'\n * ```\n *\n * ### Usage example\n *\n * The following component uses a date pipe to display the current date in different formats.\n *\n * ```\n * @Component({\n *  selector: 'date-pipe',\n *  template: `<div>\n *    <p>Today is {{today | date}}</p>\n *    <p>Or if you prefer, {{today | date:'fullDate'}}</p>\n *    <p>The time is {{today | date:'h:mm a z'}}</p>\n *  </div>`\n * })\n * // Get the current date and time as a date-time value.\n * export class DatePipeComponent {\n *   today: number = Date.now();\n * }\n * ```\n *\n * @publicApi\n */\n// clang-format on\nvar DatePipe = /** @class */ (function () {\n    function DatePipe(locale) {\n        this.locale = locale;\n    }\n    DatePipe_1 = DatePipe;\n    /**\n     * @param value The date expression: a `Date` object,  a number\n     * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).\n     * @param format The date/time components to include, using predefined options or a\n     * custom format string.\n     * @param timezone A timezone offset (such as `'+0430'`), or a standard\n     * UTC/GMT or continental US timezone abbreviation. Default is\n     * the local system timezone of the end-user's machine.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @returns A date string in the desired format.\n     */\n    DatePipe.prototype.transform = function (value, format, timezone, locale) {\n        if (format === void 0) { format = 'mediumDate'; }\n        if (value == null || value === '' || value !== value)\n            return null;\n        try {\n            return formatDate(value, format, locale || this.locale, timezone);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DatePipe_1, error.message);\n        }\n    };\n    var DatePipe_1;\n    DatePipe = DatePipe_1 = __decorate([\n        Pipe({ name: 'date', pure: true }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DatePipe);\n    return DatePipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _INTERPOLATION_REGEXP = /#/g;\n/**\n * @ngModule CommonModule\n * @description\n *\n * Maps a value to a string that pluralizes the value according to locale rules.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n *\n * @publicApi\n */\nvar I18nPluralPipe = /** @class */ (function () {\n    function I18nPluralPipe(_localization) {\n        this._localization = _localization;\n    }\n    I18nPluralPipe_1 = I18nPluralPipe;\n    /**\n     * @param value the number to be formatted\n     * @param pluralMap an object that mimics the ICU format, see\n     * http://userguide.icu-project.org/formatparse/messages.\n     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n     * default).\n     */\n    I18nPluralPipe.prototype.transform = function (value, pluralMap, locale) {\n        if (value == null)\n            return '';\n        if (typeof pluralMap !== 'object' || pluralMap === null) {\n            throw invalidPipeArgumentError(I18nPluralPipe_1, pluralMap);\n        }\n        var key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);\n        return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n    };\n    var I18nPluralPipe_1;\n    I18nPluralPipe = I18nPluralPipe_1 = __decorate([\n        Pipe({ name: 'i18nPlural', pure: true }),\n        __metadata(\"design:paramtypes\", [NgLocalization])\n    ], I18nPluralPipe);\n    return I18nPluralPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Generic selector that displays the string that matches the current value.\n *\n * If none of the keys of the `mapping` match the `value`, then the content\n * of the `other` key is returned when present, otherwise an empty string is returned.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n *\n * @publicApi\n */\nvar I18nSelectPipe = /** @class */ (function () {\n    function I18nSelectPipe() {\n    }\n    I18nSelectPipe_1 = I18nSelectPipe;\n    /**\n     * @param value a string to be internationalized.\n     * @param mapping an object that indicates the text that should be displayed\n     * for different values of the provided `value`.\n     */\n    I18nSelectPipe.prototype.transform = function (value, mapping) {\n        if (value == null)\n            return '';\n        if (typeof mapping !== 'object' || typeof value !== 'string') {\n            throw invalidPipeArgumentError(I18nSelectPipe_1, mapping);\n        }\n        if (mapping.hasOwnProperty(value)) {\n            return mapping[value];\n        }\n        if (mapping.hasOwnProperty('other')) {\n            return mapping['other'];\n        }\n        return '';\n    };\n    var I18nSelectPipe_1;\n    I18nSelectPipe = I18nSelectPipe_1 = __decorate([\n        Pipe({ name: 'i18nSelect', pure: true })\n    ], I18nSelectPipe);\n    return I18nSelectPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Converts a value into its JSON-format representation.  Useful for debugging.\n *\n * @usageNotes\n *\n * The following component uses a JSON pipe to convert an object\n * to JSON format, and displays the string in both formats for comparison.\n *\n * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n *\n * @publicApi\n */\nvar JsonPipe = /** @class */ (function () {\n    function JsonPipe() {\n    }\n    /**\n     * @param value A value of any type to convert into a JSON-format string.\n     */\n    JsonPipe.prototype.transform = function (value) { return JSON.stringify(value, null, 2); };\n    JsonPipe = __decorate([\n        Pipe({ name: 'json', pure: false })\n    ], JsonPipe);\n    return JsonPipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction makeKeyValuePair(key, value) {\n    return { key: key, value: value };\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms Object or Map into an array of key value pairs.\n *\n * The output array will be ordered by keys.\n * By default the comparator will be by Unicode point value.\n * You can optionally pass a compareFn if your keys are complex types.\n *\n * @usageNotes\n * ### Examples\n *\n * This examples show how an Object or a Map can be iterated by ngFor with the use of this keyvalue\n * pipe.\n *\n * {@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}\n *\n * @publicApi\n */\nvar KeyValuePipe = /** @class */ (function () {\n    function KeyValuePipe(differs) {\n        this.differs = differs;\n        this.keyValues = [];\n    }\n    KeyValuePipe.prototype.transform = function (input, compareFn) {\n        var _this = this;\n        if (compareFn === void 0) { compareFn = defaultComparator; }\n        if (!input || (!(input instanceof Map) && typeof input !== 'object')) {\n            return null;\n        }\n        if (!this.differ) {\n            // make a differ for whatever type we've been passed in\n            this.differ = this.differs.find(input).create();\n        }\n        var differChanges = this.differ.diff(input);\n        if (differChanges) {\n            this.keyValues = [];\n            differChanges.forEachItem(function (r) {\n                _this.keyValues.push(makeKeyValuePair(r.key, r.currentValue));\n            });\n            this.keyValues.sort(compareFn);\n        }\n        return this.keyValues;\n    };\n    KeyValuePipe = __decorate([\n        Pipe({ name: 'keyvalue', pure: false }),\n        __metadata(\"design:paramtypes\", [KeyValueDiffers])\n    ], KeyValuePipe);\n    return KeyValuePipe;\n}());\nfunction defaultComparator(keyValueA, keyValueB) {\n    var a = keyValueA.key;\n    var b = keyValueB.key;\n    // if same exit with 0;\n    if (a === b)\n        return 0;\n    // make sure that undefined are at the end of the sort.\n    if (a === undefined)\n        return 1;\n    if (b === undefined)\n        return -1;\n    // make sure that nulls are at the end of the sort.\n    if (a === null)\n        return 1;\n    if (b === null)\n        return -1;\n    if (typeof a == 'string' && typeof b == 'string') {\n        return a < b ? -1 : 1;\n    }\n    if (typeof a == 'number' && typeof b == 'number') {\n        return a - b;\n    }\n    if (typeof a == 'boolean' && typeof b == 'boolean') {\n        return a < b ? -1 : 1;\n    }\n    // `a` and `b` are of different types. Compare their string values.\n    var aString = String(a);\n    var bString = String(b);\n    return aString == bString ? 0 : aString < bString ? -1 : 1;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number into a string,\n * formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * If no parameters are specified, the function rounds off to the nearest value using this\n * [rounding method](https://en.wikibooks.org/wiki/Arithmetic/Rounding).\n * The behavior differs from that of the JavaScript ```Math.round()``` function.\n * In the following case for example, the pipe rounds down where\n * ```Math.round()``` rounds up:\n *\n * ```html\n * -2.5 | number:'1.0-0'\n * > -3\n * Math.round(-2.5)\n * > -2\n * ```\n *\n * @see `formatNumber()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * ### Example\n *\n * <code-example path=\"common/pipes/ts/number_pipe.ts\" region='NumberPipe'></code-example>\n *\n * @publicApi\n */\nvar DecimalPipe = /** @class */ (function () {\n    function DecimalPipe(_locale) {\n        this._locale = _locale;\n    }\n    DecimalPipe_1 = DecimalPipe;\n    /**\n     * @param value The number to be formatted.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    DecimalPipe.prototype.transform = function (value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            var num = strToNumber(value);\n            return formatNumber(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DecimalPipe_1, error.message);\n        }\n    };\n    var DecimalPipe_1;\n    DecimalPipe = DecimalPipe_1 = __decorate([\n        Pipe({ name: 'number' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], DecimalPipe);\n    return DecimalPipe;\n}());\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a percentage\n * string, formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * @see `formatPercent()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/percent_pipe.ts\" region='PercentPipe'></code-example>\n *\n * @publicApi\n */\nvar PercentPipe = /** @class */ (function () {\n    function PercentPipe(_locale) {\n        this._locale = _locale;\n    }\n    PercentPipe_1 = PercentPipe;\n    /**\n     *\n     * @param value The number to be formatted as a percentage.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `0`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    PercentPipe.prototype.transform = function (value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            var num = strToNumber(value);\n            return formatPercent(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(PercentPipe_1, error.message);\n        }\n    };\n    var PercentPipe_1;\n    PercentPipe = PercentPipe_1 = __decorate([\n        Pipe({ name: 'percent' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], PercentPipe);\n    return PercentPipe;\n}());\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a currency string, formatted according to locale rules\n * that determine group sizing and separator, decimal-point character,\n * and other locale-specific configurations.\n *\n * @see `getCurrencySymbol()`\n * @see `formatCurrency()`\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/currency_pipe.ts\" region='CurrencyPipe'></code-example>\n *\n * @publicApi\n */\nvar CurrencyPipe = /** @class */ (function () {\n    function CurrencyPipe(_locale) {\n        this._locale = _locale;\n    }\n    CurrencyPipe_1 = CurrencyPipe;\n    /**\n     *\n     * @param value The number to be formatted as currency.\n     * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,\n     * such as `USD` for the US dollar and `EUR` for the euro.\n     * @param display The format for the currency indicator. One of the following:\n     *   - `code`: Show the code (such as `USD`).\n     *   - `symbol`(default): Show the symbol (such as `$`).\n     *   - `symbol-narrow`: Use the narrow symbol for locales that have two symbols for their\n     * currency.\n     * For example, the Canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`. If the\n     * locale has no narrow symbol, uses the standard symbol for the locale.\n     *   - String: Use the given string value instead of a code or a symbol.\n     * For example, an empty string will suppress the currency & symbol.\n     *   - Boolean (marked deprecated in v5): `true` for symbol and false for `code`.\n     *\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `2`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `2`.\n     * If not provided, the number will be formatted with the proper amount of digits,\n     * depending on what the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) specifies.\n     * For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     */\n    CurrencyPipe.prototype.transform = function (value, currencyCode, display, digitsInfo, locale) {\n        if (display === void 0) { display = 'symbol'; }\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        if (typeof display === 'boolean') {\n            if (console && console.warn) {\n                console.warn(\"Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \\\"code\\\", \\\"symbol\\\" or \\\"symbol-narrow\\\".\");\n            }\n            display = display ? 'symbol' : 'code';\n        }\n        var currency = currencyCode || 'USD';\n        if (display !== 'code') {\n            if (display === 'symbol' || display === 'symbol-narrow') {\n                currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);\n            }\n            else {\n                currency = display;\n            }\n        }\n        try {\n            var num = strToNumber(value);\n            return formatCurrency(num, locale, currency, currencyCode, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(CurrencyPipe_1, error.message);\n        }\n    };\n    var CurrencyPipe_1;\n    CurrencyPipe = CurrencyPipe_1 = __decorate([\n        Pipe({ name: 'currency' }),\n        __param(0, Inject(LOCALE_ID)),\n        __metadata(\"design:paramtypes\", [String])\n    ], CurrencyPipe);\n    return CurrencyPipe;\n}());\nfunction isEmpty(value) {\n    return value == null || value === '' || value !== value;\n}\n/**\n * Transforms a string into a number (if needed).\n */\nfunction strToNumber(value) {\n    // Convert strings to numbers\n    if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\n        return Number(value);\n    }\n    if (typeof value !== 'number') {\n        throw new Error(value + \" is not a number\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @ngModule CommonModule\n * @description\n *\n * Creates a new `Array` or `String` containing a subset (slice) of the elements.\n *\n * @usageNotes\n *\n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n *\n * When operating on an `Array`, the returned `Array` is always a copy even when all\n * the elements are being returned.\n *\n * When operating on a blank value, the pipe returns the blank value.\n *\n * ### List Example\n *\n * This `ngFor` example:\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n *\n * produces the following:\n *\n * ```html\n * <li>b</li>\n * <li>c</li>\n * ```\n *\n * ### String Examples\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n *\n * @publicApi\n */\nvar SlicePipe = /** @class */ (function () {\n    function SlicePipe() {\n    }\n    SlicePipe_1 = SlicePipe;\n    /**\n     * @param value a list or a string to be sliced.\n     * @param start the starting index of the subset to return:\n     *   - **a positive integer**: return the item at `start` index and all items after\n     *     in the list or string expression.\n     *   - **a negative integer**: return the item at `start` index from the end and all items after\n     *     in the list or string expression.\n     *   - **if positive and greater than the size of the expression**: return an empty list or\n     * string.\n     *   - **if negative and greater than the size of the expression**: return entire list or string.\n     * @param end the ending index of the subset to return:\n     *   - **omitted**: return all items until the end.\n     *   - **if positive**: return all items before `end` index of the list or string.\n     *   - **if negative**: return all items before `end` index from the end of the list or string.\n     */\n    SlicePipe.prototype.transform = function (value, start, end) {\n        if (value == null)\n            return value;\n        if (!this.supports(value)) {\n            throw invalidPipeArgumentError(SlicePipe_1, value);\n        }\n        return value.slice(start, end);\n    };\n    SlicePipe.prototype.supports = function (obj) { return typeof obj === 'string' || Array.isArray(obj); };\n    var SlicePipe_1;\n    SlicePipe = SlicePipe_1 = __decorate([\n        Pipe({ name: 'slice', pure: false })\n    ], SlicePipe);\n    return SlicePipe;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A collection of Angular pipes that are likely to be used in each and every application.\n */\nvar COMMON_PIPES = [\n    AsyncPipe,\n    UpperCasePipe,\n    LowerCasePipe,\n    JsonPipe,\n    SlicePipe,\n    DecimalPipe,\n    PercentPipe,\n    TitleCasePipe,\n    CurrencyPipe,\n    DatePipe,\n    I18nPluralPipe,\n    I18nSelectPipe,\n    KeyValuePipe,\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This does not contain the location providers,\n// as they need some platform specific implementations to work.\n/**\n * Exports all the basic Angular directives and pipes,\n * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * * The `providers` options configure the NgModule's injector to provide\n * localization dependencies to members.\n * * The `exports` options make the declared directives and pipes available for import\n * by other NgModules.\n *\n * @publicApi\n */\nvar CommonModule = /** @class */ (function () {\n    function CommonModule() {\n    }\n    CommonModule = __decorate([\n        NgModule({\n            declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n            exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n            providers: [\n                { provide: NgLocalization, useClass: NgLocaleLocalization },\n            ],\n        })\n    ], CommonModule);\n    return CommonModule;\n}());\nvar Éµ0 = getPluralCase;\n/**\n * A module that contains the deprecated i18n pipes.\n *\n * @deprecated from v5\n * @publicApi\n */\nvar DeprecatedI18NPipesModule = /** @class */ (function () {\n    function DeprecatedI18NPipesModule() {\n    }\n    DeprecatedI18NPipesModule = __decorate([\n        NgModule({\n            declarations: [COMMON_DEPRECATED_I18N_PIPES],\n            exports: [COMMON_DEPRECATED_I18N_PIPES],\n            providers: [{ provide: DEPRECATED_PLURAL_FN, useValue: Éµ0 }],\n        })\n    ], DeprecatedI18NPipesModule);\n    return DeprecatedI18NPipesModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @publicApi\n */\nvar DOCUMENT = new InjectionToken('DocumentToken');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PLATFORM_BROWSER_ID = 'browser';\nvar PLATFORM_SERVER_ID = 'server';\nvar PLATFORM_WORKER_APP_ID = 'browserWorkerApp';\nvar PLATFORM_WORKER_UI_ID = 'browserWorkerUi';\n/**\n * Returns whether a platform id represents a browser platform.\n * @publicApi\n */\nfunction isPlatformBrowser(platformId) {\n    return platformId === PLATFORM_BROWSER_ID;\n}\n/**\n * Returns whether a platform id represents a server platform.\n * @publicApi\n */\nfunction isPlatformServer(platformId) {\n    return platformId === PLATFORM_SERVER_ID;\n}\n/**\n * Returns whether a platform id represents a web worker app platform.\n * @publicApi\n */\nfunction isPlatformWorkerApp(platformId) {\n    return platformId === PLATFORM_WORKER_APP_ID;\n}\n/**\n * Returns whether a platform id represents a web worker UI platform.\n * @publicApi\n */\nfunction isPlatformWorkerUi(platformId) {\n    return platformId === PLATFORM_WORKER_UI_ID;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar VERSION = new Version('7.2.15');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a scroll position manager. Implemented by `BrowserViewportScroller`.\n *\n * @publicApi\n */\nvar ViewportScroller = /** @class */ (function () {\n    function ViewportScroller() {\n    }\n    // De-sugared tree-shakable injection\n    // See #23917\n    /** @nocollapse */\n    ViewportScroller.ngInjectableDef = defineInjectable({\n        providedIn: 'root',\n        factory: function () { return new BrowserViewportScroller(inject(DOCUMENT), window, inject(ErrorHandler)); }\n    });\n    return ViewportScroller;\n}());\n/**\n * Manages the scroll position for a browser window.\n */\nvar BrowserViewportScroller = /** @class */ (function () {\n    function BrowserViewportScroller(document, window, errorHandler) {\n        this.document = document;\n        this.window = window;\n        this.errorHandler = errorHandler;\n        this.offset = function () { return [0, 0]; };\n    }\n    /**\n     * Configures the top offset used when scrolling to an anchor.\n     * @param offset A position in screen coordinates (a tuple with x and y values)\n     * or a function that returns the top offset position.\n     *\n     */\n    BrowserViewportScroller.prototype.setOffset = function (offset) {\n        if (Array.isArray(offset)) {\n            this.offset = function () { return offset; };\n        }\n        else {\n            this.offset = offset;\n        }\n    };\n    /**\n     * Retrieves the current scroll position.\n     * @returns The position in screen coordinates.\n     */\n    BrowserViewportScroller.prototype.getScrollPosition = function () {\n        if (this.supportScrollRestoration()) {\n            return [this.window.scrollX, this.window.scrollY];\n        }\n        else {\n            return [0, 0];\n        }\n    };\n    /**\n     * Sets the scroll position.\n     * @param position The new position in screen coordinates.\n     */\n    BrowserViewportScroller.prototype.scrollToPosition = function (position) {\n        if (this.supportScrollRestoration()) {\n            this.window.scrollTo(position[0], position[1]);\n        }\n    };\n    /**\n     * Scrolls to an anchor element.\n     * @param anchor The ID of the anchor element.\n     */\n    BrowserViewportScroller.prototype.scrollToAnchor = function (anchor) {\n        if (this.supportScrollRestoration()) {\n            // Escape anything passed to `querySelector` as it can throw errors and stop the application\n            // from working if invalid values are passed.\n            if (this.window.CSS && this.window.CSS.escape) {\n                anchor = this.window.CSS.escape(anchor);\n            }\n            else {\n                anchor = anchor.replace(/(\\\"|\\'\\ |:|\\.|\\[|\\]|,|=)/g, '\\\\$1');\n            }\n            try {\n                var elSelectedById = this.document.querySelector(\"#\" + anchor);\n                if (elSelectedById) {\n                    this.scrollToElement(elSelectedById);\n                    return;\n                }\n                var elSelectedByName = this.document.querySelector(\"[name='\" + anchor + \"']\");\n                if (elSelectedByName) {\n                    this.scrollToElement(elSelectedByName);\n                    return;\n                }\n            }\n            catch (e) {\n                this.errorHandler.handleError(e);\n            }\n        }\n    };\n    /**\n     * Disables automatic scroll restoration provided by the browser.\n     */\n    BrowserViewportScroller.prototype.setHistoryScrollRestoration = function (scrollRestoration) {\n        if (this.supportScrollRestoration()) {\n            var history_1 = this.window.history;\n            if (history_1 && history_1.scrollRestoration) {\n                history_1.scrollRestoration = scrollRestoration;\n            }\n        }\n    };\n    BrowserViewportScroller.prototype.scrollToElement = function (el) {\n        var rect = el.getBoundingClientRect();\n        var left = rect.left + this.window.pageXOffset;\n        var top = rect.top + this.window.pageYOffset;\n        var offset = this.offset();\n        this.window.scrollTo(left - offset[0], top - offset[1]);\n    };\n    /**\n     * We only support scroll restoration when we can get a hold of window.\n     * This means that we do not support this behavior when running in a web worker.\n     *\n     * Lifting this restriction right now would require more changes in the dom adapter.\n     * Since webworkers aren't widely used, we will lift it once RouterScroller is\n     * battle-tested.\n     */\n    BrowserViewportScroller.prototype.supportScrollRestoration = function () {\n        try {\n            return !!this.window && !!this.window.scrollTo;\n        }\n        catch (_a) {\n            return false;\n        }\n    };\n    return BrowserViewportScroller;\n}());\n/**\n * Provides an empty implementation of the viewport scroller. This will\n * live in @angular/common as it will be used by both platform-server and platform-webworker.\n */\nvar NullViewportScroller = /** @class */ (function () {\n    function NullViewportScroller() {\n    }\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.setOffset = function (offset) { };\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.getScrollPosition = function () { return [0, 0]; };\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.scrollToPosition = function (position) { };\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.scrollToAnchor = function (anchor) { };\n    /**\n     * Empty implementation\n     */\n    NullViewportScroller.prototype.setHistoryScrollRestoration = function (scrollRestoration) { };\n    return NullViewportScroller;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { COMMON_DIRECTIVES as Éµangular_packages_common_common_e, findLocaleData as Éµangular_packages_common_common_d, DEPRECATED_PLURAL_FN as Éµangular_packages_common_common_a, getPluralCase as Éµangular_packages_common_common_b, COMMON_DEPRECATED_I18N_PIPES as Éµangular_packages_common_common_g, COMMON_PIPES as Éµangular_packages_common_common_f, registerLocaleData as ÉµregisterLocaleData, registerLocaleData, formatDate, formatCurrency, formatNumber, formatPercent, NgLocaleLocalization, NgLocalization, Plural, NumberFormatStyle, FormStyle, TranslationWidth, FormatWidth, NumberSymbol, WeekDay, getNumberOfCurrencyDigits, getCurrencySymbol, getLocaleDayPeriods, getLocaleDayNames, getLocaleMonthNames, getLocaleId, getLocaleEraNames, getLocaleWeekEndRange, getLocaleFirstDayOfWeek, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocalePluralCase, getLocaleTimeFormat, getLocaleNumberSymbol, getLocaleNumberFormat, getLocaleCurrencyName, getLocaleCurrencySymbol, parseCookieValue as ÉµparseCookieValue, CommonModule, DeprecatedI18NPipesModule, NgClass, NgForOf, NgForOfContext, NgIf, NgIfContext, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NgComponentOutlet, DOCUMENT, AsyncPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, JsonPipe, LowerCasePipe, CurrencyPipe, DecimalPipe, PercentPipe, SlicePipe, UpperCasePipe, TitleCasePipe, KeyValuePipe, DeprecatedDatePipe, DeprecatedCurrencyPipe, DeprecatedDecimalPipe, DeprecatedPercentPipe, PLATFORM_BROWSER_ID as ÉµPLATFORM_BROWSER_ID, PLATFORM_SERVER_ID as ÉµPLATFORM_SERVER_ID, PLATFORM_WORKER_APP_ID as ÉµPLATFORM_WORKER_APP_ID, PLATFORM_WORKER_UI_ID as ÉµPLATFORM_WORKER_UI_ID, isPlatformBrowser, isPlatformServer, isPlatformWorkerApp, isPlatformWorkerUi, VERSION, ViewportScroller, NullViewportScroller as ÉµNullViewportScroller, PlatformLocation, LOCATION_INITIALIZED, LocationStrategy, APP_BASE_HREF, HashLocationStrategy, PathLocationStrategy, Location };\n//# sourceMappingURL=common.js.map\n","/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n        return scheduleArray(args, scheduler);\n    }\n    else {\n        return fromArray(args);\n    }\n}\n//# sourceMappingURL=of.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nvar BehaviorSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject));\nexport { BehaviorSubject };\n//# sourceMappingURL=BehaviorSubject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction EmptyErrorImpl() {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n}\nEmptyErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nexport var EmptyError = EmptyErrorImpl;\n//# sourceMappingURL=EmptyError.js.map\n","/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = null;\n    var scheduler = null;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\n    function CombineLatestOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    };\n    return CombineLatestOperator;\n}());\nexport { CombineLatestOperator };\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber));\nexport { CombineLatestSubscriber };\n//# sourceMappingURL=combineLatest.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport var EMPTY = /*@__PURE__*/ new Observable(function (subscriber) { return subscriber.complete(); });\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map\n","/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from';\nimport { empty } from './empty';\nexport function defer(observableFactory) {\n    return new Observable(function (subscriber) {\n        var input;\n        try {\n            input = observableFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var source = input ? from(input) : empty();\n        return source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=defer.js.map\n","/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */\nimport { mergeAll } from './mergeAll';\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\nvar FilterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        return _this;\n    }\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=filter.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction ArgumentOutOfRangeErrorImpl() {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n}\nArgumentOutOfRangeErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nexport var ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nvar TakeLastOperator = /*@__PURE__*/ (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\nvar TakeLastSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.ring = new Array();\n        _this.count = 0;\n        return _this;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeLast.js.map\n","/** PURE_IMPORTS_START tslib,_util_EmptyError,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { EmptyError } from '../util/EmptyError';\nimport { Subscriber } from '../Subscriber';\nexport function throwIfEmpty(errorFactory) {\n    if (errorFactory === void 0) {\n        errorFactory = defaultErrorFactory;\n    }\n    return function (source) {\n        return source.lift(new ThrowIfEmptyOperator(errorFactory));\n    };\n}\nvar ThrowIfEmptyOperator = /*@__PURE__*/ (function () {\n    function ThrowIfEmptyOperator(errorFactory) {\n        this.errorFactory = errorFactory;\n    }\n    ThrowIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));\n    };\n    return ThrowIfEmptyOperator;\n}());\nvar ThrowIfEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ThrowIfEmptySubscriber, _super);\n    function ThrowIfEmptySubscriber(destination, errorFactory) {\n        var _this = _super.call(this, destination) || this;\n        _this.errorFactory = errorFactory;\n        _this.hasValue = false;\n        return _this;\n    }\n    ThrowIfEmptySubscriber.prototype._next = function (value) {\n        this.hasValue = true;\n        this.destination.next(value);\n    };\n    ThrowIfEmptySubscriber.prototype._complete = function () {\n        if (!this.hasValue) {\n            var err = void 0;\n            try {\n                err = this.errorFactory();\n            }\n            catch (e) {\n                err = e;\n            }\n            this.destination.error(err);\n        }\n        else {\n            return this.destination.complete();\n        }\n    };\n    return ThrowIfEmptySubscriber;\n}(Subscriber));\nfunction defaultErrorFactory() {\n    return new EmptyError();\n}\n//# sourceMappingURL=throwIfEmpty.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) {\n        defaultValue = null;\n    }\n    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };\n}\nvar DefaultIfEmptyOperator = /*@__PURE__*/ (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\nvar DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        var _this = _super.call(this, destination) || this;\n        _this.defaultValue = defaultValue;\n        _this.isEmpty = true;\n        return _this;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map\n","/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */\nimport { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\nexport function last(predicate, defaultValue) {\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, takeLast(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); })); };\n}\n//# sourceMappingURL=last.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nvar CatchOperator = /*@__PURE__*/ (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\nvar CatchSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        var _this = _super.call(this, destination) || this;\n        _this.selector = selector;\n        _this.caught = caught;\n        return _this;\n    }\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n            this.add(innerSubscriber);\n            subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=catchError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function take(count) {\n    return function (source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nvar TakeOperator = /*@__PURE__*/ (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\nvar TakeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=take.js.map\n","/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */\nimport { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\nexport function first(predicate, defaultValue) {\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); })); };\n}\n//# sourceMappingURL=first.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function every(predicate, thisArg) {\n    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };\n}\nvar EveryOperator = /*@__PURE__*/ (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\nvar EverySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.source = source;\n        _this.index = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber));\n//# sourceMappingURL=every.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function switchMap(project, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(switchMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) { return source.lift(new SwitchMapOperator(project)); };\n}\nvar SwitchMapOperator = /*@__PURE__*/ (function () {\n    function SwitchMapOperator(project) {\n        this.project = project;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    };\n    return SwitchMapOperator;\n}());\nvar SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        this.innerSubscription = subscribeToResult(this, result, value, index, innerSubscriber);\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n        this.unsubscribe();\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        destination.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n","/** PURE_IMPORTS_START _of,_operators_concatAll PURE_IMPORTS_END */\nimport { of } from './of';\nimport { concatAll } from '../operators/concatAll';\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return concatAll()(of.apply(void 0, observables));\n}\n//# sourceMappingURL=concat.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n    var hasSeed = false;\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nvar ScanOperator = /*@__PURE__*/ (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) {\n            hasSeed = false;\n        }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\nvar ScanSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this._seed = _seed;\n        _this.hasSeed = hasSeed;\n        _this.index = 0;\n        return _this;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber));\n//# sourceMappingURL=scan.js.map\n","/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nexport function concatMap(project, resultSelector) {\n    return mergeMap(project, resultSelector, 1);\n}\n//# sourceMappingURL=concatMap.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\nexport function tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nvar DoOperator = /*@__PURE__*/ (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\nvar TapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TapSubscriber, _super);\n    function TapSubscriber(destination, observerOrNext, error, complete) {\n        var _this = _super.call(this, destination) || this;\n        _this._tapNext = noop;\n        _this._tapError = noop;\n        _this._tapComplete = noop;\n        _this._tapError = error || noop;\n        _this._tapComplete = complete || noop;\n        if (isFunction(observerOrNext)) {\n            _this._context = _this;\n            _this._tapNext = observerOrNext;\n        }\n        else if (observerOrNext) {\n            _this._context = observerOrNext;\n            _this._tapNext = observerOrNext.next || noop;\n            _this._tapError = observerOrNext.error || noop;\n            _this._tapComplete = observerOrNext.complete || noop;\n        }\n        return _this;\n    }\n    TapSubscriber.prototype._next = function (value) {\n        try {\n            this._tapNext.call(this._context, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(value);\n    };\n    TapSubscriber.prototype._error = function (err) {\n        try {\n            this._tapError.call(this._context, err);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.error(err);\n    };\n    TapSubscriber.prototype._complete = function () {\n        try {\n            this._tapComplete.call(this._context);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        return this.destination.complete();\n    };\n    return TapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=tap.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nexport function finalize(callback) {\n    return function (source) { return source.lift(new FinallyOperator(callback)); };\n}\nvar FinallyOperator = /*@__PURE__*/ (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\nvar FinallySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        var _this = _super.call(this, destination) || this;\n        _this.add(new Subscription(callback));\n        return _this;\n    }\n    return FinallySubscriber;\n}(Subscriber));\n//# sourceMappingURL=finalize.js.map\n","/**\n * @license Angular v7.2.15\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __extends, __spread, __decorate, __param, __metadata, __assign } from 'tslib';\nimport { ÉµparseCookieValue, DOCUMENT, PlatformLocation, isPlatformServer, ÉµPLATFORM_BROWSER_ID, CommonModule } from '@angular/common';\nimport { Éµglobal, Injectable, Inject, InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, NgProbeToken, Optional, ApplicationRef, NgZone, getDebugNode, ViewEncapsulation, APP_ID, RendererStyleFlags2, PLATFORM_ID, ÉµConsole, SecurityContext, Éµ_sanitizeHtml, Éµ_sanitizeStyle, Éµ_sanitizeUrl, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ErrorHandler, ÉµAPP_ROOT, RendererFactory2, Testability, NgModule, ApplicationModule, SkipSelf, inject, defineInjectable, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _DOM = null;\nfunction getDOM() {\n    return _DOM;\n}\nfunction setRootDomAdapter(adapter) {\n    if (!_DOM) {\n        _DOM = adapter;\n    }\n}\n/* tslint:disable:requireParameterType */\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nvar DomAdapter = /** @class */ (function () {\n    function DomAdapter() {\n        this.resourceLoaderType = null;\n    }\n    Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\n        /**\n         * Maps attribute names to their corresponding property names for cases\n         * where attribute name doesn't match property name.\n         */\n        get: function () { return this._attrToPropMap; },\n        set: function (value) { this._attrToPropMap = value; },\n        enumerable: true,\n        configurable: true\n    });\n    return DomAdapter;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nvar GenericBrowserDomAdapter = /** @class */ (function (_super) {\n    __extends(GenericBrowserDomAdapter, _super);\n    function GenericBrowserDomAdapter() {\n        var _this = _super.call(this) || this;\n        _this._animationPrefix = null;\n        _this._transitionEnd = null;\n        try {\n            var element_1 = _this.createElement('div', document);\n            if (_this.getStyle(element_1, 'animationName') != null) {\n                _this._animationPrefix = '';\n            }\n            else {\n                var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n                for (var i = 0; i < domPrefixes.length; i++) {\n                    if (_this.getStyle(element_1, domPrefixes[i] + 'AnimationName') != null) {\n                        _this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n                        break;\n                    }\n                }\n            }\n            var transEndEventNames_1 = {\n                WebkitTransition: 'webkitTransitionEnd',\n                MozTransition: 'transitionend',\n                OTransition: 'oTransitionEnd otransitionend',\n                transition: 'transitionend'\n            };\n            Object.keys(transEndEventNames_1).forEach(function (key) {\n                if (_this.getStyle(element_1, key) != null) {\n                    _this._transitionEnd = transEndEventNames_1[key];\n                }\n            });\n        }\n        catch (_a) {\n            _this._animationPrefix = null;\n            _this._transitionEnd = null;\n        }\n        return _this;\n    }\n    GenericBrowserDomAdapter.prototype.getDistributedNodes = function (el) { return el.getDistributedNodes(); };\n    GenericBrowserDomAdapter.prototype.resolveAndSetHref = function (el, baseUrl, href) {\n        el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n    };\n    GenericBrowserDomAdapter.prototype.supportsDOMEvents = function () { return true; };\n    GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function () {\n        return typeof document.body.createShadowRoot === 'function';\n    };\n    GenericBrowserDomAdapter.prototype.getAnimationPrefix = function () { return this._animationPrefix ? this._animationPrefix : ''; };\n    GenericBrowserDomAdapter.prototype.getTransitionEnd = function () { return this._transitionEnd ? this._transitionEnd : ''; };\n    GenericBrowserDomAdapter.prototype.supportsAnimation = function () {\n        return this._animationPrefix != null && this._transitionEnd != null;\n    };\n    return GenericBrowserDomAdapter;\n}(DomAdapter));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _attrToPropMap = {\n    'class': 'className',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DOM_KEY_LOCATION_NUMPAD = 3;\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nvar _keyMap = {\n    // The following values are here for cross-browser compatibility and to match the W3C standard\n    // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nvar _chromeNumKeyPadMap = {\n    'A': '1',\n    'B': '2',\n    'C': '3',\n    'D': '4',\n    'E': '5',\n    'F': '6',\n    'G': '7',\n    'H': '8',\n    'I': '9',\n    'J': '*',\n    'K': '+',\n    'M': '-',\n    'N': '.',\n    'O': '/',\n    '\\x60': '0',\n    '\\x90': 'NumLock'\n};\nvar nodeContains;\nif (Éµglobal['Node']) {\n    nodeContains = Éµglobal['Node'].prototype.contains || function (node) {\n        return !!(this.compareDocumentPosition(node) & 16);\n    };\n}\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nvar BrowserDomAdapter = /** @class */ (function (_super) {\n    __extends(BrowserDomAdapter, _super);\n    function BrowserDomAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BrowserDomAdapter.prototype.parse = function (templateHtml) { throw new Error('parse not implemented'); };\n    BrowserDomAdapter.makeCurrent = function () { setRootDomAdapter(new BrowserDomAdapter()); };\n    BrowserDomAdapter.prototype.hasProperty = function (element, name) { return name in element; };\n    BrowserDomAdapter.prototype.setProperty = function (el, name, value) { el[name] = value; };\n    BrowserDomAdapter.prototype.getProperty = function (el, name) { return el[name]; };\n    BrowserDomAdapter.prototype.invoke = function (el, methodName, args) {\n        var _a;\n        (_a = el)[methodName].apply(_a, __spread(args));\n    };\n    // TODO(tbosch): move this into a separate environment class once we have it\n    BrowserDomAdapter.prototype.logError = function (error) {\n        if (window.console) {\n            if (console.error) {\n                console.error(error);\n            }\n            else {\n                console.log(error);\n            }\n        }\n    };\n    BrowserDomAdapter.prototype.log = function (error) {\n        if (window.console) {\n            window.console.log && window.console.log(error);\n        }\n    };\n    BrowserDomAdapter.prototype.logGroup = function (error) {\n        if (window.console) {\n            window.console.group && window.console.group(error);\n        }\n    };\n    BrowserDomAdapter.prototype.logGroupEnd = function () {\n        if (window.console) {\n            window.console.groupEnd && window.console.groupEnd();\n        }\n    };\n    Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\n        get: function () { return _attrToPropMap; },\n        enumerable: true,\n        configurable: true\n    });\n    BrowserDomAdapter.prototype.contains = function (nodeA, nodeB) { return nodeContains.call(nodeA, nodeB); };\n    BrowserDomAdapter.prototype.querySelector = function (el, selector) { return el.querySelector(selector); };\n    BrowserDomAdapter.prototype.querySelectorAll = function (el, selector) { return el.querySelectorAll(selector); };\n    BrowserDomAdapter.prototype.on = function (el, evt, listener) { el.addEventListener(evt, listener, false); };\n    BrowserDomAdapter.prototype.onAndCancel = function (el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return function () { el.removeEventListener(evt, listener, false); };\n    };\n    BrowserDomAdapter.prototype.dispatchEvent = function (el, evt) { el.dispatchEvent(evt); };\n    BrowserDomAdapter.prototype.createMouseEvent = function (eventType) {\n        var evt = this.getDefaultDocument().createEvent('MouseEvent');\n        evt.initEvent(eventType, true, true);\n        return evt;\n    };\n    BrowserDomAdapter.prototype.createEvent = function (eventType) {\n        var evt = this.getDefaultDocument().createEvent('Event');\n        evt.initEvent(eventType, true, true);\n        return evt;\n    };\n    BrowserDomAdapter.prototype.preventDefault = function (evt) {\n        evt.preventDefault();\n        evt.returnValue = false;\n    };\n    BrowserDomAdapter.prototype.isPrevented = function (evt) {\n        return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\n    };\n    BrowserDomAdapter.prototype.getInnerHTML = function (el) { return el.innerHTML; };\n    BrowserDomAdapter.prototype.getTemplateContent = function (el) {\n        return 'content' in el && this.isTemplateElement(el) ? el.content : null;\n    };\n    BrowserDomAdapter.prototype.getOuterHTML = function (el) { return el.outerHTML; };\n    BrowserDomAdapter.prototype.nodeName = function (node) { return node.nodeName; };\n    BrowserDomAdapter.prototype.nodeValue = function (node) { return node.nodeValue; };\n    BrowserDomAdapter.prototype.type = function (node) { return node.type; };\n    BrowserDomAdapter.prototype.content = function (node) {\n        if (this.hasProperty(node, 'content')) {\n            return node.content;\n        }\n        else {\n            return node;\n        }\n    };\n    BrowserDomAdapter.prototype.firstChild = function (el) { return el.firstChild; };\n    BrowserDomAdapter.prototype.nextSibling = function (el) { return el.nextSibling; };\n    BrowserDomAdapter.prototype.parentElement = function (el) { return el.parentNode; };\n    BrowserDomAdapter.prototype.childNodes = function (el) { return el.childNodes; };\n    BrowserDomAdapter.prototype.childNodesAsList = function (el) {\n        var childNodes = el.childNodes;\n        var res = new Array(childNodes.length);\n        for (var i = 0; i < childNodes.length; i++) {\n            res[i] = childNodes[i];\n        }\n        return res;\n    };\n    BrowserDomAdapter.prototype.clearNodes = function (el) {\n        while (el.firstChild) {\n            el.removeChild(el.firstChild);\n        }\n    };\n    BrowserDomAdapter.prototype.appendChild = function (el, node) { el.appendChild(node); };\n    BrowserDomAdapter.prototype.removeChild = function (el, node) { el.removeChild(node); };\n    BrowserDomAdapter.prototype.replaceChild = function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\n    BrowserDomAdapter.prototype.remove = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n        return node;\n    };\n    BrowserDomAdapter.prototype.insertBefore = function (parent, ref, node) { parent.insertBefore(node, ref); };\n    BrowserDomAdapter.prototype.insertAllBefore = function (parent, ref, nodes) {\n        nodes.forEach(function (n) { return parent.insertBefore(n, ref); });\n    };\n    BrowserDomAdapter.prototype.insertAfter = function (parent, ref, node) { parent.insertBefore(node, ref.nextSibling); };\n    BrowserDomAdapter.prototype.setInnerHTML = function (el, value) { el.innerHTML = value; };\n    BrowserDomAdapter.prototype.getText = function (el) { return el.textContent; };\n    BrowserDomAdapter.prototype.setText = function (el, value) { el.textContent = value; };\n    BrowserDomAdapter.prototype.getValue = function (el) { return el.value; };\n    BrowserDomAdapter.prototype.setValue = function (el, value) { el.value = value; };\n    BrowserDomAdapter.prototype.getChecked = function (el) { return el.checked; };\n    BrowserDomAdapter.prototype.setChecked = function (el, value) { el.checked = value; };\n    BrowserDomAdapter.prototype.createComment = function (text) { return this.getDefaultDocument().createComment(text); };\n    BrowserDomAdapter.prototype.createTemplate = function (html) {\n        var t = this.getDefaultDocument().createElement('template');\n        t.innerHTML = html;\n        return t;\n    };\n    BrowserDomAdapter.prototype.createElement = function (tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    };\n    BrowserDomAdapter.prototype.createElementNS = function (ns, tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElementNS(ns, tagName);\n    };\n    BrowserDomAdapter.prototype.createTextNode = function (text, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createTextNode(text);\n    };\n    BrowserDomAdapter.prototype.createScriptTag = function (attrName, attrValue, doc) {\n        doc = doc || this.getDefaultDocument();\n        var el = doc.createElement('SCRIPT');\n        el.setAttribute(attrName, attrValue);\n        return el;\n    };\n    BrowserDomAdapter.prototype.createStyleElement = function (css, doc) {\n        doc = doc || this.getDefaultDocument();\n        var style = doc.createElement('style');\n        this.appendChild(style, this.createTextNode(css, doc));\n        return style;\n    };\n    BrowserDomAdapter.prototype.createShadowRoot = function (el) { return el.createShadowRoot(); };\n    BrowserDomAdapter.prototype.getShadowRoot = function (el) { return el.shadowRoot; };\n    BrowserDomAdapter.prototype.getHost = function (el) { return el.host; };\n    BrowserDomAdapter.prototype.clone = function (node) { return node.cloneNode(true); };\n    BrowserDomAdapter.prototype.getElementsByClassName = function (element, name) {\n        return element.getElementsByClassName(name);\n    };\n    BrowserDomAdapter.prototype.getElementsByTagName = function (element, name) {\n        return element.getElementsByTagName(name);\n    };\n    BrowserDomAdapter.prototype.classList = function (element) { return Array.prototype.slice.call(element.classList, 0); };\n    BrowserDomAdapter.prototype.addClass = function (element, className) { element.classList.add(className); };\n    BrowserDomAdapter.prototype.removeClass = function (element, className) { element.classList.remove(className); };\n    BrowserDomAdapter.prototype.hasClass = function (element, className) {\n        return element.classList.contains(className);\n    };\n    BrowserDomAdapter.prototype.setStyle = function (element, styleName, styleValue) {\n        element.style[styleName] = styleValue;\n    };\n    BrowserDomAdapter.prototype.removeStyle = function (element, stylename) {\n        // IE requires '' instead of null\n        // see https://github.com/angular/angular/issues/7916\n        element.style[stylename] = '';\n    };\n    BrowserDomAdapter.prototype.getStyle = function (element, stylename) { return element.style[stylename]; };\n    BrowserDomAdapter.prototype.hasStyle = function (element, styleName, styleValue) {\n        var value = this.getStyle(element, styleName) || '';\n        return styleValue ? value == styleValue : value.length > 0;\n    };\n    BrowserDomAdapter.prototype.tagName = function (element) { return element.tagName; };\n    BrowserDomAdapter.prototype.attributeMap = function (element) {\n        var res = new Map();\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var attrib = elAttrs.item(i);\n            res.set(attrib.name, attrib.value);\n        }\n        return res;\n    };\n    BrowserDomAdapter.prototype.hasAttribute = function (element, attribute) {\n        return element.hasAttribute(attribute);\n    };\n    BrowserDomAdapter.prototype.hasAttributeNS = function (element, ns, attribute) {\n        return element.hasAttributeNS(ns, attribute);\n    };\n    BrowserDomAdapter.prototype.getAttribute = function (element, attribute) {\n        return element.getAttribute(attribute);\n    };\n    BrowserDomAdapter.prototype.getAttributeNS = function (element, ns, name) {\n        return element.getAttributeNS(ns, name);\n    };\n    BrowserDomAdapter.prototype.setAttribute = function (element, name, value) { element.setAttribute(name, value); };\n    BrowserDomAdapter.prototype.setAttributeNS = function (element, ns, name, value) {\n        element.setAttributeNS(ns, name, value);\n    };\n    BrowserDomAdapter.prototype.removeAttribute = function (element, attribute) { element.removeAttribute(attribute); };\n    BrowserDomAdapter.prototype.removeAttributeNS = function (element, ns, name) {\n        element.removeAttributeNS(ns, name);\n    };\n    BrowserDomAdapter.prototype.templateAwareRoot = function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\n    BrowserDomAdapter.prototype.createHtmlDocument = function () {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    };\n    BrowserDomAdapter.prototype.getDefaultDocument = function () { return document; };\n    BrowserDomAdapter.prototype.getBoundingClientRect = function (el) {\n        try {\n            return el.getBoundingClientRect();\n        }\n        catch (_a) {\n            return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\n        }\n    };\n    BrowserDomAdapter.prototype.getTitle = function (doc) { return doc.title; };\n    BrowserDomAdapter.prototype.setTitle = function (doc, newTitle) { doc.title = newTitle || ''; };\n    BrowserDomAdapter.prototype.elementMatches = function (n, selector) {\n        if (this.isElementNode(n)) {\n            return n.matches && n.matches(selector) ||\n                n.msMatchesSelector && n.msMatchesSelector(selector) ||\n                n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n        }\n        return false;\n    };\n    BrowserDomAdapter.prototype.isTemplateElement = function (el) {\n        return this.isElementNode(el) && el.nodeName === 'TEMPLATE';\n    };\n    BrowserDomAdapter.prototype.isTextNode = function (node) { return node.nodeType === Node.TEXT_NODE; };\n    BrowserDomAdapter.prototype.isCommentNode = function (node) { return node.nodeType === Node.COMMENT_NODE; };\n    BrowserDomAdapter.prototype.isElementNode = function (node) { return node.nodeType === Node.ELEMENT_NODE; };\n    BrowserDomAdapter.prototype.hasShadowRoot = function (node) {\n        return node.shadowRoot != null && node instanceof HTMLElement;\n    };\n    BrowserDomAdapter.prototype.isShadowRoot = function (node) { return node instanceof DocumentFragment; };\n    BrowserDomAdapter.prototype.importIntoDoc = function (node) { return document.importNode(this.templateAwareRoot(node), true); };\n    BrowserDomAdapter.prototype.adoptNode = function (node) { return document.adoptNode(node); };\n    BrowserDomAdapter.prototype.getHref = function (el) { return el.getAttribute('href'); };\n    BrowserDomAdapter.prototype.getEventKey = function (event) {\n        var key = event.key;\n        if (key == null) {\n            key = event.keyIdentifier;\n            // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n            // Safari cf\n            // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n            if (key == null) {\n                return 'Unidentified';\n            }\n            if (key.startsWith('U+')) {\n                key = String.fromCharCode(parseInt(key.substring(2), 16));\n                if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                    // There is a bug in Chrome for numeric keypad keys:\n                    // https://code.google.com/p/chromium/issues/detail?id=155654\n                    // 1, 2, 3 ... are reported as A, B, C ...\n                    key = _chromeNumKeyPadMap[key];\n                }\n            }\n        }\n        return _keyMap[key] || key;\n    };\n    BrowserDomAdapter.prototype.getGlobalEventTarget = function (doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    };\n    BrowserDomAdapter.prototype.getHistory = function () { return window.history; };\n    BrowserDomAdapter.prototype.getLocation = function () { return window.location; };\n    BrowserDomAdapter.prototype.getBaseHref = function (doc) {\n        var href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    };\n    BrowserDomAdapter.prototype.resetBaseElement = function () { baseElement = null; };\n    BrowserDomAdapter.prototype.getUserAgent = function () { return window.navigator.userAgent; };\n    BrowserDomAdapter.prototype.setData = function (element, name, value) {\n        this.setAttribute(element, 'data-' + name, value);\n    };\n    BrowserDomAdapter.prototype.getData = function (element, name) {\n        return this.getAttribute(element, 'data-' + name);\n    };\n    BrowserDomAdapter.prototype.getComputedStyle = function (element) { return getComputedStyle(element); };\n    // TODO(tbosch): move this into a separate environment class once we have it\n    BrowserDomAdapter.prototype.supportsWebAnimation = function () {\n        return typeof Element.prototype['animate'] === 'function';\n    };\n    BrowserDomAdapter.prototype.performanceNow = function () {\n        // performance.now() is not available in all browsers, see\n        // http://caniuse.com/#search=performance.now\n        return window.performance && window.performance.now ? window.performance.now() :\n            new Date().getTime();\n    };\n    BrowserDomAdapter.prototype.supportsCookies = function () { return true; };\n    BrowserDomAdapter.prototype.getCookie = function (name) { return ÉµparseCookieValue(document.cookie, name); };\n    BrowserDomAdapter.prototype.setCookie = function (name, value) {\n        // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n        // not clear other cookies.\n        document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n    };\n    return BrowserDomAdapter;\n}(GenericBrowserDomAdapter));\nvar baseElement = null;\nfunction getBaseElementHref() {\n    if (!baseElement) {\n        baseElement = document.querySelector('base');\n        if (!baseElement) {\n            return null;\n        }\n    }\n    return baseElement.getAttribute('href');\n}\n// based on urlUtils.js in AngularJS 1\nvar urlParsingNode;\nfunction relativePath(url) {\n    if (!urlParsingNode) {\n        urlParsingNode = document.createElement('a');\n    }\n    urlParsingNode.setAttribute('href', url);\n    return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n        '/' + urlParsingNode.pathname;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @deprecated import from `@angular/common` instead.\n * @publicApi\n */\nvar DOCUMENT$1 = DOCUMENT;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction supportsState() {\n    return !!window.history.pushState;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n */\nvar BrowserPlatformLocation = /** @class */ (function (_super) {\n    __extends(BrowserPlatformLocation, _super);\n    function BrowserPlatformLocation(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        _this._init();\n        return _this;\n    }\n    // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n    /** @internal */\n    BrowserPlatformLocation.prototype._init = function () {\n        this.location = getDOM().getLocation();\n        this._history = getDOM().getHistory();\n    };\n    BrowserPlatformLocation.prototype.getBaseHrefFromDOM = function () { return getDOM().getBaseHref(this._doc); };\n    BrowserPlatformLocation.prototype.onPopState = function (fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n    };\n    BrowserPlatformLocation.prototype.onHashChange = function (fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n    };\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"pathname\", {\n        get: function () { return this.location.pathname; },\n        set: function (newPath) { this.location.pathname = newPath; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"search\", {\n        get: function () { return this.location.search; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"hash\", {\n        get: function () { return this.location.hash; },\n        enumerable: true,\n        configurable: true\n    });\n    BrowserPlatformLocation.prototype.pushState = function (state, title, url) {\n        if (supportsState()) {\n            this._history.pushState(state, title, url);\n        }\n        else {\n            this.location.hash = url;\n        }\n    };\n    BrowserPlatformLocation.prototype.replaceState = function (state, title, url) {\n        if (supportsState()) {\n            this._history.replaceState(state, title, url);\n        }\n        else {\n            this.location.hash = url;\n        }\n    };\n    BrowserPlatformLocation.prototype.forward = function () { this._history.forward(); };\n    BrowserPlatformLocation.prototype.back = function () { this._history.back(); };\n    BrowserPlatformLocation = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT$1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], BrowserPlatformLocation);\n    return BrowserPlatformLocation;\n}(PlatformLocation));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nvar TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return function () {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(function () {\n            var dom = getDOM();\n            var styles = Array.prototype.slice.apply(dom.querySelectorAll(document, \"style[ng-transition]\"));\n            styles.filter(function (el) { return dom.getAttribute(el, 'ng-transition') === transitionId; })\n                .forEach(function (el) { return dom.remove(el); });\n        });\n    };\n}\nvar SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT$1, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BrowserGetTestability = /** @class */ (function () {\n    function BrowserGetTestability() {\n    }\n    BrowserGetTestability.init = function () { setTestabilityGetter(new BrowserGetTestability()); };\n    BrowserGetTestability.prototype.addToWindow = function (registry) {\n        Éµglobal['getAngularTestability'] = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            var testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        Éµglobal['getAllAngularTestabilities'] = function () { return registry.getAllTestabilities(); };\n        Éµglobal['getAllAngularRootElements'] = function () { return registry.getAllRootElements(); };\n        var whenAllStable = function (callback /** TODO #9100 */) {\n            var testabilities = Éµglobal['getAllAngularTestabilities']();\n            var count = testabilities.length;\n            var didWork = false;\n            var decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!Éµglobal['frameworkStabilizers']) {\n            Éµglobal['frameworkStabilizers'] = [];\n        }\n        Éµglobal['frameworkStabilizers'].push(whenAllStable);\n    };\n    BrowserGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        var t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (getDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n        }\n        return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n    };\n    return BrowserGetTestability;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        var ng = Éµglobal['ng'] = Éµglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE_TOKENS = {\n    'ApplicationRef': ApplicationRef,\n    'NgZone': NgZone,\n};\nvar INSPECT_GLOBAL_NAME = 'probe';\nvar CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nfunction inspectNativeElement(element) {\n    return getDebugNode(element);\n}\nfunction _createNgProbe(coreTokens) {\n    exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n    exportNgVar(CORE_TOKENS_GLOBAL_NAME, __assign({}, CORE_TOKENS, _ngProbeTokensToMap(coreTokens || [])));\n    return function () { return inspectNativeElement; };\n}\nfunction _ngProbeTokensToMap(tokens) {\n    return tokens.reduce(function (prev, t) { return (prev[t.name] = t.token, prev); }, {});\n}\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nvar ELEMENT_PROBE_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: _createNgProbe,\n        deps: [\n            [NgProbeToken, new Optional()],\n        ],\n        multi: true,\n    },\n];\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nvar EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nvar EventManager = /** @class */ (function () {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    function EventManager(plugins, _zone) {\n        var _this = this;\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(function (p) { return p.manager = _this; });\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    EventManager.prototype.addEventListener = function (element, eventName, handler) {\n        var plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    };\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     */\n    EventManager.prototype.addGlobalEventListener = function (target, eventName, handler) {\n        var plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    };\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    EventManager.prototype.getZone = function () { return this._zone; };\n    /** @internal */\n    EventManager.prototype._findPluginFor = function (eventName) {\n        var plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        var plugins = this._plugins;\n        for (var i = 0; i < plugins.length; i++) {\n            var plugin_1 = plugins[i];\n            if (plugin_1.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin_1);\n                return plugin_1;\n            }\n        }\n        throw new Error(\"No event manager plugin found for event \" + eventName);\n    };\n    EventManager = __decorate([\n        Injectable(),\n        __param(0, Inject(EVENT_MANAGER_PLUGINS)),\n        __metadata(\"design:paramtypes\", [Array, NgZone])\n    ], EventManager);\n    return EventManager;\n}());\nvar EventManagerPlugin = /** @class */ (function () {\n    function EventManagerPlugin(_doc) {\n        this._doc = _doc;\n    }\n    EventManagerPlugin.prototype.addGlobalEventListener = function (element, eventName, handler) {\n        var target = getDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(\"Unsupported event target \" + target + \" for event \" + eventName);\n        }\n        return this.addEventListener(target, eventName, handler);\n    };\n    return EventManagerPlugin;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SharedStylesHost = /** @class */ (function () {\n    function SharedStylesHost() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    SharedStylesHost.prototype.addStyles = function (styles) {\n        var _this = this;\n        var additions = new Set();\n        styles.forEach(function (style) {\n            if (!_this._stylesSet.has(style)) {\n                _this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    };\n    SharedStylesHost.prototype.onStylesAdded = function (additions) { };\n    SharedStylesHost.prototype.getAllStyles = function () { return Array.from(this._stylesSet); };\n    SharedStylesHost = __decorate([\n        Injectable()\n    ], SharedStylesHost);\n    return SharedStylesHost;\n}());\nvar DomSharedStylesHost = /** @class */ (function (_super) {\n    __extends(DomSharedStylesHost, _super);\n    function DomSharedStylesHost(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        _this._hostNodes = new Set();\n        _this._styleNodes = new Set();\n        _this._hostNodes.add(_doc.head);\n        return _this;\n    }\n    DomSharedStylesHost.prototype._addStylesToHost = function (styles, host) {\n        var _this = this;\n        styles.forEach(function (style) {\n            var styleEl = _this._doc.createElement('style');\n            styleEl.textContent = style;\n            _this._styleNodes.add(host.appendChild(styleEl));\n        });\n    };\n    DomSharedStylesHost.prototype.addHost = function (hostNode) {\n        this._addStylesToHost(this._stylesSet, hostNode);\n        this._hostNodes.add(hostNode);\n    };\n    DomSharedStylesHost.prototype.removeHost = function (hostNode) { this._hostNodes.delete(hostNode); };\n    DomSharedStylesHost.prototype.onStylesAdded = function (additions) {\n        var _this = this;\n        this._hostNodes.forEach(function (hostNode) { return _this._addStylesToHost(additions, hostNode); });\n    };\n    DomSharedStylesHost.prototype.ngOnDestroy = function () { this._styleNodes.forEach(function (styleNode) { return getDOM().remove(styleNode); }); };\n    DomSharedStylesHost = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT$1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], DomSharedStylesHost);\n    return DomSharedStylesHost;\n}(SharedStylesHost));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\nvar COMPONENT_REGEX = /%COMP%/g;\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n    for (var i = 0; i < styles.length; i++) {\n        var style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n    return function (event) {\n        var allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n    };\n}\nvar DomRendererFactory2 = /** @class */ (function () {\n    function DomRendererFactory2(eventManager, sharedStylesHost, appId) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    DomRendererFactory2.prototype.createRenderer = function (element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                var renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            case ViewEncapsulation.Native:\n            case ViewEncapsulation.ShadowDom:\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    var styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    };\n    DomRendererFactory2.prototype.begin = function () { };\n    DomRendererFactory2.prototype.end = function () { };\n    DomRendererFactory2 = __decorate([\n        Injectable(),\n        __param(2, Inject(APP_ID)),\n        __metadata(\"design:paramtypes\", [EventManager, DomSharedStylesHost, String])\n    ], DomRendererFactory2);\n    return DomRendererFactory2;\n}());\nvar DefaultDomRenderer2 = /** @class */ (function () {\n    function DefaultDomRenderer2(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n    }\n    DefaultDomRenderer2.prototype.destroy = function () { };\n    DefaultDomRenderer2.prototype.createElement = function (name, namespace) {\n        if (namespace) {\n            return document.createElementNS(NAMESPACE_URIS[namespace], name);\n        }\n        return document.createElement(name);\n    };\n    DefaultDomRenderer2.prototype.createComment = function (value) { return document.createComment(value); };\n    DefaultDomRenderer2.prototype.createText = function (value) { return document.createTextNode(value); };\n    DefaultDomRenderer2.prototype.appendChild = function (parent, newChild) { parent.appendChild(newChild); };\n    DefaultDomRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        if (parent) {\n            parent.insertBefore(newChild, refChild);\n        }\n    };\n    DefaultDomRenderer2.prototype.removeChild = function (parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    };\n    DefaultDomRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n        var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(\"The selector \\\"\" + selectorOrNode + \"\\\" did not match any elements\");\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    };\n    DefaultDomRenderer2.prototype.parentNode = function (node) { return node.parentNode; };\n    DefaultDomRenderer2.prototype.nextSibling = function (node) { return node.nextSibling; };\n    DefaultDomRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + \":\" + name;\n            var namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    };\n    DefaultDomRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        if (namespace) {\n            var namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(namespace + \":\" + name);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    };\n    DefaultDomRenderer2.prototype.addClass = function (el, name) { el.classList.add(name); };\n    DefaultDomRenderer2.prototype.removeClass = function (el, name) { el.classList.remove(name); };\n    DefaultDomRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.setProperty(style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    };\n    DefaultDomRenderer2.prototype.removeStyle = function (el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    };\n    DefaultDomRenderer2.prototype.setProperty = function (el, name, value) {\n        checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    };\n    DefaultDomRenderer2.prototype.setValue = function (node, value) { node.nodeValue = value; };\n    DefaultDomRenderer2.prototype.listen = function (target, event, callback) {\n        checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    };\n    return DefaultDomRenderer2;\n}());\nvar AT_CHARCODE = '@'.charCodeAt(0);\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(\"Found the synthetic \" + nameKind + \" \" + name + \". Please include either \\\"BrowserAnimationsModule\\\" or \\\"NoopAnimationsModule\\\" in your application.\");\n    }\n}\nvar EmulatedEncapsulationDomRenderer2 = /** @class */ (function (_super) {\n    __extends(EmulatedEncapsulationDomRenderer2, _super);\n    function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component, appId) {\n        var _this = _super.call(this, eventManager) || this;\n        _this.component = component;\n        var styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        _this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n        _this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n        return _this;\n    }\n    EmulatedEncapsulationDomRenderer2.prototype.applyToHost = function (element) { _super.prototype.setAttribute.call(this, element, this.hostAttr, ''); };\n    EmulatedEncapsulationDomRenderer2.prototype.createElement = function (parent, name) {\n        var el = _super.prototype.createElement.call(this, parent, name);\n        _super.prototype.setAttribute.call(this, el, this.contentAttr, '');\n        return el;\n    };\n    return EmulatedEncapsulationDomRenderer2;\n}(DefaultDomRenderer2));\nvar ShadowDomRenderer = /** @class */ (function (_super) {\n    __extends(ShadowDomRenderer, _super);\n    function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {\n        var _this = _super.call(this, eventManager) || this;\n        _this.sharedStylesHost = sharedStylesHost;\n        _this.hostEl = hostEl;\n        _this.component = component;\n        if (component.encapsulation === ViewEncapsulation.ShadowDom) {\n            _this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        }\n        else {\n            _this.shadowRoot = hostEl.createShadowRoot();\n        }\n        _this.sharedStylesHost.addHost(_this.shadowRoot);\n        var styles = flattenStyles(component.id, component.styles, []);\n        for (var i = 0; i < styles.length; i++) {\n            var styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            _this.shadowRoot.appendChild(styleEl);\n        }\n        return _this;\n    }\n    ShadowDomRenderer.prototype.nodeOrShadowRoot = function (node) { return node === this.hostEl ? this.shadowRoot : node; };\n    ShadowDomRenderer.prototype.destroy = function () { this.sharedStylesHost.removeHost(this.shadowRoot); };\n    ShadowDomRenderer.prototype.appendChild = function (parent, newChild) {\n        return _super.prototype.appendChild.call(this, this.nodeOrShadowRoot(parent), newChild);\n    };\n    ShadowDomRenderer.prototype.insertBefore = function (parent, newChild, refChild) {\n        return _super.prototype.insertBefore.call(this, this.nodeOrShadowRoot(parent), newChild, refChild);\n    };\n    ShadowDomRenderer.prototype.removeChild = function (parent, oldChild) {\n        return _super.prototype.removeChild.call(this, this.nodeOrShadowRoot(parent), oldChild);\n    };\n    ShadowDomRenderer.prototype.parentNode = function (node) {\n        return this.nodeOrShadowRoot(_super.prototype.parentNode.call(this, this.nodeOrShadowRoot(node)));\n    };\n    return ShadowDomRenderer;\n}(DefaultDomRenderer2));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Éµ0 = function (v) {\n    return '__zone_symbol__' + v;\n};\n/**\n * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'\n * since Angular can do much more\n * efficient bookkeeping than Zone can, because we have additional information. This speeds up\n * addEventListener by 3x.\n */\nvar __symbol__ = (typeof Zone !== 'undefined') && Zone['__symbol__'] || Éµ0;\nvar ADD_EVENT_LISTENER = __symbol__('addEventListener');\nvar REMOVE_EVENT_LISTENER = __symbol__('removeEventListener');\nvar symbolNames = {};\nvar FALSE = 'FALSE';\nvar ANGULAR = 'ANGULAR';\nvar NATIVE_ADD_LISTENER = 'addEventListener';\nvar NATIVE_REMOVE_LISTENER = 'removeEventListener';\n// use the same symbol string which is used in zone.js\nvar stopSymbol = '__zone_symbol__propagationStopped';\nvar stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';\nvar blackListedEvents = (typeof Zone !== 'undefined') && Zone[__symbol__('BLACK_LISTED_EVENTS')];\nvar blackListedMap;\nif (blackListedEvents) {\n    blackListedMap = {};\n    blackListedEvents.forEach(function (eventName) { blackListedMap[eventName] = eventName; });\n}\nvar isBlackListedEvent = function (eventName) {\n    if (!blackListedMap) {\n        return false;\n    }\n    return blackListedMap.hasOwnProperty(eventName);\n};\n// a global listener to handle all dom event,\n// so we do not need to create a closure every time\nvar globalListener = function (event) {\n    var symbolName = symbolNames[event.type];\n    if (!symbolName) {\n        return;\n    }\n    var taskDatas = this[symbolName];\n    if (!taskDatas) {\n        return;\n    }\n    var args = [event];\n    if (taskDatas.length === 1) {\n        // if taskDatas only have one element, just invoke it\n        var taskData = taskDatas[0];\n        if (taskData.zone !== Zone.current) {\n            // only use Zone.run when Zone.current not equals to stored zone\n            return taskData.zone.run(taskData.handler, this, args);\n        }\n        else {\n            return taskData.handler.apply(this, args);\n        }\n    }\n    else {\n        // copy tasks as a snapshot to avoid event handlers remove\n        // itself or others\n        var copiedTasks = taskDatas.slice();\n        for (var i = 0; i < copiedTasks.length; i++) {\n            // if other listener call event.stopImmediatePropagation\n            // just break\n            if (event[stopSymbol] === true) {\n                break;\n            }\n            var taskData = copiedTasks[i];\n            if (taskData.zone !== Zone.current) {\n                // only use Zone.run when Zone.current not equals to stored zone\n                taskData.zone.run(taskData.handler, this, args);\n            }\n            else {\n                taskData.handler.apply(this, args);\n            }\n        }\n    }\n};\nvar DomEventsPlugin = /** @class */ (function (_super) {\n    __extends(DomEventsPlugin, _super);\n    function DomEventsPlugin(doc, ngZone, platformId) {\n        var _this = _super.call(this, doc) || this;\n        _this.ngZone = ngZone;\n        if (!platformId || !isPlatformServer(platformId)) {\n            _this.patchEvent();\n        }\n        return _this;\n    }\n    DomEventsPlugin.prototype.patchEvent = function () {\n        if (typeof Event === 'undefined' || !Event || !Event.prototype) {\n            return;\n        }\n        if (Event.prototype[stopMethodSymbol]) {\n            // already patched by zone.js\n            return;\n        }\n        var delegate = Event.prototype[stopMethodSymbol] =\n            Event.prototype.stopImmediatePropagation;\n        Event.prototype.stopImmediatePropagation = function () {\n            if (this) {\n                this[stopSymbol] = true;\n            }\n            // should call native delegate in case\n            // in some environment part of the application\n            // will not use the patched Event\n            delegate && delegate.apply(this, arguments);\n        };\n    };\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    DomEventsPlugin.prototype.supports = function (eventName) { return true; };\n    DomEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n        var _this = this;\n        var zoneJsLoaded = element[ADD_EVENT_LISTENER];\n        var callback = handler;\n        // if zonejs is loaded and current zone is not ngZone\n        // we keep Zone.current on target for later restoration.\n        if (zoneJsLoaded && (!NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {\n            var symbolName = symbolNames[eventName];\n            if (!symbolName) {\n                symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);\n            }\n            var taskDatas = element[symbolName];\n            var globalListenerRegistered = taskDatas && taskDatas.length > 0;\n            if (!taskDatas) {\n                taskDatas = element[symbolName] = [];\n            }\n            var zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;\n            if (taskDatas.length === 0) {\n                taskDatas.push({ zone: zone, handler: callback });\n            }\n            else {\n                var callbackRegistered = false;\n                for (var i = 0; i < taskDatas.length; i++) {\n                    if (taskDatas[i].handler === callback) {\n                        callbackRegistered = true;\n                        break;\n                    }\n                }\n                if (!callbackRegistered) {\n                    taskDatas.push({ zone: zone, handler: callback });\n                }\n            }\n            if (!globalListenerRegistered) {\n                element[ADD_EVENT_LISTENER](eventName, globalListener, false);\n            }\n        }\n        else {\n            element[NATIVE_ADD_LISTENER](eventName, callback, false);\n        }\n        return function () { return _this.removeEventListener(element, eventName, callback); };\n    };\n    DomEventsPlugin.prototype.removeEventListener = function (target, eventName, callback) {\n        var underlyingRemove = target[REMOVE_EVENT_LISTENER];\n        // zone.js not loaded, use native removeEventListener\n        if (!underlyingRemove) {\n            return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n        var symbolName = symbolNames[eventName];\n        var taskDatas = symbolName && target[symbolName];\n        if (!taskDatas) {\n            // addEventListener not using patched version\n            // just call native removeEventListener\n            return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n        // fix issue 20532, should be able to remove\n        // listener which was added inside of ngZone\n        var found = false;\n        for (var i = 0; i < taskDatas.length; i++) {\n            // remove listener from taskDatas if the callback equals\n            if (taskDatas[i].handler === callback) {\n                found = true;\n                taskDatas.splice(i, 1);\n                break;\n            }\n        }\n        if (found) {\n            if (taskDatas.length === 0) {\n                // all listeners are removed, we can remove the globalListener from target\n                underlyingRemove.apply(target, [eventName, globalListener, false]);\n            }\n        }\n        else {\n            // not found in taskDatas, the callback may be added inside of ngZone\n            // use native remove listener to remove the callback\n            target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n    };\n    DomEventsPlugin = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT$1)),\n        __param(2, Optional()), __param(2, Inject(PLATFORM_ID)),\n        __metadata(\"design:paramtypes\", [Object, NgZone, Object])\n    ], DomEventsPlugin);\n    return DomEventsPlugin;\n}(EventManagerPlugin));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nvar EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n};\n/**\n * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @publicApi\n */\nvar HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nvar HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nvar HammerGestureConfig = /** @class */ (function () {\n    function HammerGestureConfig() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](http://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n        * Maps gesture event names to a set of configuration options\n        * that specify overrides to the default values for specific properties.\n        *\n        * The key is a supported event name to be configured,\n        * and the options object contains a set of properties, with override values\n        * to be applied to the named recognizer event.\n        * For example, to disable recognition of the rotate event, specify\n        *  `{\"rotate\": {\"enable\": false}}`.\n        *\n        * Properties that are not present take the HammerJS default values.\n        * For information about which properties are supported for which events,\n        * and their allowed and default values, see\n        * [HammerJS documentation](http://hammerjs.github.io/).\n        *\n        */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    HammerGestureConfig.prototype.buildHammer = function (element) {\n        var mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (var eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    };\n    HammerGestureConfig = __decorate([\n        Injectable()\n    ], HammerGestureConfig);\n    return HammerGestureConfig;\n}());\nvar HammerGesturesPlugin = /** @class */ (function (_super) {\n    __extends(HammerGesturesPlugin, _super);\n    function HammerGesturesPlugin(doc, _config, console, loader) {\n        var _this = _super.call(this, doc) || this;\n        _this._config = _config;\n        _this.console = console;\n        _this.loader = loader;\n        return _this;\n    }\n    HammerGesturesPlugin.prototype.supports = function (eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            this.console.warn(\"The \\\"\" + eventName + \"\\\" event cannot be bound because Hammer.JS is not \" +\n                \"loaded and no custom loader has been specified.\");\n            return false;\n        }\n        return true;\n    };\n    HammerGesturesPlugin.prototype.addEventListener = function (element, eventName, handler) {\n        var _this = this;\n        var zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            var cancelRegistration_1 = false;\n            var deregister_1 = function () { cancelRegistration_1 = true; };\n            this.loader()\n                .then(function () {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    _this.console.warn(\"The custom HAMMER_LOADER completed, but Hammer.JS is not present.\");\n                    deregister_1 = function () { };\n                    return;\n                }\n                if (!cancelRegistration_1) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to removal.\n                    deregister_1 = _this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(function () {\n                _this.console.warn(\"The \\\"\" + eventName + \"\\\" event cannot be bound because the custom \" +\n                    \"Hammer.JS loader failed.\");\n                deregister_1 = function () { };\n            });\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return function () { deregister_1(); };\n        }\n        return zone.runOutsideAngular(function () {\n            // Creating the manager bind events, must be done outside of angular\n            var mc = _this._config.buildHammer(element);\n            var callback = function (eventObj) {\n                zone.runGuarded(function () { handler(eventObj); });\n            };\n            mc.on(eventName, callback);\n            return function () {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    };\n    HammerGesturesPlugin.prototype.isCustomEvent = function (eventName) { return this._config.events.indexOf(eventName) > -1; };\n    HammerGesturesPlugin = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT$1)),\n        __param(1, Inject(HAMMER_GESTURE_CONFIG)),\n        __param(3, Optional()), __param(3, Inject(HAMMER_LOADER)),\n        __metadata(\"design:paramtypes\", [Object, HammerGestureConfig, ÉµConsole, Object])\n    ], HammerGesturesPlugin);\n    return HammerGesturesPlugin;\n}(EventManagerPlugin));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nvar MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nvar Éµ0$1 = function (event) { return event.altKey; }, Éµ1$1 = function (event) { return event.ctrlKey; }, Éµ2$1 = function (event) { return event.metaKey; }, Éµ3 = function (event) { return event.shiftKey; };\n/**\n * Retrieves modifiers from key-event objects.\n */\nvar MODIFIER_KEY_GETTERS = {\n    'alt': Éµ0$1,\n    'control': Éµ1$1,\n    'meta': Éµ2$1,\n    'shift': Éµ3\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nvar KeyEventsPlugin = /** @class */ (function (_super) {\n    __extends(KeyEventsPlugin, _super);\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    function KeyEventsPlugin(doc) {\n        return _super.call(this, doc) || this;\n    }\n    KeyEventsPlugin_1 = KeyEventsPlugin;\n    /**\n      * Reports whether a named key event is supported.\n      * @param eventName The event name to query.\n      * @return True if the named key event is supported.\n     */\n    KeyEventsPlugin.prototype.supports = function (eventName) { return KeyEventsPlugin_1.parseEventName(eventName) != null; };\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n    */\n    KeyEventsPlugin.prototype.addEventListener = function (element, eventName, handler) {\n        var parsedEvent = KeyEventsPlugin_1.parseEventName(eventName);\n        var outsideHandler = KeyEventsPlugin_1.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(function () {\n            return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    };\n    KeyEventsPlugin.parseEventName = function (eventName) {\n        var parts = eventName.toLowerCase().split('.');\n        var domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        var key = KeyEventsPlugin_1._normalizeKey(parts.pop());\n        var fullKey = '';\n        MODIFIER_KEYS.forEach(function (modifierName) {\n            var index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        var result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    };\n    KeyEventsPlugin.getEventFullKey = function (event) {\n        var fullKey = '';\n        var key = getDOM().getEventKey(event);\n        key = key.toLowerCase();\n        if (key === ' ') {\n            key = 'space'; // for readability\n        }\n        else if (key === '.') {\n            key = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(function (modifierName) {\n            if (modifierName != key) {\n                var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    fullKey += modifierName + '.';\n                }\n            }\n        });\n        fullKey += key;\n        return fullKey;\n    };\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    KeyEventsPlugin.eventCallback = function (fullKey, handler, zone) {\n        return function (event /** TODO #9100 */) {\n            if (KeyEventsPlugin_1.getEventFullKey(event) === fullKey) {\n                zone.runGuarded(function () { return handler(event); });\n            }\n        };\n    };\n    /** @internal */\n    KeyEventsPlugin._normalizeKey = function (keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    };\n    var KeyEventsPlugin_1;\n    KeyEventsPlugin = KeyEventsPlugin_1 = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT$1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], KeyEventsPlugin);\n    return KeyEventsPlugin;\n}(EventManagerPlugin));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\nvar DomSanitizer = /** @class */ (function () {\n    function DomSanitizer() {\n    }\n    return DomSanitizer;\n}());\nvar DomSanitizerImpl = /** @class */ (function (_super) {\n    __extends(DomSanitizerImpl, _super);\n    function DomSanitizerImpl(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        return _this;\n    }\n    DomSanitizerImpl.prototype.sanitize = function (ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (value instanceof SafeHtmlImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'HTML');\n                return Éµ_sanitizeHtml(this._doc, String(value));\n            case SecurityContext.STYLE:\n                if (value instanceof SafeStyleImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'Style');\n                return Éµ_sanitizeStyle(value);\n            case SecurityContext.SCRIPT:\n                if (value instanceof SafeScriptImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'Script');\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n                    // Allow resource URLs in URL contexts, they are strictly more trusted.\n                    return value.changingThisBreaksApplicationSecurity;\n                }\n                this.checkNotSafeValue(value, 'URL');\n                return Éµ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (value instanceof SafeResourceUrlImpl) {\n                    return value.changingThisBreaksApplicationSecurity;\n                }\n                this.checkNotSafeValue(value, 'ResourceURL');\n                throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n            default:\n                throw new Error(\"Unexpected SecurityContext \" + ctx + \" (see http://g.co/ng/security#xss)\");\n        }\n    };\n    DomSanitizerImpl.prototype.checkNotSafeValue = function (value, expectedType) {\n        if (value instanceof SafeValueImpl) {\n            throw new Error(\"Required a safe \" + expectedType + \", got a \" + value.getTypeName() + \" \" +\n                \"(see http://g.co/ng/security#xss)\");\n        }\n    };\n    DomSanitizerImpl.prototype.bypassSecurityTrustHtml = function (value) { return new SafeHtmlImpl(value); };\n    DomSanitizerImpl.prototype.bypassSecurityTrustStyle = function (value) { return new SafeStyleImpl(value); };\n    DomSanitizerImpl.prototype.bypassSecurityTrustScript = function (value) { return new SafeScriptImpl(value); };\n    DomSanitizerImpl.prototype.bypassSecurityTrustUrl = function (value) { return new SafeUrlImpl(value); };\n    DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = function (value) {\n        return new SafeResourceUrlImpl(value);\n    };\n    DomSanitizerImpl = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT$1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], DomSanitizerImpl);\n    return DomSanitizerImpl;\n}(DomSanitizer));\nvar SafeValueImpl = /** @class */ (function () {\n    function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n        this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        // empty\n    }\n    SafeValueImpl.prototype.toString = function () {\n        return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n            \" (see http://g.co/ng/security#xss)\";\n    };\n    return SafeValueImpl;\n}());\nvar SafeHtmlImpl = /** @class */ (function (_super) {\n    __extends(SafeHtmlImpl, _super);\n    function SafeHtmlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeHtmlImpl.prototype.getTypeName = function () { return 'HTML'; };\n    return SafeHtmlImpl;\n}(SafeValueImpl));\nvar SafeStyleImpl = /** @class */ (function (_super) {\n    __extends(SafeStyleImpl, _super);\n    function SafeStyleImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeStyleImpl.prototype.getTypeName = function () { return 'Style'; };\n    return SafeStyleImpl;\n}(SafeValueImpl));\nvar SafeScriptImpl = /** @class */ (function (_super) {\n    __extends(SafeScriptImpl, _super);\n    function SafeScriptImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeScriptImpl.prototype.getTypeName = function () { return 'Script'; };\n    return SafeScriptImpl;\n}(SafeValueImpl));\nvar SafeUrlImpl = /** @class */ (function (_super) {\n    __extends(SafeUrlImpl, _super);\n    function SafeUrlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeUrlImpl.prototype.getTypeName = function () { return 'URL'; };\n    return SafeUrlImpl;\n}(SafeValueImpl));\nvar SafeResourceUrlImpl = /** @class */ (function (_super) {\n    __extends(SafeResourceUrlImpl, _super);\n    function SafeResourceUrlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SafeResourceUrlImpl.prototype.getTypeName = function () { return 'ResourceURL'; };\n    return SafeResourceUrlImpl;\n}(SafeValueImpl));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ÉµPLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: PlatformLocation, useClass: BrowserPlatformLocation, deps: [DOCUMENT$1] },\n    { provide: DOCUMENT$1, useFactory: _document, deps: [] },\n];\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * @publicApi\n */\nvar BROWSER_SANITIZATION_PROVIDERS = [\n    { provide: Sanitizer, useExisting: DomSanitizer },\n    { provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT$1] },\n];\n/**\n * @publicApi\n */\nvar platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    return document;\n}\nvar BROWSER_MODULE_PROVIDERS = [\n    BROWSER_SANITIZATION_PROVIDERS,\n    { provide: ÉµAPP_ROOT, useValue: true },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT$1, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT$1] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT$1, HAMMER_GESTURE_CONFIG, ÉµConsole, [new Optional(), HAMMER_LOADER]]\n    },\n    { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n    {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost, APP_ID]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT$1] },\n    { provide: Testability, useClass: Testability, deps: [NgZone] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    ELEMENT_PROBE_PROVIDERS,\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nvar BrowserModule = /** @class */ (function () {\n    function BrowserModule(parentModule) {\n        if (parentModule) {\n            throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n        }\n    }\n    BrowserModule_1 = BrowserModule;\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    BrowserModule.withServerTransition = function (params) {\n        return {\n            ngModule: BrowserModule_1,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    };\n    var BrowserModule_1;\n    BrowserModule = BrowserModule_1 = __decorate([\n        NgModule({ providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule] }),\n        __param(0, Optional()), __param(0, SkipSelf()), __param(0, Inject(BrowserModule_1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], BrowserModule);\n    return BrowserModule;\n}());\n\n/**\n * Factory to create Meta service.\n */\nfunction createMeta() {\n    return new Meta(inject(DOCUMENT$1));\n}\n/**\n * A service that can be used to get and add meta tags.\n *\n * @publicApi\n */\nvar Meta = /** @class */ (function () {\n    function Meta(_doc) {\n        this._doc = _doc;\n        this._dom = getDOM();\n    }\n    Meta.prototype.addTag = function (tag, forceCreation) {\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    };\n    Meta.prototype.addTags = function (tags, forceCreation) {\n        var _this = this;\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!tags)\n            return [];\n        return tags.reduce(function (result, tag) {\n            if (tag) {\n                result.push(_this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    };\n    Meta.prototype.getTag = function (attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._dom.querySelector(this._doc, \"meta[\" + attrSelector + \"]\") || null;\n    };\n    Meta.prototype.getTags = function (attrSelector) {\n        if (!attrSelector)\n            return [];\n        var list /*NodeList*/ = this._dom.querySelectorAll(this._doc, \"meta[\" + attrSelector + \"]\");\n        return list ? [].slice.call(list) : [];\n    };\n    Meta.prototype.updateTag = function (tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        var meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    };\n    Meta.prototype.removeTag = function (attrSelector) { this.removeTagElement(this.getTag(attrSelector)); };\n    Meta.prototype.removeTagElement = function (meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    };\n    Meta.prototype._getOrCreateElement = function (meta, forceCreation) {\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!forceCreation) {\n            var selector = this._parseSelector(meta);\n            var elem = this.getTag(selector);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            if (elem && this._containsAttributes(meta, elem))\n                return elem;\n        }\n        var element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        var head = this._dom.getElementsByTagName(this._doc, 'head')[0];\n        this._dom.appendChild(head, element);\n        return element;\n    };\n    Meta.prototype._setMetaElementAttributes = function (tag, el) {\n        var _this = this;\n        Object.keys(tag).forEach(function (prop) { return _this._dom.setAttribute(el, prop, tag[prop]); });\n        return el;\n    };\n    Meta.prototype._parseSelector = function (tag) {\n        var attr = tag.name ? 'name' : 'property';\n        return attr + \"=\\\"\" + tag[attr] + \"\\\"\";\n    };\n    Meta.prototype._containsAttributes = function (tag, elem) {\n        var _this = this;\n        return Object.keys(tag).every(function (key) { return _this._dom.getAttribute(elem, key) === tag[key]; });\n    };\n    Meta.ngInjectableDef = defineInjectable({ factory: createMeta, token: Meta, providedIn: \"root\" });\n    Meta = __decorate([\n        Injectable({ providedIn: 'root', useFactory: createMeta, deps: [] }),\n        __param(0, Inject(DOCUMENT$1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], Meta);\n    return Meta;\n}());\n\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(inject(DOCUMENT$1));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nvar Title = /** @class */ (function () {\n    function Title(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    Title.prototype.getTitle = function () { return getDOM().getTitle(this._doc); };\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    Title.prototype.setTitle = function (newTitle) { getDOM().setTitle(this._doc, newTitle); };\n    Title.ngInjectableDef = defineInjectable({ factory: createTitle, token: Title, providedIn: \"root\" });\n    Title = __decorate([\n        Injectable({ providedIn: 'root', useFactory: createTitle, deps: [] }),\n        __param(0, Inject(DOCUMENT$1)),\n        __metadata(\"design:paramtypes\", [Object])\n    ], Title);\n    return Title;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectionPerfRecord = /** @class */ (function () {\n    function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n    return ChangeDetectionPerfRecord;\n}());\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nvar AngularProfiler = /** @class */ (function () {\n    function AngularProfiler(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    AngularProfiler.prototype.timeChangeDetection = function (config) {\n        var record = config && config['record'];\n        var profileName = 'Change Detection';\n        // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n        var isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        var start = getDOM().performanceNow();\n        var numTicks = 0;\n        while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        var end = getDOM().performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        var msPerTick = (end - start) / numTicks;\n        win.console.log(\"ran \" + numTicks + \" change detection cycles\");\n        win.console.log(msPerTick.toFixed(2) + \" ms per check\");\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    };\n    return AngularProfiler;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    var escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, function (s) { return escapedText[s]; });\n}\nfunction unescapeHtml(text) {\n    var unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, function (s) { return unescapedText[s]; });\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialzied in a\n * non-lossy manner.\n *\n * @publicApi\n */\nvar TransferState = /** @class */ (function () {\n    function TransferState() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    TransferState_1 = TransferState;\n    /** @internal */\n    TransferState.init = function (initState) {\n        var transferState = new TransferState_1();\n        transferState.store = initState;\n        return transferState;\n    };\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    TransferState.prototype.get = function (key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    };\n    /**\n     * Set the value corresponding to a key.\n     */\n    TransferState.prototype.set = function (key, value) { this.store[key] = value; };\n    /**\n     * Remove a key from the store.\n     */\n    TransferState.prototype.remove = function (key) { delete this.store[key]; };\n    /**\n     * Test whether a key exists in the store.\n     */\n    TransferState.prototype.hasKey = function (key) { return this.store.hasOwnProperty(key); };\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    TransferState.prototype.onSerialize = function (key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    };\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    TransferState.prototype.toJson = function () {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (var key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    };\n    var TransferState_1;\n    TransferState = TransferState_1 = __decorate([\n        Injectable()\n    ], TransferState);\n    return TransferState;\n}());\nfunction initTransferState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    var script = doc.getElementById(appId + '-state');\n    var initialState = {};\n    if (script && script.textContent) {\n        try {\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\nvar BrowserTransferStateModule = /** @class */ (function () {\n    function BrowserTransferStateModule() {\n    }\n    BrowserTransferStateModule = __decorate([\n        NgModule({\n            providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT$1, APP_ID] }],\n        })\n    ], BrowserTransferStateModule);\n    return BrowserTransferStateModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nvar By = /** @class */ (function () {\n    function By() {\n    }\n    /**\n     * Match all elements.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    By.all = function () { return function (debugElement) { return true; }; };\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    By.css = function (selector) {\n        return function (debugElement) {\n            return debugElement.nativeElement != null ?\n                getDOM().elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    };\n    /**\n     * Match elements that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    By.directive = function (type) {\n        return function (debugElement) { return debugElement.providerTokens.indexOf(type) !== -1; };\n    };\n    return By;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar VERSION = new Version('7.2.15');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BROWSER_MODULE_PROVIDERS as Éµangular_packages_platform_browser_platform_browser_c, _document as Éµangular_packages_platform_browser_platform_browser_b, errorHandler as Éµangular_packages_platform_browser_platform_browser_a, GenericBrowserDomAdapter as Éµangular_packages_platform_browser_platform_browser_k, createMeta as Éµangular_packages_platform_browser_platform_browser_d, SERVER_TRANSITION_PROVIDERS as Éµangular_packages_platform_browser_platform_browser_i, appInitializerFactory as Éµangular_packages_platform_browser_platform_browser_h, createTitle as Éµangular_packages_platform_browser_platform_browser_e, initTransferState as Éµangular_packages_platform_browser_platform_browser_f, _createNgProbe as Éµangular_packages_platform_browser_platform_browser_j, EventManagerPlugin as Éµangular_packages_platform_browser_platform_browser_g, BrowserModule, platformBrowser, Meta, Title, disableDebugTools, enableDebugTools, BrowserTransferStateModule, TransferState, makeStateKey, By, DOCUMENT$1 as DOCUMENT, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, DomSanitizer, VERSION, BROWSER_SANITIZATION_PROVIDERS as ÉµBROWSER_SANITIZATION_PROVIDERS, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ÉµINTERNAL_BROWSER_PLATFORM_PROVIDERS, initDomAdapter as ÉµinitDomAdapter, BrowserDomAdapter as ÉµBrowserDomAdapter, BrowserPlatformLocation as ÉµBrowserPlatformLocation, TRANSITION_ID as ÉµTRANSITION_ID, BrowserGetTestability as ÉµBrowserGetTestability, escapeHtml as ÉµescapeHtml, ELEMENT_PROBE_PROVIDERS as ÉµELEMENT_PROBE_PROVIDERS, DomAdapter as ÉµDomAdapter, getDOM as ÉµgetDOM, setRootDomAdapter as ÉµsetRootDomAdapter, DomRendererFactory2 as ÉµDomRendererFactory2, NAMESPACE_URIS as ÉµNAMESPACE_URIS, flattenStyles as ÉµflattenStyles, shimContentAttribute as ÉµshimContentAttribute, shimHostAttribute as ÉµshimHostAttribute, DomEventsPlugin as ÉµDomEventsPlugin, HammerGesturesPlugin as ÉµHammerGesturesPlugin, KeyEventsPlugin as ÉµKeyEventsPlugin, DomSharedStylesHost as ÉµDomSharedStylesHost, SharedStylesHost as ÉµSharedStylesHost, DomSanitizerImpl as ÉµDomSanitizerImpl };\n//# sourceMappingURL=platform-browser.js.map\n","/**\n * @license Angular v7.2.15\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __extends, __decorate, __assign, __values, __spread, __metadata, __param } from 'tslib';\nimport { LocationStrategy, Location, PlatformLocation, APP_BASE_HREF, ViewportScroller, HashLocationStrategy, PathLocationStrategy, LOCATION_INITIALIZED } from '@angular/common';\nimport { Component, ÉµisObservable, ÉµisPromise, NgModuleRef, InjectionToken, NgModuleFactory, isDevMode, NgZone, ÉµConsole, Input, HostListener, Directive, Attribute, Renderer2, ElementRef, HostBinding, ContentChildren, QueryList, ChangeDetectorRef, Output, ViewContainerRef, ComponentFactoryResolver, EventEmitter, Injectable, NgModuleFactoryLoader, Compiler, Injector, ApplicationRef, Optional, SystemJsNgModuleLoader, NgProbeToken, ANALYZE_FOR_ENTRY_COMPONENTS, SkipSelf, Inject, APP_INITIALIZER, APP_BOOTSTRAP_LISTENER, NgModule, Version } from '@angular/core';\nimport { from, of, BehaviorSubject, EmptyError, Observable, combineLatest, defer, EMPTY, Subject } from 'rxjs';\nimport { map, concatAll, last, catchError, first, mergeMap, every, switchMap, take, startWith, scan, filter, concatMap, reduce, tap, finalize, mergeAll } from 'rxjs/operators';\nimport { ÉµgetDOM } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Base for events the Router goes through, as opposed to events tied to a specific\n * Route. `RouterEvent`s will only be fired one time for any given navigation.\n *\n * Example:\n *\n * ```\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.pipe(\n *       filter(e => e instanceof RouterEvent)\n *     ).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar RouterEvent = /** @class */ (function () {\n    function RouterEvent(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url) {\n        this.id = id;\n        this.url = url;\n    }\n    return RouterEvent;\n}());\n/**\n * @description\n *\n * Represents an event triggered when a navigation starts.\n *\n * @publicApi\n */\nvar NavigationStart = /** @class */ (function (_super) {\n    __extends(NavigationStart, _super);\n    function NavigationStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    navigationTrigger, \n    /** @docsNotRequired */\n    restoredState) {\n        if (navigationTrigger === void 0) { navigationTrigger = 'imperative'; }\n        if (restoredState === void 0) { restoredState = null; }\n        var _this = _super.call(this, id, url) || this;\n        _this.navigationTrigger = navigationTrigger;\n        _this.restoredState = restoredState;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationStart.prototype.toString = function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation ends successfully.\n *\n * @publicApi\n */\nvar NavigationEnd = /** @class */ (function (_super) {\n    __extends(NavigationEnd, _super);\n    function NavigationEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationEnd.prototype.toString = function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation is canceled.\n *\n * @publicApi\n */\nvar NavigationCancel = /** @class */ (function (_super) {\n    __extends(NavigationCancel, _super);\n    function NavigationCancel(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    reason) {\n        var _this = _super.call(this, id, url) || this;\n        _this.reason = reason;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationCancel.prototype.toString = function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * @publicApi\n */\nvar NavigationError = /** @class */ (function (_super) {\n    __extends(NavigationError, _super);\n    function NavigationError(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    error) {\n        var _this = _super.call(this, id, url) || this;\n        _this.error = error;\n        return _this;\n    }\n    /** @docsNotRequired */\n    NavigationError.prototype.toString = function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when routes are recognized.\n *\n * @publicApi\n */\nvar RoutesRecognized = /** @class */ (function (_super) {\n    __extends(RoutesRecognized, _super);\n    function RoutesRecognized(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /** @docsNotRequired */\n    RoutesRecognized.prototype.toString = function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the start of the Guard phase of routing.\n *\n * @publicApi\n */\nvar GuardsCheckStart = /** @class */ (function (_super) {\n    __extends(GuardsCheckStart, _super);\n    function GuardsCheckStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the end of the Guard phase of routing.\n *\n * @publicApi\n */\nvar GuardsCheckEnd = /** @class */ (function (_super) {\n    __extends(GuardsCheckEnd, _super);\n    function GuardsCheckEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state, \n    /** @docsNotRequired */\n    shouldActivate) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        _this.shouldActivate = shouldActivate;\n        return _this;\n    }\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * @publicApi\n */\nvar ResolveStart = /** @class */ (function (_super) {\n    __extends(ResolveStart, _super);\n    function ResolveStart(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the end of the Resolve phase of routing. See note on\n * `ResolveStart` for use of this experimental API.\n *\n * @publicApi\n */\nvar ResolveEnd = /** @class */ (function (_super) {\n    __extends(ResolveEnd, _super);\n    function ResolveEnd(\n    /** @docsNotRequired */\n    id, \n    /** @docsNotRequired */\n    url, \n    /** @docsNotRequired */\n    urlAfterRedirects, \n    /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered before lazy loading a route config.\n *\n * @publicApi\n */\nvar RouteConfigLoadStart = /** @class */ (function () {\n    function RouteConfigLoadStart(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * @description\n *\n * Represents an event triggered when a route has been lazy loaded.\n *\n * @publicApi\n */\nvar RouteConfigLoadEnd = /** @class */ (function () {\n    function RouteConfigLoadEnd(\n    /** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationEnd` for use of this experimental API.\n *\n * @publicApi\n */\nvar ChildActivationStart = /** @class */ (function () {\n    function ChildActivationStart(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ChildActivationStart.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationStart(path: '\" + path + \"')\";\n    };\n    return ChildActivationStart;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationStart` for use of this experimental API.\n *\n * @publicApi\n */\nvar ChildActivationEnd = /** @class */ (function () {\n    function ChildActivationEnd(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ChildActivationEnd.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationEnd(path: '\" + path + \"')\";\n    };\n    return ChildActivationEnd;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationEnd` for use of this experimental API.\n *\n * @publicApi\n */\nvar ActivationStart = /** @class */ (function () {\n    function ActivationStart(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ActivationStart.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationStart(path: '\" + path + \"')\";\n    };\n    return ActivationStart;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationStart` for use of this experimental API.\n *\n * @publicApi\n */\nvar ActivationEnd = /** @class */ (function () {\n    function ActivationEnd(\n    /** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ActivationEnd.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationEnd(path: '\" + path + \"')\";\n    };\n    return ActivationEnd;\n}());\n/**\n * @description\n *\n * Represents a scrolling event.\n *\n * @publicApi\n */\nvar Scroll = /** @class */ (function () {\n    function Scroll(\n    /** @docsNotRequired */\n    routerEvent, \n    /** @docsNotRequired */\n    position, \n    /** @docsNotRequired */\n    anchor) {\n        this.routerEvent = routerEvent;\n        this.position = position;\n        this.anchor = anchor;\n    }\n    Scroll.prototype.toString = function () {\n        var pos = this.position ? this.position[0] + \", \" + this.position[1] : null;\n        return \"Scroll(anchor: '\" + this.anchor + \"', position: '\" + pos + \"')\";\n    };\n    return Scroll;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\nvar EmptyOutletComponent = /** @class */ (function () {\n    function EmptyOutletComponent() {\n    }\n    EmptyOutletComponent = __decorate([\n        Component({ template: \"<router-outlet></router-outlet>\" })\n    ], EmptyOutletComponent);\n    return EmptyOutletComponent;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Name of the primary outlet.\n *\n * @publicApi\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = /** @class */ (function () {\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a `Params` instance to a `ParamMap`.\n *\n * @publicApi\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction navigationCancelingError(message) {\n    var error = Error('NavigationCancelingError: ' + message);\n    error[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\nfunction isNavigationCancelingError(error) {\n    return error && error[NAVIGATION_CANCELING_ERROR];\n}\n// Matches the route configuration (`route`) against the actual URL (`segments`).\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var parts = route.path.split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var posParams = {};\n    // Check each config part against the actual URL\n    for (var index = 0; index < parts.length; index++) {\n        var part = parts[index];\n        var segment = segments[index];\n        var isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = /** @class */ (function () {\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var i = 0; i < config.length; i++) {\n        var route = config[i];\n        var fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && !route.children && !route.loadChildren &&\n        (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route without children or loadChildren cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n/**\n * Makes a copy of the config and adds any default required properties.\n */\nfunction standardizeConfig(r) {\n    var children = r.children && r.children.map(standardizeConfig);\n    var c = children ? __assign({}, r, { children: children }) : __assign({}, r);\n    if (!c.component && (children || c.loadChildren) && (c.outlet && c.outlet !== PRIMARY_OUTLET)) {\n        c.component = EmptyOutletComponent;\n    }\n    return c;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\nfunction shallowEqual(a, b) {\n    var k1 = Object.keys(a);\n    var k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var key;\n    for (var i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Flattens single-level nested arrays.\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\nfunction forEach(map$$1, callback) {\n    for (var prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return of({});\n    }\n    var waitHead = [];\n    var waitTail = [];\n    var res = {};\n    forEach(obj, function (a, k) {\n        var mapped = fn(k, a).pipe(map(function (r) { return res[k] = r; }));\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    // Closure compiler has problem with using spread operator here. So just using Array.concat.\n    return of.apply(null, waitHead.concat(waitTail)).pipe(concatAll(), last(), map(function () { return res; }));\n}\nfunction wrapIntoObservable(value) {\n    if (ÉµisObservable(value)) {\n        return value;\n    }\n    if (ÉµisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return from(Promise.resolve(value));\n    }\n    return of(value);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\nfunction equalQueryParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\nfunction containsQueryParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var current = containeePaths.slice(0, container.segments.length);\n        var next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar UrlTree = /** @class */ (function () {\n    /** @internal */\n    function UrlTree(\n    /** The root segment group of the URL tree */\n    root, \n    /** The query params of the URL */\n    queryParams, \n    /** The fragment of the URL */\n    fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlTree.prototype.toString = function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n * @publicApi\n */\nvar UrlSegmentGroup = /** @class */ (function () {\n    function UrlSegmentGroup(\n    /** The URL segments of this group. See `UrlSegment` for more information */\n    segments, \n    /** The list of children of this group */\n    children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /** The parent node in the url tree */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /** Whether the segment has child segments */\n    UrlSegmentGroup.prototype.hasChildren = function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /** Number of child segments */\n        get: function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlSegmentGroup.prototype.toString = function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * @usageNotes\n *Â ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar UrlSegment = /** @class */ (function () {\n    function UrlSegment(\n    /** The path part of a URL segment */\n    path, \n    /** The matrix parameters associated with a segment */\n    parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    UrlSegment.prototype.toString = function () { return serializePath(this); };\n    return UrlSegment;\n}());\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\nfunction mapChildrenIntoArray(segment, fn) {\n    var res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n * @publicApi\n */\nvar UrlSerializer = /** @class */ (function () {\n    function UrlSerializer() {\n    }\n    return UrlSerializer;\n}());\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * @publicApi\n */\nvar DefaultUrlSerializer = /** @class */ (function () {\n    function DefaultUrlSerializer() {\n    }\n    /** Parses a url into a `UrlTree` */\n    DefaultUrlSerializer.prototype.parse = function (url) {\n        var p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /** Converts a `UrlTree` into a url */\n    DefaultUrlSerializer.prototype.serialize = function (tree) {\n        var segment = \"/\" + serializeSegment(tree.root, true);\n        var query = serializeQueryParams(tree.queryParams);\n        var fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment(tree.fragment) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n    return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n    return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n    return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n}\nfunction serializeMatrixParams(params) {\n    return Object.keys(params)\n        .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n        .join('');\n}\nfunction serializeQueryParams(params) {\n    var strParams = Object.keys(params).map(function (name) {\n        var value = params[name];\n        return Array.isArray(value) ?\n            value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n            encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=#]+/;\nfunction matchSegments(str) {\n    var match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n    var match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n    var match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = /** @class */ (function () {\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    UrlParser.prototype.parseQueryParams = function () {\n        var params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    };\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    // parse a segment with its matrix parameters\n    // ie `name;k1=v1;k2`\n    UrlParser.prototype.parseSegment = function () {\n        var path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    UrlParser.prototype.parseMatrixParams = function () {\n        var params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    UrlParser.prototype.parseParam = function (params) {\n        var key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var value = '';\n        if (this.consumeOptional('=')) {\n            var valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    // Parse a single query parameter `name[=value]`\n    UrlParser.prototype.parseQueryParam = function (params) {\n        var key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var value = '';\n        if (this.consumeOptional('=')) {\n            var valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var decodedKey = decodeQuery(key);\n        var decodedVal = decodeQuery(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    // parse `(a/b//outlet_name:c/d)`\n    UrlParser.prototype.parseParens = function (allowPrimary) {\n        var segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var path = matchSegments(this.remaining);\n            var next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var outletName = undefined;\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    // Consumes the prefix when it is present and returns whether it has been consumed\n    UrlParser.prototype.consumeOptional = function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = /** @class */ (function () {\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    Tree.prototype.parent = function (t) {\n        var p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.children = function (t) {\n        var n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.firstChild = function (t) {\n        var n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.siblings = function (t) {\n        var p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * @internal\n     */\n    Tree.prototype.pathFromRoot = function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n// DFS for the node matching the value\nfunction findNode(value, node) {\n    var e_1, _a;\n    if (value === node.value)\n        return node;\n    try {\n        for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var node_1 = findNode(value, child);\n            if (node_1)\n                return node_1;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return null;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n    var e_2, _a;\n    if (value === node.value)\n        return [node];\n    try {\n        for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var child = _c.value;\n            var path = findPath(value, child);\n            if (path.length) {\n                path.unshift(node);\n                return path;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return [];\n}\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n    var map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents the state of the router.\n *\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * See `ActivatedRoute` for more information.\n *\n * @publicApi\n */\nvar RouterState = /** @class */ (function (_super) {\n    __extends(RouterState, _super);\n    /** @internal */\n    function RouterState(root, \n    /** The current snapshot of the router state */\n    snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\nfunction createEmptyState(urlTree, rootComponent) {\n    var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n    var emptyParams = new BehaviorSubject({});\n    var emptyData = new BehaviorSubject({});\n    var emptyQueryParams = new BehaviorSubject({});\n    var fragment = new BehaviorSubject('');\n    var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var emptyParams = {};\n    var emptyData = {};\n    var emptyQueryParams = {};\n    var fragment = '';\n    var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * ```\n * @Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.pipe(map(p => p.id));\n *     const url: Observable<string> = route.url.pipe(map(segments => segments.join('')));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.pipe(map(d => d.user));\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar ActivatedRoute = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRoute(\n    /** An observable of the URL segments matched by this route */\n    url, \n    /** An observable of the matrix parameters scoped to this route */\n    params, \n    /** An observable of the query parameters shared by all the routes */\n    queryParams, \n    /** An observable of the URL fragment shared by all the routes */\n    fragment, \n    /** An observable of the static and resolved data of this route. */\n    data, \n    /** The outlet name of the route. It's a constant */\n    outlet, \n    /** The component of the route. It's a constant */\n    // TODO(vsavkin): remove |string\n    component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /** The configuration used to match this route */\n        get: function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /** The root of the router state */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = this.params.pipe(map(function (p) { return convertToParamMap(p); }));\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    this.queryParams.pipe(map(function (p) { return convertToParamMap(p); }));\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * Returns the inherited params, data, and resolve for a given route.\n * By default, this only inherits values up to the nearest path-less or component-less route.\n * @internal\n */\nfunction inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    var pathFromRoot = route.pathFromRoot;\n    var inheritingStartingFrom = 0;\n    if (paramsInheritanceStrategy !== 'always') {\n        inheritingStartingFrom = pathFromRoot.length - 1;\n        while (inheritingStartingFrom >= 1) {\n            var current = pathFromRoot[inheritingStartingFrom];\n            var parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n            // current route is an empty path => inherits its parent's params and data\n            if (current.routeConfig && current.routeConfig.path === '') {\n                inheritingStartingFrom--;\n                // parent is componentless => current route should inherit its params and data\n            }\n            else if (!parent_1.component) {\n                inheritingStartingFrom--;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n}\n/** @internal */\nfunction flattenInherited(pathFromRoot) {\n    return pathFromRoot.reduce(function (res, curr) {\n        var params = __assign({}, res.params, curr.params);\n        var data = __assign({}, res.data, curr.data);\n        var resolve = __assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, { params: {}, data: {}, resolve: {} });\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * ```\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar ActivatedRouteSnapshot = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRouteSnapshot(\n    /** The URL segments matched by this route */\n    url, \n    /** The matrix parameters scoped to this route */\n    params, \n    /** The query parameters shared by all the routes */\n    queryParams, \n    /** The URL fragment shared by all the routes */\n    fragment, \n    /** The static and resolved data of this route */\n    data, \n    /** The outlet name of the route */\n    outlet, \n    /** The component of the route */\n    component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /** The root of the router state */\n        get: function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var matched = this.routeConfig ? this.routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nvar RouterStateSnapshot = /** @class */ (function (_super) {\n    __extends(RouterStateSnapshot, _super);\n    /** @internal */\n    function RouterStateSnapshot(\n    /** The url from which this snapshot was created */\n    url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\nfunction serializeNode(node) {\n    var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var currentSnapshot = route.snapshot;\n        var nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            route.queryParams.next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            route.fragment.next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            route.params.next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            route.url.next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            route.data.next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        route.data.next(route._futureSnapshot.data);\n    }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n    var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else {\n        var detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n        if (detachedRouteHandle) {\n            var tree = detachedRouteHandle.route;\n            setFutureSnapshotsOfActivatedRoutes(curr, tree);\n            return tree;\n        }\n        else {\n            var value = createActivatedRoute(curr.value);\n            var children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n            return new TreeNode(value, children);\n        }\n    }\n}\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(prevState.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                    return createNode(routeReuseStrategy, child, p);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var startingPosition = findStartingPosition(nav, urlTree, route);\n    var segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = /** @class */ (function () {\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var numberOfDoubleDots = 0;\n    var isAbsolute = false;\n    var res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return __spread(res, [{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return __spread(res, [cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return __spread(res, [cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') ;\n                else if (partIndex == 0 && urlPart === '') { //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') { //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return __spread(res, [cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = /** @class */ (function () {\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var g = group;\n    var ci = index;\n    var dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = g.parent;\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\nfunction getOutlets(commands) {\n    var _a, _b;\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var m = prefixedWith(segmentGroup, startIndex, commands);\n    var slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var outlets_2 = getOutlets(commands);\n        var children_1 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_1[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_1);\n    }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var currentCommandIndex = 0;\n    var currentPathIndex = startIndex;\n    var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var path = segmentGroup.segments[currentPathIndex];\n        var curr = getPath(commands[currentCommandIndex]);\n        var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var paths = segmentGroup.segments.slice(0, startIndex);\n    var i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var curr = getPath(commands[i]);\n        var next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n    var children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\nfunction stringify(params) {\n    var res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar activateRoutes = function (rootContexts, routeReuseStrategy, forwardEvent) {\n    return map(function (t) {\n        new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent)\n            .activate(rootContexts);\n        return t;\n    });\n};\nvar ActivateRoutes = /** @class */ (function () {\n    function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var futureRoot = this.futureState._root;\n        var currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    // De-activate the child route that are not re-used for the future state\n    ActivateRoutes.prototype.deactivateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var componentRef = context.outlet.detach();\n            var contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var children = nodeChildrenAsMap(route);\n            var contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) {\n            _this.activateRoutes(c, children[c.value.outlet], contexts);\n            _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    };\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var config = parentLoadedConfig(future.snapshot);\n                    var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.attachRef = null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\nfunction parentLoadedConfig(snapshot) {\n    for (var s = snapshot.parent; s; s = s.parent) {\n        var route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Simple function check, but generic so type inference will flow. Example:\n *\n * function product(a: number, b: number) {\n *   return a * b;\n * }\n *\n * if (isFunction<product>(fn)) {\n *   return fn(1, 2);\n * } else {\n *   throw \"Must provide the `product` function\";\n * }\n */\nfunction isFunction(v) {\n    return typeof v === 'function';\n}\nfunction isBoolean(v) {\n    return typeof v === 'boolean';\n}\nfunction isUrlTree(v) {\n    return v instanceof UrlTree;\n}\nfunction isCanLoad(guard) {\n    return guard && isFunction(guard.canLoad);\n}\nfunction isCanActivate(guard) {\n    return guard && isFunction(guard.canActivate);\n}\nfunction isCanActivateChild(guard) {\n    return guard && isFunction(guard.canActivateChild);\n}\nfunction isCanDeactivate(guard) {\n    return guard && isFunction(guard.canDeactivate);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = /** @class */ (function () {\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = /** @class */ (function () {\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\nfunction noMatch(segmentGroup) {\n    return new Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\nfunction absoluteRedirect(newTree) {\n    return new Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\nfunction namedOutletsRedirect(redirectTo) {\n    return new Observable(function (obs) { return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\")); });\n}\nfunction canLoadFails(route) {\n    return new Observable(function (obs) { return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\")); });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = /** @class */ (function () {\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(NgModuleRef);\n    }\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var urlTrees$ = expanded$.pipe(map(function (rootSegmentGroup) { return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, _this.urlTree.fragment); }));\n        return urlTrees$.pipe(catchError(function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var mapped$ = expanded$.pipe(map(function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, tree.queryParams, tree.fragment);\n        }));\n        return mapped$.pipe(catchError(function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var _a;\n        var root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n    };\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.expandChildren(ngModule, routes, segmentGroup)\n                .pipe(map(function (children) { return new UrlSegmentGroup([], children); }));\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    // Recursively expand segment groups for all the child outlets\n    ApplyRedirects.prototype.expandChildren = function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        return of.apply(void 0, __spread(routes)).pipe(map(function (r) {\n            var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return expanded$.pipe(catchError(function (e) {\n                if (e instanceof NoMatch) {\n                    // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                    // talk to Jason\n                    return of(null);\n                }\n                throw e;\n            }));\n        }), concatAll(), first(function (s) { return !!s; }), catchError(function (e, _) {\n            if (e instanceof EmptyError || e.name === 'EmptyError') {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var newTree = this.applyRedirectCommands([], route.redirectTo, {});\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(mergeMap(function (newSegments) {\n            var group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        }));\n    };\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var newTree = this.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(mergeMap(function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        }));\n    };\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return this.configLoader.load(ngModule.injector, route)\n                    .pipe(map(function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                }));\n            }\n            return of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var rawSlicedSegments = segments.slice(lastChild);\n        var childConfig$ = this.getChildConfig(ngModule, route, segments);\n        return childConfig$.pipe(mergeMap(function (routerConfig) {\n            var childModule = routerConfig.module;\n            var childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return expanded$_1.pipe(map(function (children) { return new UrlSegmentGroup(consumedSegments, children); }));\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return expanded$.pipe(map(function (cs) {\n                return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n            }));\n        }));\n    };\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route, segments) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return of(route._loadedConfig);\n            }\n            return runCanLoadGuard(ngModule.injector, route, segments)\n                .pipe(mergeMap(function (shouldLoad) {\n                if (shouldLoad) {\n                    return _this.configLoader.load(ngModule.injector, route)\n                        .pipe(map(function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    }));\n                }\n                return canLoadFails(route);\n            }));\n        }\n        return of(new LoadedRouterConfig([], ngModule));\n    };\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var res = [];\n        var c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(route.redirectTo);\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var res = {};\n        forEach(redirectToParams, function (v, k) {\n            var copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) { return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n            _this.findOrReturn(s, actualSegments); });\n    };\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var e_1, _a;\n        var idx = 0;\n        try {\n            for (var actualSegments_1 = __values(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {\n                var s = actualSegments_1_1.value;\n                if (s.path === redirectToUrlSegment.path) {\n                    actualSegments.splice(idx);\n                    return s;\n                }\n                idx++;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\nfunction runCanLoadGuard(moduleInjector, route, segments) {\n    var canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return of(true);\n    var obs = from(canLoad).pipe(map(function (injectionToken) {\n        var guard = moduleInjector.get(injectionToken);\n        var guardVal;\n        if (isCanLoad(guard)) {\n            guardVal = guard.canLoad(route, segments);\n        }\n        else if (isFunction(guard)) {\n            guardVal = guard(route, segments);\n        }\n        else {\n            throw new Error('Invalid CanLoad guard');\n        }\n        return wrapIntoObservable(guardVal);\n    }));\n    return obs.pipe(concatAll(), every(function (result) { return result === true; }));\n}\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var matcher = route.matcher || defaultUrlMatcher;\n    var res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: [],\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: res.consumed,\n        lastChild: res.consumed.length,\n        positionalParamSegments: res.posParams,\n    };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var e_2, _a;\n    var res = {};\n    try {\n        for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n            var r = routes_1_1.value;\n            if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n                res[getOutlet(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return __assign({}, children, res);\n}\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var e_3, _a;\n    var res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    try {\n        for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n            var r = routes_2_1.value;\n            if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n                res[getOutlet(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return res;\n}\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction applyRedirects$1(moduleInjector, configLoader, urlSerializer, config) {\n    return function (source) {\n        return source.pipe(switchMap(function (t) { return applyRedirects(moduleInjector, configLoader, urlSerializer, t.extractedUrl, config)\n            .pipe(map(function (urlAfterRedirects) { return (__assign({}, t, { urlAfterRedirects: urlAfterRedirects })); })); }));\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CanActivate = /** @class */ (function () {\n    function CanActivate(path) {\n        this.path = path;\n        this.route = this.path[this.path.length - 1];\n    }\n    return CanActivate;\n}());\nvar CanDeactivate = /** @class */ (function () {\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\nfunction getAllRouteGuards(future, curr, parentContexts) {\n    var futureRoot = future._root;\n    var currRoot = curr ? curr._root : null;\n    return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n}\nfunction getCanActivateChild(p) {\n    var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n    if (!canActivateChild || canActivateChild.length === 0)\n        return null;\n    return { node: p, guards: canActivateChild };\n}\nfunction getToken(token, snapshot, moduleInjector) {\n    var config = getClosestLoadedConfig(snapshot);\n    var injector = config ? config.module.injector : moduleInjector;\n    return injector.get(token);\n}\nfunction getClosestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var s = snapshot.parent; s; s = s.parent) {\n        var route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\nfunction getChildRouteGuards(futureNode, currNode, contexts, futurePath, checks) {\n    if (checks === void 0) { checks = {\n        canDeactivateChecks: [],\n        canActivateChecks: []\n    }; }\n    var prevChildren = nodeChildrenAsMap(currNode);\n    // Process the children of the future route\n    futureNode.children.forEach(function (c) {\n        getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);\n        delete prevChildren[c.value.outlet];\n    });\n    // Process any children left from the current route (not active for the future route)\n    forEach(prevChildren, function (v, k) {\n        return deactivateRouteAndItsChildren(v, contexts.getContext(k), checks);\n    });\n    return checks;\n}\nfunction getRouteGuards(futureNode, currNode, parentContexts, futurePath, checks) {\n    if (checks === void 0) { checks = {\n        canDeactivateChecks: [],\n        canActivateChecks: []\n    }; }\n    var future = futureNode.value;\n    var curr = currNode ? currNode.value : null;\n    var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n    // reusing the node\n    if (curr && future.routeConfig === curr.routeConfig) {\n        var shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n        if (shouldRun) {\n            checks.canActivateChecks.push(new CanActivate(futurePath));\n        }\n        else {\n            // we need to set the data\n            future.data = curr.data;\n            future._resolvedData = curr._resolvedData;\n        }\n        // If we have a component, we need to go through an outlet.\n        if (future.component) {\n            getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks);\n            // if we have a componentless route, we recurse but keep the same outlet map.\n        }\n        else {\n            getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);\n        }\n        if (shouldRun) {\n            var component = context && context.outlet && context.outlet.component || null;\n            checks.canDeactivateChecks.push(new CanDeactivate(component, curr));\n        }\n    }\n    else {\n        if (curr) {\n            deactivateRouteAndItsChildren(currNode, context, checks);\n        }\n        checks.canActivateChecks.push(new CanActivate(futurePath));\n        // If we have a component, we need to go through an outlet.\n        if (future.component) {\n            getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks);\n            // if we have a componentless route, we recurse but keep the same outlet map.\n        }\n        else {\n            getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);\n        }\n    }\n    return checks;\n}\nfunction shouldRunGuardsAndResolvers(curr, future, mode) {\n    if (typeof mode === 'function') {\n        return mode(curr, future);\n    }\n    switch (mode) {\n        case 'pathParamsChange':\n            return !equalPath(curr.url, future.url);\n        case 'pathParamsOrQueryParamsChange':\n            return !equalPath(curr.url, future.url) ||\n                !shallowEqual(curr.queryParams, future.queryParams);\n        case 'always':\n            return true;\n        case 'paramsOrQueryParamsChange':\n            return !equalParamsAndUrlSegments(curr, future) ||\n                !shallowEqual(curr.queryParams, future.queryParams);\n        case 'paramsChange':\n        default:\n            return !equalParamsAndUrlSegments(curr, future);\n    }\n}\nfunction deactivateRouteAndItsChildren(route, context, checks) {\n    var children = nodeChildrenAsMap(route);\n    var r = route.value;\n    forEach(children, function (node, childName) {\n        if (!r.component) {\n            deactivateRouteAndItsChildren(node, context, checks);\n        }\n        else if (context) {\n            deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);\n        }\n        else {\n            deactivateRouteAndItsChildren(node, null, checks);\n        }\n    });\n    if (!r.component) {\n        checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n    }\n    else if (context && context.outlet && context.outlet.isActivated) {\n        checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n    }\n    else {\n        checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar INITIAL_VALUE = Symbol('INITIAL_VALUE');\nfunction prioritizedGuardValue() {\n    return switchMap(function (obs) {\n        return combineLatest.apply(void 0, __spread(obs.map(function (o) { return o.pipe(take(1), startWith(INITIAL_VALUE)); }))).pipe(scan(function (acc, list) {\n            var isPending = false;\n            return list.reduce(function (innerAcc, val, i) {\n                if (innerAcc !== INITIAL_VALUE)\n                    return innerAcc;\n                // Toggle pending flag if any values haven't been set yet\n                if (val === INITIAL_VALUE)\n                    isPending = true;\n                // Any other return values are only valid if we haven't yet hit a pending call.\n                // This guarantees that in the case of a guard at the bottom of the tree that\n                // returns a redirect, we will wait for the higher priority guard at the top to\n                // finish before performing the redirect.\n                if (!isPending) {\n                    // Early return when we hit a `false` value as that should always cancel\n                    // navigation\n                    if (val === false)\n                        return val;\n                    if (i === list.length - 1 || isUrlTree(val)) {\n                        return val;\n                    }\n                }\n                return innerAcc;\n            }, acc);\n        }, INITIAL_VALUE), filter(function (item) { return item !== INITIAL_VALUE; }), map(function (item) { return isUrlTree(item) ? item : item === true; }), //\n        take(1));\n    });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction checkGuards(moduleInjector, forwardEvent) {\n    return function (source) {\n        return source.pipe(mergeMap(function (t) {\n            var targetSnapshot = t.targetSnapshot, currentSnapshot = t.currentSnapshot, _a = t.guards, canActivateChecks = _a.canActivateChecks, canDeactivateChecks = _a.canDeactivateChecks;\n            if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {\n                return of(__assign({}, t, { guardsResult: true }));\n            }\n            return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, moduleInjector)\n                .pipe(mergeMap(function (canDeactivate) {\n                return canDeactivate && isBoolean(canDeactivate) ?\n                    runCanActivateChecks(targetSnapshot, canActivateChecks, moduleInjector, forwardEvent) :\n                    of(canDeactivate);\n            }), map(function (guardsResult) { return (__assign({}, t, { guardsResult: guardsResult })); }));\n        }));\n    };\n}\nfunction runCanDeactivateChecks(checks, futureRSS, currRSS, moduleInjector) {\n    return from(checks).pipe(mergeMap(function (check) {\n        return runCanDeactivate(check.component, check.route, currRSS, futureRSS, moduleInjector);\n    }), first(function (result) { return result !== true; }, true));\n}\nfunction runCanActivateChecks(futureSnapshot, checks, moduleInjector, forwardEvent) {\n    return from(checks).pipe(concatMap(function (check) {\n        return from([\n            fireChildActivationStart(check.route.parent, forwardEvent),\n            fireActivationStart(check.route, forwardEvent),\n            runCanActivateChild(futureSnapshot, check.path, moduleInjector),\n            runCanActivate(futureSnapshot, check.route, moduleInjector)\n        ])\n            .pipe(concatAll(), first(function (result) {\n            return result !== true;\n        }, true));\n    }), first(function (result) { return result !== true; }, true));\n}\n/**\n   * This should fire off `ActivationStart` events for each route being activated at this\n   * level.\n   * In other words, if you're activating `a` and `b` below, `path` will contain the\n   * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n   * return\n   * `true` so checks continue to run.\n   */\nfunction fireActivationStart(snapshot, forwardEvent) {\n    if (snapshot !== null && forwardEvent) {\n        forwardEvent(new ActivationStart(snapshot));\n    }\n    return of(true);\n}\n/**\n   * This should fire off `ChildActivationStart` events for each route being activated at this\n   * level.\n   * In other words, if you're activating `a` and `b` below, `path` will contain the\n   * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n   * return\n   * `true` so checks continue to run.\n   */\nfunction fireChildActivationStart(snapshot, forwardEvent) {\n    if (snapshot !== null && forwardEvent) {\n        forwardEvent(new ChildActivationStart(snapshot));\n    }\n    return of(true);\n}\nfunction runCanActivate(futureRSS, futureARS, moduleInjector) {\n    var canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;\n    if (!canActivate || canActivate.length === 0)\n        return of(true);\n    var canActivateObservables = canActivate.map(function (c) {\n        return defer(function () {\n            var guard = getToken(c, futureARS, moduleInjector);\n            var observable;\n            if (isCanActivate(guard)) {\n                observable = wrapIntoObservable(guard.canActivate(futureARS, futureRSS));\n            }\n            else if (isFunction(guard)) {\n                observable = wrapIntoObservable(guard(futureARS, futureRSS));\n            }\n            else {\n                throw new Error('Invalid CanActivate guard');\n            }\n            return observable.pipe(first());\n        });\n    });\n    return of(canActivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanActivateChild(futureRSS, path, moduleInjector) {\n    var futureARS = path[path.length - 1];\n    var canActivateChildGuards = path.slice(0, path.length - 1)\n        .reverse()\n        .map(function (p) { return getCanActivateChild(p); })\n        .filter(function (_) { return _ !== null; });\n    var canActivateChildGuardsMapped = canActivateChildGuards.map(function (d) {\n        return defer(function () {\n            var guardsMapped = d.guards.map(function (c) {\n                var guard = getToken(c, d.node, moduleInjector);\n                var observable;\n                if (isCanActivateChild(guard)) {\n                    observable = wrapIntoObservable(guard.canActivateChild(futureARS, futureRSS));\n                }\n                else if (isFunction(guard)) {\n                    observable = wrapIntoObservable(guard(futureARS, futureRSS));\n                }\n                else {\n                    throw new Error('Invalid CanActivateChild guard');\n                }\n                return observable.pipe(first());\n            });\n            return of(guardsMapped).pipe(prioritizedGuardValue());\n        });\n    });\n    return of(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());\n}\nfunction runCanDeactivate(component, currARS, currRSS, futureRSS, moduleInjector) {\n    var canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;\n    if (!canDeactivate || canDeactivate.length === 0)\n        return of(true);\n    var canDeactivateObservables = canDeactivate.map(function (c) {\n        var guard = getToken(c, currARS, moduleInjector);\n        var observable;\n        if (isCanDeactivate(guard)) {\n            observable =\n                wrapIntoObservable(guard.canDeactivate(component, currARS, currRSS, futureRSS));\n        }\n        else if (isFunction(guard)) {\n            observable = wrapIntoObservable(guard(component, currARS, currRSS, futureRSS));\n        }\n        else {\n            throw new Error('Invalid CanDeactivate guard');\n        }\n        return observable.pipe(first());\n    });\n    return of(canDeactivateObservables).pipe(prioritizedGuardValue());\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = /** @class */ (function () {\n    function NoMatch() {\n    }\n    return NoMatch;\n}());\nfunction recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    if (relativeLinkResolution === void 0) { relativeLinkResolution = 'legacy'; }\n    return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution)\n        .recognize();\n}\nvar Recognizer = /** @class */ (function () {\n    function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n        this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n        this.relativeLinkResolution = relativeLinkResolution;\n    }\n    Recognizer.prototype.recognize = function () {\n        try {\n            var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup;\n            var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var rootNode = new TreeNode(root, children);\n            var routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return of(routeState);\n        }\n        catch (e) {\n            return new Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var route = routeNode.value;\n        var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        var e_1, _a;\n        try {\n            for (var config_1 = __values(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {\n                var r = config_1_1.value;\n                try {\n                    return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n                }\n                catch (e) {\n                    if (!(e instanceof NoMatch$1))\n                        throw e;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        var snapshot;\n        var consumedSegments = [];\n        var rawSlicedSegments = [];\n        if (route.path === '**') {\n            var params = segments.length > 0 ? last$1(segments).parameters : {};\n            snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n        }\n        else {\n            var result = match$1(rawSegment, route, segments);\n            consumedSegments = result.consumedSegments;\n            rawSlicedSegments = segments.slice(result.lastChild);\n            snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(__assign({}, this.urlTree.queryParams)), this.urlTree.fragment, getData(route), outlet, route.component, route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        }\n        var childConfig = getChildConfig(route);\n        var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig, this.relativeLinkResolution), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var children_1 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_1)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return route._loadedConfig.routes;\n    }\n    return [];\n}\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var matcher = route.matcher || defaultUrlMatcher;\n    var res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var posParams = {};\n    forEach(res.posParams, function (v, k) { posParams[k] = v.path; });\n    var parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\nfunction checkOutletNameUniqueness(nodes) {\n    var names = {};\n    nodes.forEach(function (n) {\n        var routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\nfunction getSourceSegmentGroup(segmentGroup) {\n    var s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\nfunction getPathIndexShift(segmentGroup) {\n    var s = segmentGroup;\n    var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config, relativeLinkResolution) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, config, segmentGroup.children, relativeLinkResolution));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, routes, children, relativeLinkResolution) {\n    var e_2, _a;\n    var res = {};\n    try {\n        for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n            var r = routes_1_1.value;\n            if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                if (relativeLinkResolution === 'legacy') {\n                    s._segmentIndexShift = segmentGroup.segments.length;\n                }\n                else {\n                    s._segmentIndexShift = consumedSegments.length;\n                }\n                res[getOutlet$1(r)] = s;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return __assign({}, children, res);\n}\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var e_3, _a;\n    var res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    try {\n        for (var routes_2 = __values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n            var r = routes_2_1.value;\n            if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                s._segmentIndexShift = consumedSegments.length;\n                res[getOutlet$1(r)] = s;\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return res;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\nfunction getData(route) {\n    return route.data || {};\n}\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction recognize$1(rootComponentType, config, serializer, paramsInheritanceStrategy, relativeLinkResolution) {\n    return function (source) {\n        return source.pipe(mergeMap(function (t) { return recognize(rootComponentType, config, t.urlAfterRedirects, serializer(t.urlAfterRedirects), paramsInheritanceStrategy, relativeLinkResolution)\n            .pipe(map(function (targetSnapshot) { return (__assign({}, t, { targetSnapshot: targetSnapshot })); })); }));\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction resolveData(paramsInheritanceStrategy, moduleInjector) {\n    return function (source) {\n        return source.pipe(mergeMap(function (t) {\n            var targetSnapshot = t.targetSnapshot, canActivateChecks = t.guards.canActivateChecks;\n            if (!canActivateChecks.length) {\n                return of(t);\n            }\n            return from(canActivateChecks)\n                .pipe(concatMap(function (check) { return runResolve(check.route, targetSnapshot, paramsInheritanceStrategy, moduleInjector); }), reduce(function (_, __) { return _; }), map(function (_) { return t; }));\n        }));\n    };\n}\nfunction runResolve(futureARS, futureRSS, paramsInheritanceStrategy, moduleInjector) {\n    var resolve = futureARS._resolve;\n    return resolveNode(resolve, futureARS, futureRSS, moduleInjector)\n        .pipe(map(function (resolvedData) {\n        futureARS._resolvedData = resolvedData;\n        futureARS.data = __assign({}, futureARS.data, inheritedParamsDataResolve(futureARS, paramsInheritanceStrategy).resolve);\n        return null;\n    }));\n}\nfunction resolveNode(resolve, futureARS, futureRSS, moduleInjector) {\n    var keys = Object.keys(resolve);\n    if (keys.length === 0) {\n        return of({});\n    }\n    if (keys.length === 1) {\n        var key_1 = keys[0];\n        return getResolver(resolve[key_1], futureARS, futureRSS, moduleInjector)\n            .pipe(map(function (value) {\n            var _a;\n            return _a = {}, _a[key_1] = value, _a;\n        }));\n    }\n    var data = {};\n    var runningResolvers$ = from(keys).pipe(mergeMap(function (key) {\n        return getResolver(resolve[key], futureARS, futureRSS, moduleInjector)\n            .pipe(map(function (value) {\n            data[key] = value;\n            return value;\n        }));\n    }));\n    return runningResolvers$.pipe(last(), map(function () { return data; }));\n}\nfunction getResolver(injectionToken, futureARS, futureRSS, moduleInjector) {\n    var resolver = getToken(injectionToken, futureARS, moduleInjector);\n    return resolver.resolve ? wrapIntoObservable(resolver.resolve(futureARS, futureRSS)) :\n        wrapIntoObservable(resolver(futureARS, futureRSS));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Perform a side effect through a switchMap for every emission on the source Observable,\n * but return an Observable that is identical to the source. It's essentially the same as\n * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,\n * it will wait before continuing with the original value.\n */\nfunction switchTap(next) {\n    return function (source) {\n        return source.pipe(switchMap(function (v) {\n            var nextResult = next(v);\n            if (nextResult) {\n                return from(nextResult).pipe(map(function () { return v; }));\n            }\n            return from([v]);\n        }));\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @publicApi\n */\nvar RouteReuseStrategy = /** @class */ (function () {\n    function RouteReuseStrategy() {\n    }\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = /** @class */ (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docsNotRequired\n * @publicApi\n */\nvar ROUTES = new InjectionToken('ROUTES');\nvar RouterConfigLoader = /** @class */ (function () {\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var moduleFactory$ = this.loadModuleFactory(route.loadChildren);\n        return moduleFactory$.pipe(map(function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n        }));\n    };\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return from(this.loader.load(loadChildren));\n        }\n        else {\n            return wrapIntoObservable(loadChildren()).pipe(mergeMap(function (t) {\n                if (t instanceof NgModuleFactory) {\n                    return of(t);\n                }\n                else {\n                    return from(_this.compiler.compileModuleAsync(t));\n                }\n            }));\n        }\n    };\n    return RouterConfigLoader;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @publicApi\n */\nvar UrlHandlingStrategy = /** @class */ (function () {\n    function UrlHandlingStrategy() {\n    }\n    return UrlHandlingStrategy;\n}());\n/**\n * @publicApi\n */\nvar DefaultUrlHandlingStrategy = /** @class */ (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\nfunction defaultMalformedUriErrorHandler(error, urlSerializer, url) {\n    return urlSerializer.parse('/');\n}\n/**\n * @internal\n */\nfunction defaultRouterHook(snapshot, runExtras) {\n    return of(null);\n}\n/**\n * @description\n *\n * An NgModule that provides navigation and URL manipulation capabilities.\n *\n * @see `Route`.\n * @see [Routing and Navigation Guide](guide/router).\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nvar Router = /** @class */ (function () {\n    /**\n     * Creates the router service.\n     */\n    // TODO: vsavkin make internal after the final is out.\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.lastSuccessfulNavigation = null;\n        this.currentNavigation = null;\n        this.navigationId = 0;\n        this.isNgZoneEnabled = false;\n        /**\n         * An event stream for routing events in this NgModule.\n         */\n        this.events = new Subject();\n        /**\n         * A handler for navigation errors in this NgModule.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Malformed uri error handler is invoked when `Router.parseUrl(url)` throws an\n         * error due to containing an invalid character. The most common case would be a `%` sign\n         * that's not encoded and is not part of a percent encoded sequence.\n         */\n        this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;\n        /**\n         * True if at least one navigation event has occurred,\n         * false otherwise.\n         */\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n        /**\n         * Hooks that enable you to pause navigation,\n         * either before or after the preactivation phase.\n         * Used by `RouterModule`.\n         *\n         * @internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        /**\n         * The strategy for re-using routes.\n         */\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        /**\n         * How to handle a navigation request to the current URL. One of:\n         * - `'ignore'` :  The router ignores the request.\n         * - `'reload'` : The router reloads the URL. Use to implement a \"refresh\" feature.\n         */\n        this.onSameUrlNavigation = 'ignore';\n        /**\n         * How to merge parameters, data, and resolved data from parent to child\n         * routes. One of:\n         *\n         * - `'emptyOnly'` : Inherit parent parameters, data, and resolved data\n         * for path-less or component-less routes.\n         * - `'always'` : Inherit parent parameters, data, and resolved data\n         * for all child routes.\n         */\n        this.paramsInheritanceStrategy = 'emptyOnly';\n        /**\n         * Defines when the router updates the browser URL. The default behavior is to update after\n         * successful navigation. However, some applications may prefer a mode where the URL gets\n         * updated at the beginning of navigation. The most common use case would be updating the\n         * URL early so if navigation fails, you can show an error message with the URL that failed.\n         * Available options are:\n         *\n         * - `'deferred'`, the default, updates the browser URL after navigation has finished.\n         * - `'eager'`, updates browser URL at the beginning of navigation.\n         */\n        this.urlUpdateStrategy = 'deferred';\n        /**\n         * See {@link RouterModule} for more information.\n         */\n        this.relativeLinkResolution = 'legacy';\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(NgModuleRef);\n        this.console = injector.get(ÉµConsole);\n        var ngZone = injector.get(NgZone);\n        this.isNgZoneEnabled = ngZone instanceof NgZone;\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.browserUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.transitions = new BehaviorSubject({\n            id: 0,\n            currentUrlTree: this.currentUrlTree,\n            currentRawUrl: this.currentUrlTree,\n            extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),\n            urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),\n            rawUrl: this.currentUrlTree,\n            extras: {},\n            resolve: null,\n            reject: null,\n            promise: Promise.resolve(true),\n            source: 'imperative',\n            restoredState: null,\n            currentSnapshot: this.routerState.snapshot,\n            targetSnapshot: null,\n            currentRouterState: this.routerState,\n            targetRouterState: null,\n            guards: { canActivateChecks: [], canDeactivateChecks: [] },\n            guardsResult: null,\n        });\n        this.navigations = this.setupNavigations(this.transitions);\n        this.processNavigations();\n    }\n    Router.prototype.setupNavigations = function (transitions) {\n        var _this = this;\n        var eventsSubject = this.events;\n        return transitions.pipe(filter(function (t) { return t.id !== 0; }), \n        // Extract URL\n        map(function (t) { return (__assign({}, t, { extractedUrl: _this.urlHandlingStrategy.extract(t.rawUrl) })); }), \n        // Using switchMap so we cancel executing navigations when a new one comes in\n        switchMap(function (t) {\n            var completed = false;\n            var errored = false;\n            return of(t).pipe(\n            // Store the Navigation object\n            tap(function (t) {\n                _this.currentNavigation = {\n                    id: t.id,\n                    initialUrl: t.currentRawUrl,\n                    extractedUrl: t.extractedUrl,\n                    trigger: t.source,\n                    extras: t.extras,\n                    previousNavigation: _this.lastSuccessfulNavigation ? __assign({}, _this.lastSuccessfulNavigation, { previousNavigation: null }) :\n                        null\n                };\n            }), switchMap(function (t) {\n                var urlTransition = !_this.navigated || t.extractedUrl.toString() !== _this.browserUrlTree.toString();\n                var processCurrentUrl = (_this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n                    _this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl);\n                if (processCurrentUrl) {\n                    return of(t).pipe(\n                    // Fire NavigationStart event\n                    switchMap(function (t) {\n                        var transition = _this.transitions.getValue();\n                        eventsSubject.next(new NavigationStart(t.id, _this.serializeUrl(t.extractedUrl), t.source, t.restoredState));\n                        if (transition !== _this.transitions.getValue()) {\n                            return EMPTY;\n                        }\n                        return [t];\n                    }), \n                    // This delay is required to match old behavior that forced navigation to\n                    // always be async\n                    switchMap(function (t) { return Promise.resolve(t); }), \n                    // ApplyRedirects\n                    applyRedirects$1(_this.ngModule.injector, _this.configLoader, _this.urlSerializer, _this.config), \n                    // Update the currentNavigation\n                    tap(function (t) {\n                        _this.currentNavigation = __assign({}, _this.currentNavigation, { finalUrl: t.urlAfterRedirects });\n                    }), \n                    // Recognize\n                    recognize$1(_this.rootComponentType, _this.config, function (url) { return _this.serializeUrl(url); }, _this.paramsInheritanceStrategy, _this.relativeLinkResolution), \n                    // Update URL if in `eager` update mode\n                    tap(function (t) {\n                        if (_this.urlUpdateStrategy === 'eager') {\n                            if (!t.extras.skipLocationChange) {\n                                _this.setBrowserUrl(t.urlAfterRedirects, !!t.extras.replaceUrl, t.id);\n                            }\n                            _this.browserUrlTree = t.urlAfterRedirects;\n                        }\n                    }), \n                    // Fire RoutesRecognized\n                    tap(function (t) {\n                        var routesRecognized = new RoutesRecognized(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                        eventsSubject.next(routesRecognized);\n                    }));\n                }\n                else {\n                    var processPreviousUrl = urlTransition && _this.rawUrlTree &&\n                        _this.urlHandlingStrategy.shouldProcessUrl(_this.rawUrlTree);\n                    /* When the current URL shouldn't be processed, but the previous one was, we\n                     * handle this \"error condition\" by navigating to the previously successful URL,\n                     * but leaving the URL intact.*/\n                    if (processPreviousUrl) {\n                        var id = t.id, extractedUrl = t.extractedUrl, source = t.source, restoredState = t.restoredState, extras = t.extras;\n                        var navStart = new NavigationStart(id, _this.serializeUrl(extractedUrl), source, restoredState);\n                        eventsSubject.next(navStart);\n                        var targetSnapshot = createEmptyState(extractedUrl, _this.rootComponentType).snapshot;\n                        return of(__assign({}, t, { targetSnapshot: targetSnapshot, urlAfterRedirects: extractedUrl, extras: __assign({}, extras, { skipLocationChange: false, replaceUrl: false }) }));\n                    }\n                    else {\n                        /* When neither the current or previous URL can be processed, do nothing other\n                         * than update router's internal reference to the current \"settled\" URL. This\n                         * way the next navigation will be coming from the current URL in the browser.\n                         */\n                        _this.rawUrlTree = t.rawUrl;\n                        t.resolve(null);\n                        return EMPTY;\n                    }\n                }\n            }), \n            // Before Preactivation\n            switchTap(function (t) {\n                var targetSnapshot = t.targetSnapshot, navigationId = t.id, appliedUrlTree = t.extractedUrl, rawUrlTree = t.rawUrl, _a = t.extras, skipLocationChange = _a.skipLocationChange, replaceUrl = _a.replaceUrl;\n                return _this.hooks.beforePreactivation(targetSnapshot, {\n                    navigationId: navigationId,\n                    appliedUrlTree: appliedUrlTree,\n                    rawUrlTree: rawUrlTree,\n                    skipLocationChange: !!skipLocationChange,\n                    replaceUrl: !!replaceUrl,\n                });\n            }), \n            // --- GUARDS ---\n            tap(function (t) {\n                var guardsStart = new GuardsCheckStart(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                _this.triggerEvent(guardsStart);\n            }), map(function (t) { return (__assign({}, t, { guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, _this.rootContexts) })); }), checkGuards(_this.ngModule.injector, function (evt) { return _this.triggerEvent(evt); }), tap(function (t) {\n                if (isUrlTree(t.guardsResult)) {\n                    var error = navigationCancelingError(\"Redirecting to \\\"\" + _this.serializeUrl(t.guardsResult) + \"\\\"\");\n                    error.url = t.guardsResult;\n                    throw error;\n                }\n            }), tap(function (t) {\n                var guardsEnd = new GuardsCheckEnd(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);\n                _this.triggerEvent(guardsEnd);\n            }), filter(function (t) {\n                if (!t.guardsResult) {\n                    _this.resetUrlToCurrentUrlTree();\n                    var navCancel = new NavigationCancel(t.id, _this.serializeUrl(t.extractedUrl), '');\n                    eventsSubject.next(navCancel);\n                    t.resolve(false);\n                    return false;\n                }\n                return true;\n            }), \n            // --- RESOLVE ---\n            switchTap(function (t) {\n                if (t.guards.canActivateChecks.length) {\n                    return of(t).pipe(tap(function (t) {\n                        var resolveStart = new ResolveStart(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                        _this.triggerEvent(resolveStart);\n                    }), resolveData(_this.paramsInheritanceStrategy, _this.ngModule.injector), //\n                    tap(function (t) {\n                        var resolveEnd = new ResolveEnd(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(t.urlAfterRedirects), t.targetSnapshot);\n                        _this.triggerEvent(resolveEnd);\n                    }));\n                }\n                return undefined;\n            }), \n            // --- AFTER PREACTIVATION ---\n            switchTap(function (t) {\n                var targetSnapshot = t.targetSnapshot, navigationId = t.id, appliedUrlTree = t.extractedUrl, rawUrlTree = t.rawUrl, _a = t.extras, skipLocationChange = _a.skipLocationChange, replaceUrl = _a.replaceUrl;\n                return _this.hooks.afterPreactivation(targetSnapshot, {\n                    navigationId: navigationId,\n                    appliedUrlTree: appliedUrlTree,\n                    rawUrlTree: rawUrlTree,\n                    skipLocationChange: !!skipLocationChange,\n                    replaceUrl: !!replaceUrl,\n                });\n            }), map(function (t) {\n                var targetRouterState = createRouterState(_this.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);\n                return (__assign({}, t, { targetRouterState: targetRouterState }));\n            }), \n            /* Once here, we are about to activate syncronously. The assumption is this will\n               succeed, and user code may read from the Router service. Therefore before\n               activation, we need to update router properties storing the current URL and the\n               RouterState, as well as updated the browser URL. All this should happen *before*\n               activating. */\n            tap(function (t) {\n                _this.currentUrlTree = t.urlAfterRedirects;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, t.rawUrl);\n                _this.routerState = t.targetRouterState;\n                if (_this.urlUpdateStrategy === 'deferred') {\n                    if (!t.extras.skipLocationChange) {\n                        _this.setBrowserUrl(_this.rawUrlTree, !!t.extras.replaceUrl, t.id, t.extras.state);\n                    }\n                    _this.browserUrlTree = t.urlAfterRedirects;\n                }\n            }), activateRoutes(_this.rootContexts, _this.routeReuseStrategy, function (evt) { return _this.triggerEvent(evt); }), tap({ next: function () { completed = true; }, complete: function () { completed = true; } }), finalize(function () {\n                /* When the navigation stream finishes either through error or success, we set the\n                 * `completed` or `errored` flag. However, there are some situations where we could\n                 * get here without either of those being set. For instance, a redirect during\n                 * NavigationStart. Therefore, this is a catch-all to make sure the NavigationCancel\n                 * event is fired when a navigation gets cancelled but not caught by other means. */\n                if (!completed && !errored) {\n                    // Must reset to current URL tree here to ensure history.state is set. On a fresh\n                    // page load, if a new navigation comes in before a successful navigation\n                    // completes, there will be nothing in history.state.navigationId. This can cause\n                    // sync problems with AngularJS sync code which looks for a value here in order\n                    // to determine whether or not to handle a given popstate event or to leave it\n                    // to the Angualr router.\n                    _this.resetUrlToCurrentUrlTree();\n                    var navCancel = new NavigationCancel(t.id, _this.serializeUrl(t.extractedUrl), \"Navigation ID \" + t.id + \" is not equal to the current navigation id \" + _this.navigationId);\n                    eventsSubject.next(navCancel);\n                    t.resolve(false);\n                }\n                // currentNavigation should always be reset to null here. If navigation was\n                // successful, lastSuccessfulTransition will have already been set. Therefore we\n                // can safely set currentNavigation to null here.\n                _this.currentNavigation = null;\n            }), catchError(function (e) {\n                errored = true;\n                /* This error type is issued during Redirect, and is handled as a cancellation\n                 * rather than an error. */\n                if (isNavigationCancelingError(e)) {\n                    var redirecting = isUrlTree(e.url);\n                    if (!redirecting) {\n                        // Set property only if we're not redirecting. If we landed on a page and\n                        // redirect to `/` route, the new navigation is going to see the `/` isn't\n                        // a change from the default currentUrlTree and won't navigate. This is\n                        // only applicable with initial navigation, so setting `navigated` only when\n                        // not redirecting resolves this scenario.\n                        _this.navigated = true;\n                        _this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);\n                    }\n                    var navCancel = new NavigationCancel(t.id, _this.serializeUrl(t.extractedUrl), e.message);\n                    eventsSubject.next(navCancel);\n                    t.resolve(false);\n                    if (redirecting) {\n                        _this.navigateByUrl(e.url);\n                    }\n                    /* All other errors should reset to the router's internal URL reference to the\n                     * pre-error state. */\n                }\n                else {\n                    _this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);\n                    var navError = new NavigationError(t.id, _this.serializeUrl(t.extractedUrl), e);\n                    eventsSubject.next(navError);\n                    try {\n                        t.resolve(_this.errorHandler(e));\n                    }\n                    catch (ee) {\n                        t.reject(ee);\n                    }\n                }\n                return EMPTY;\n            }));\n            // TODO(jasonaden): remove cast once g3 is on updated TypeScript\n        }));\n    };\n    /**\n     * @internal\n     * TODO: this should be removed once the constructor of the router made internal\n     */\n    Router.prototype.resetRootComponentType = function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    };\n    Router.prototype.getTransition = function () { return this.transitions.value; };\n    Router.prototype.setTransition = function (t) {\n        this.transitions.next(__assign({}, this.getTransition(), t));\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    Router.prototype.initialNavigation = function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     */\n    Router.prototype.setUpLocationChangeListener = function () {\n        var _this = this;\n        // Don't need to use Zone.wrap any more, because zone.js\n        // already patch onPopState, so location change callback will\n        // run into ngZone\n        if (!this.locationSubscription) {\n            this.locationSubscription = this.location.subscribe(function (change) {\n                var rawUrlTree = _this.parseUrl(change['url']);\n                var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                // Navigations coming from Angular router have a navigationId state property. When this\n                // exists, restore the state.\n                var state = change.state && change.state.navigationId ? change.state : null;\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n            });\n        }\n    };\n    Object.defineProperty(Router.prototype, \"url\", {\n        /** The current URL. */\n        get: function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    /** The current Navigation object if one exists */\n    Router.prototype.getCurrentNavigation = function () { return this.currentNavigation; };\n    /** @internal */\n    Router.prototype.triggerEvent = function (event) { this.events.next(event); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * @param config The route array for the new configuration.\n     *\n     * @usageNotes\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    Router.prototype.resetConfig = function (config) {\n        validateConfig(config);\n        this.config = config.map(standardizeConfig);\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n    };\n    /** @docsNotRequired */\n    Router.prototype.ngOnDestroy = function () { this.dispose(); };\n    /** Disposes of the router. */\n    Router.prototype.dispose = function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = null;\n        }\n    };\n    /**\n     * Applies an array of commands to the current URL tree and creates a new URL tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * @param commands An array of commands to apply.\n     * @param navigationExtras\n     * @returns The new URL tree.\n     *\n     * @usageNotes\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     */\n    Router.prototype.createUrlTree = function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (isDevMode() && preserveQueryParams && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var a = relativeTo || this.routerState.root;\n        var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, q, f);\n    };\n    /**\n     * Navigate based on the provided URL, which must be absolute.\n     *\n     * @param url An absolute URL. The function does not apply any delta to the current URL.\n     * @param extras An object containing properties that modify the navigation strategy.\n     * The function ignores any properties in the `NavigationExtras` that would change the\n     * provided URL.\n     *\n     * @returns A Promise that resolves to 'true' when navigation succeeds,\n     * to 'false' when navigation fails, or is rejected on error.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     */\n    Router.prototype.navigateByUrl = function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        if (isDevMode() && this.isNgZoneEnabled && !NgZone.isInAngularZone()) {\n            this.console.warn(\"Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?\");\n        }\n        var urlTree = isUrlTree(url) ? url : this.parseUrl(url);\n        var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * The first parameter of `navigate()` is a delta to be applied to the current URL\n     * or the one provided in the `relativeTo` property of the second parameter (the\n     * `NavigationExtras`).\n     *\n     * In order to affect this browser's `history.state` entry, the `state`\n     * parameter can be passed. This must be an object because the router\n     * will add the `navigationId` property to this object before creating\n     * the new history item.\n     */\n    Router.prototype.navigate = function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /** Serializes a `UrlTree` into a string */\n    Router.prototype.serializeUrl = function (url) { return this.urlSerializer.serialize(url); };\n    /** Parses a string into a `UrlTree` */\n    Router.prototype.parseUrl = function (url) {\n        var urlTree;\n        try {\n            urlTree = this.urlSerializer.parse(url);\n        }\n        catch (e) {\n            urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);\n        }\n        return urlTree;\n    };\n    /** Returns whether the url is activated */\n    Router.prototype.isActive = function (url, exact) {\n        if (isUrlTree(url)) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var urlTree = this.parseUrl(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        this.navigations.subscribe(function (t) {\n            _this.navigated = true;\n            _this.lastSuccessfulId = t.id;\n            _this.events\n                .next(new NavigationEnd(t.id, _this.serializeUrl(t.extractedUrl), _this.serializeUrl(_this.currentUrlTree)));\n            _this.lastSuccessfulNavigation = _this.currentNavigation;\n            _this.currentNavigation = null;\n            t.resolve(true);\n        }, function (e) { _this.console.warn(\"Unhandled Navigation Error: \"); });\n    };\n    Router.prototype.scheduleNavigation = function (rawUrl, source, restoredState, extras) {\n        var lastNavigation = this.getTransition();\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a popstate was emitted first.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a hashchange was emitted first.\n        if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var resolve = null;\n        var reject = null;\n        var promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var id = ++this.navigationId;\n        this.setTransition({\n            id: id,\n            source: source,\n            restoredState: restoredState,\n            currentUrlTree: this.currentUrlTree,\n            currentRawUrl: this.rawUrlTree, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise,\n            currentSnapshot: this.routerState.snapshot,\n            currentRouterState: this.routerState\n        });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    Router.prototype.setBrowserUrl = function (url, replaceUrl, id, state) {\n        var path = this.urlSerializer.serialize(url);\n        state = state || {};\n        if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n            // TODO(jasonaden): Remove first `navigationId` and rely on `ng` namespace.\n            this.location.replaceState(path, '', __assign({}, state, { navigationId: id }));\n        }\n        else {\n            this.location.go(path, '', __assign({}, state, { navigationId: id }));\n        }\n    };\n    Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {\n        this.routerState = storedState;\n        this.currentUrlTree = storedUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n        this.resetUrlToCurrentUrlTree();\n    };\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n    };\n    return Router;\n}());\nfunction validateCommands(commands) {\n    for (var i = 0; i < commands.length; i++) {\n        var cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`.\n * When linking to this `user/:name` route, you use the `RouterLink` directive.\n *\n * If the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive how to handle queryParams. Available options are:\n *  - `'merge'`: merge the queryParams into the current queryParams\n *  - `'preserve'`: preserve the current queryParams\n *  - default/`''`: use the queryParams only\n *\n * Same options for {@link NavigationExtras#queryParamsHandling\n * NavigationExtras#queryParamsHandling}.\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * You can provide a `state` value to be persisted to the browser's History.state\n * property (See https://developer.mozilla.org/en-US/docs/Web/API/History#Properties). It's\n * used as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [state]=\"{tracingId: 123}\">\n *   link to user component\n * </a>\n * ```\n *\n * And later the value can be read from the router through `router.getCurrentNavigation`.\n * For example, to capture the `tracingId` above during the `NavigationStart` event:\n *\n * ```\n * // Get NavigationStart events\n * router.events.pipe(filter(e => e instanceof NavigationStart)).subscribe(e => {\n *   const navigation = router.getCurrentNavigation();\n *   tracingService.trace({id: navigation.extras.state.tracingId});\n * });\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * See {@link Router#createUrlTree createUrlTree} for more information.\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nvar RouterLink = /** @class */ (function () {\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         */\n        set: function (value) {\n            if (isDevMode() && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLink.prototype.onClick = function () {\n        var extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], RouterLink.prototype, \"queryParams\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLink.prototype, \"fragment\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLink.prototype, \"queryParamsHandling\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLink.prototype, \"preserveFragment\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLink.prototype, \"skipLocationChange\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLink.prototype, \"replaceUrl\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], RouterLink.prototype, \"state\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], RouterLink.prototype, \"routerLink\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], RouterLink.prototype, \"preserveQueryParams\", null);\n    __decorate([\n        HostListener('click'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], RouterLink.prototype, \"onClick\", null);\n    RouterLink = __decorate([\n        Directive({ selector: ':not(a):not(area)[routerLink]' }),\n        __param(2, Attribute('tabindex')),\n        __metadata(\"design:paramtypes\", [Router, ActivatedRoute, String, Renderer2, ElementRef])\n    ], RouterLink);\n    return RouterLink;\n}());\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nvar RouterLinkWithHref = /** @class */ (function () {\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        set: function (value) {\n            if (isDevMode() && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n            state: this.state\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        HostBinding('attr.target'), Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLinkWithHref.prototype, \"target\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], RouterLinkWithHref.prototype, \"queryParams\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLinkWithHref.prototype, \"fragment\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], RouterLinkWithHref.prototype, \"queryParamsHandling\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLinkWithHref.prototype, \"preserveFragment\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLinkWithHref.prototype, \"skipLocationChange\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RouterLinkWithHref.prototype, \"replaceUrl\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], RouterLinkWithHref.prototype, \"state\", void 0);\n    __decorate([\n        HostBinding(),\n        __metadata(\"design:type\", String)\n    ], RouterLinkWithHref.prototype, \"href\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], RouterLinkWithHref.prototype, \"routerLink\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], RouterLinkWithHref.prototype, \"preserveQueryParams\", null);\n    __decorate([\n        HostListener('click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Boolean, Boolean, Boolean]),\n        __metadata(\"design:returntype\", Boolean)\n    ], RouterLinkWithHref.prototype, \"onClick\", null);\n    RouterLinkWithHref = __decorate([\n        Directive({ selector: 'a[routerLink],area[routerLink]' }),\n        __metadata(\"design:paramtypes\", [Router, ActivatedRoute,\n            LocationStrategy])\n    ], RouterLinkWithHref);\n    return RouterLinkWithHref;\n}());\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * @description\n *\n * Lets you add a CSS class to an element when the link's route becomes active.\n *\n * This directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nvar RouterLinkActive = /** @class */ (function () {\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        set: function (data) {\n            var classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        Promise.resolve().then(function () {\n            var hasActiveLinks = _this.hasActiveLinks();\n            if (_this.isActive !== hasActiveLinks) {\n                _this.isActive = hasActiveLinks;\n                _this.classes.forEach(function (c) {\n                    if (hasActiveLinks) {\n                        _this.renderer.addClass(_this.element.nativeElement, c);\n                    }\n                    else {\n                        _this.renderer.removeClass(_this.element.nativeElement, c);\n                    }\n                });\n            }\n        });\n    };\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) {\n            return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n        };\n    };\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    __decorate([\n        ContentChildren(RouterLink, { descendants: true }),\n        __metadata(\"design:type\", QueryList)\n    ], RouterLinkActive.prototype, \"links\", void 0);\n    __decorate([\n        ContentChildren(RouterLinkWithHref, { descendants: true }),\n        __metadata(\"design:type\", QueryList)\n    ], RouterLinkActive.prototype, \"linksWithHrefs\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], RouterLinkActive.prototype, \"routerLinkActiveOptions\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], RouterLinkActive.prototype, \"routerLinkActive\", null);\n    RouterLinkActive = __decorate([\n        Directive({\n            selector: '[routerLinkActive]',\n            exportAs: 'routerLinkActive',\n        }),\n        __metadata(\"design:paramtypes\", [Router, ElementRef, Renderer2,\n            ChangeDetectorRef])\n    ], RouterLinkActive);\n    return RouterLinkActive;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a `RouterOutlet`\n *\n * @publicApi\n */\nvar OutletContext = /** @class */ (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n * @publicApi\n */\nvar ChildrenOutletContexts = /** @class */ (function () {\n    function ChildrenOutletContexts() {\n        // contexts for child outlets, by name.\n        this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = function (childName, outlet) {\n        var context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = function (childName) {\n        var context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = function () {\n        var contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * @ngModule RouterModule\n *\n * @publicApi\n */\nvar RouterOutlet = /** @class */ (function () {\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new EventEmitter();\n        this.deactivateEvents = new EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this._activatedRoute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    RouterOutlet.prototype.detach = function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    RouterOutlet.prototype.attach = function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var snapshot = activatedRoute._futureSnapshot;\n        var component = snapshot.routeConfig.component;\n        resolver = resolver || this.resolver;\n        var factory = resolver.resolveComponentFactory(component);\n        var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    __decorate([\n        Output('activate'),\n        __metadata(\"design:type\", Object)\n    ], RouterOutlet.prototype, \"activateEvents\", void 0);\n    __decorate([\n        Output('deactivate'),\n        __metadata(\"design:type\", Object)\n    ], RouterOutlet.prototype, \"deactivateEvents\", void 0);\n    RouterOutlet = __decorate([\n        Directive({ selector: 'router-outlet', exportAs: 'outlet' }),\n        __param(3, Attribute('name')),\n        __metadata(\"design:paramtypes\", [ChildrenOutletContexts, ViewContainerRef,\n            ComponentFactoryResolver, String, ChangeDetectorRef])\n    ], RouterOutlet);\n    return RouterOutlet;\n}());\nvar OutletInjector = /** @class */ (function () {\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @publicApi\n */\nvar PreloadingStrategy = /** @class */ (function () {\n    function PreloadingStrategy() {\n    }\n    return PreloadingStrategy;\n}());\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @publicApi\n */\nvar PreloadAllModules = /** @class */ (function () {\n    function PreloadAllModules() {\n    }\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return fn().pipe(catchError(function () { return of(null); }));\n    };\n    return PreloadAllModules;\n}());\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @publicApi\n */\nvar NoPreloading = /** @class */ (function () {\n    function NoPreloading() {\n    }\n    NoPreloading.prototype.preload = function (route, fn) { return of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * @publicApi\n */\nvar RouterPreloader = /** @class */ (function () {\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        this.subscription =\n            this.router.events\n                .pipe(filter(function (e) { return e instanceof NavigationEnd; }), concatMap(function () { return _this.preload(); }))\n                .subscribe(function () { });\n    };\n    RouterPreloader.prototype.preload = function () {\n        var ngModule = this.injector.get(NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n    // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n    // should be refactored.\n    RouterPreloader.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var e_1, _a;\n        var res = [];\n        try {\n            for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var route = routes_1_1.value;\n                // we already have the config loaded, just recurse\n                if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                    var childConfig = route._loadedConfig;\n                    res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                    // no config loaded, fetch the config\n                }\n                else if (route.loadChildren && !route.canLoad) {\n                    res.push(this.preloadConfig(ngModule, route));\n                    // recurse into children\n                }\n                else if (route.children) {\n                    res.push(this.processRoutes(ngModule, route.children));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return from(res).pipe(mergeAll(), map(function (_) { return void 0; }));\n    };\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var loaded$ = _this.loader.load(ngModule.injector, route);\n            return loaded$.pipe(mergeMap(function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            }));\n        });\n    };\n    RouterPreloader = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [Router, NgModuleFactoryLoader, Compiler,\n            Injector, PreloadingStrategy])\n    ], RouterPreloader);\n    return RouterPreloader;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RouterScroller = /** @class */ (function () {\n    function RouterScroller(router, \n    /** @docsNotRequired */ viewportScroller, options) {\n        if (options === void 0) { options = {}; }\n        this.router = router;\n        this.viewportScroller = viewportScroller;\n        this.options = options;\n        this.lastId = 0;\n        this.lastSource = 'imperative';\n        this.restoredId = 0;\n        this.store = {};\n        // Default both options to 'disabled'\n        options.scrollPositionRestoration = options.scrollPositionRestoration || 'disabled';\n        options.anchorScrolling = options.anchorScrolling || 'disabled';\n    }\n    RouterScroller.prototype.init = function () {\n        // we want to disable the automatic scrolling because having two places\n        // responsible for scrolling results race conditions, especially given\n        // that browser don't implement this behavior consistently\n        if (this.options.scrollPositionRestoration !== 'disabled') {\n            this.viewportScroller.setHistoryScrollRestoration('manual');\n        }\n        this.routerEventsSubscription = this.createScrollEvents();\n        this.scrollEventsSubscription = this.consumeScrollEvents();\n    };\n    RouterScroller.prototype.createScrollEvents = function () {\n        var _this = this;\n        return this.router.events.subscribe(function (e) {\n            if (e instanceof NavigationStart) {\n                // store the scroll position of the current stable navigations.\n                _this.store[_this.lastId] = _this.viewportScroller.getScrollPosition();\n                _this.lastSource = e.navigationTrigger;\n                _this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n            }\n            else if (e instanceof NavigationEnd) {\n                _this.lastId = e.id;\n                _this.scheduleScrollEvent(e, _this.router.parseUrl(e.urlAfterRedirects).fragment);\n            }\n        });\n    };\n    RouterScroller.prototype.consumeScrollEvents = function () {\n        var _this = this;\n        return this.router.events.subscribe(function (e) {\n            if (!(e instanceof Scroll))\n                return;\n            // a popstate event. The pop state event will always ignore anchor scrolling.\n            if (e.position) {\n                if (_this.options.scrollPositionRestoration === 'top') {\n                    _this.viewportScroller.scrollToPosition([0, 0]);\n                }\n                else if (_this.options.scrollPositionRestoration === 'enabled') {\n                    _this.viewportScroller.scrollToPosition(e.position);\n                }\n                // imperative navigation \"forward\"\n            }\n            else {\n                if (e.anchor && _this.options.anchorScrolling === 'enabled') {\n                    _this.viewportScroller.scrollToAnchor(e.anchor);\n                }\n                else if (_this.options.scrollPositionRestoration !== 'disabled') {\n                    _this.viewportScroller.scrollToPosition([0, 0]);\n                }\n            }\n        });\n    };\n    RouterScroller.prototype.scheduleScrollEvent = function (routerEvent, anchor) {\n        this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n    };\n    RouterScroller.prototype.ngOnDestroy = function () {\n        if (this.routerEventsSubscription) {\n            this.routerEventsSubscription.unsubscribe();\n        }\n        if (this.scrollEventsSubscription) {\n            this.scrollEventsSubscription.unsubscribe();\n        }\n    };\n    return RouterScroller;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Contains a list of directives\n *\n *\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, EmptyOutletComponent];\n/**\n * @description\n *\n * Is used in DI to configure the router.\n *\n * @publicApi\n */\nvar ROUTER_CONFIGURATION = new InjectionToken('ROUTER_CONFIGURATION');\n/**\n * @docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            ApplicationRef, UrlSerializer, ChildrenOutletContexts, Location, Injector,\n            NgModuleFactoryLoader, Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\nfunction routerNgProbeToken() {\n    return new NgProbeToken('Router', Router);\n}\n/**\n * @usageNotes\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * @description\n *\n * Adds router directives and providers.\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * @publicApi\n */\nvar RouterModule = /** @class */ (function () {\n    // Note: We are injecting the Router so it gets created eagerly...\n    function RouterModule(guard, router) {\n    }\n    RouterModule_1 = RouterModule;\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Configuration Options:\n     *\n     * * `enableTracing` Toggles whether the router should log all navigation events to the console.\n     * * `useHash` Enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` Disables the initial navigation.\n     * * `errorHandler` Defines a custom error handler for failed navigations.\n     * * `preloadingStrategy` Configures a preloading strategy. See `PreloadAllModules`.\n     * * `onSameUrlNavigation` Define what the router should do if it receives a navigation request to\n     * the current URL.\n     * * `scrollPositionRestoration` Configures if the scroll position needs to be restored when\n     * navigating back.\n     * * `anchorScrolling` Configures if the router should scroll to the element when the url has a\n     * fragment.\n     * * `scrollOffset` Configures the scroll offset the router will use when scrolling to an element.\n     * * `paramsInheritanceStrategy` Defines how the router merges params, data and resolved data from\n     * parent to child routes.\n     * * `malformedUriErrorHandler` Defines a custom malformed uri error handler function. This\n     * handler is invoked when encodedURI contains invalid character sequences.\n     * * `urlUpdateStrategy` Defines when the router updates the browser URL. The default behavior is\n     * to update after successful navigation.\n     * * `relativeLinkResolution` Enables the correct relative link resolution in components with\n     * empty paths.\n     *\n     * See `ExtraOptions` for more details about the above options.\n    */\n    RouterModule.forRoot = function (routes, config) {\n        return {\n            ngModule: RouterModule_1,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new Optional(), new SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: RouterScroller,\n                    useFactory: createRouterScroller,\n                    deps: [Router, ViewportScroller, ROUTER_CONFIGURATION]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     */\n    RouterModule.forChild = function (routes) {\n        return { ngModule: RouterModule_1, providers: [provideRoutes(routes)] };\n    };\n    var RouterModule_1;\n    RouterModule = RouterModule_1 = __decorate([\n        NgModule({\n            declarations: ROUTER_DIRECTIVES,\n            exports: ROUTER_DIRECTIVES,\n            entryComponents: [EmptyOutletComponent]\n        }),\n        __param(0, Optional()), __param(0, Inject(ROUTER_FORROOT_GUARD)), __param(1, Optional()),\n        __metadata(\"design:paramtypes\", [Object, Router])\n    ], RouterModule);\n    return RouterModule;\n}());\nfunction createRouterScroller(router, viewportScroller, config) {\n    if (config.scrollOffset) {\n        viewportScroller.setOffset(config.scrollOffset);\n    }\n    return new RouterScroller(router, viewportScroller, config);\n}\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * @description\n *\n * Registers routes.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * @publicApi\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.malformedUriErrorHandler) {\n        router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n    }\n    if (opts.enableTracing) {\n        var dom_1 = ÉµgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    if (opts.onSameUrlNavigation) {\n        router.onSameUrlNavigation = opts.onSameUrlNavigation;\n    }\n    if (opts.paramsInheritanceStrategy) {\n        router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n    }\n    if (opts.urlUpdateStrategy) {\n        router.urlUpdateStrategy = opts.urlUpdateStrategy;\n    }\n    if (opts.relativeLinkResolution) {\n        router.relativeLinkResolution = opts.relativeLinkResolution;\n    }\n    return router;\n}\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = /** @class */ (function () {\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new Subject();\n    }\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var p = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var resolve = null;\n            var res = new Promise(function (r) { return resolve = r; });\n            var router = _this.injector.get(Router);\n            var opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return of(null);\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var opts = this.injector.get(ROUTER_CONFIGURATION);\n        var preloader = this.injector.get(RouterPreloader);\n        var routerScroller = this.injector.get(RouterScroller);\n        var router = this.injector.get(Router);\n        var ref = this.injector.get(ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        routerScroller.init();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(null);\n        this.resultOfPreactivationDone.complete();\n    };\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    RouterInitializer = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [Injector])\n    ], RouterInitializer);\n    return RouterInitializer;\n}());\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * @publicApi\n */\nvar ROUTER_INITIALIZER = new InjectionToken('Router Initializer');\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar VERSION = new Version('7.2.15');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ROUTER_FORROOT_GUARD as Éµangular_packages_router_router_a, RouterInitializer as Éµangular_packages_router_router_h, createRouterScroller as Éµangular_packages_router_router_c, getAppInitializer as Éµangular_packages_router_router_i, getBootstrapListener as Éµangular_packages_router_router_j, provideForRootGuard as Éµangular_packages_router_router_e, provideLocationStrategy as Éµangular_packages_router_router_d, provideRouterInitializer as Éµangular_packages_router_router_k, rootRoute as Éµangular_packages_router_router_g, routerNgProbeToken as Éµangular_packages_router_router_b, setupRouter as Éµangular_packages_router_router_f, RouterScroller as Éµangular_packages_router_router_n, Tree as Éµangular_packages_router_router_l, TreeNode as Éµangular_packages_router_router_m, RouterLink, RouterLinkWithHref, RouterLinkActive, RouterOutlet, ActivationEnd, ActivationStart, ChildActivationEnd, ChildActivationStart, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouterEvent, RoutesRecognized, Scroll, RouteReuseStrategy, Router, ROUTES, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, RouterModule, provideRoutes, ChildrenOutletContexts, OutletContext, NoPreloading, PreloadAllModules, PreloadingStrategy, RouterPreloader, ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot, PRIMARY_OUTLET, convertToParamMap, UrlHandlingStrategy, DefaultUrlSerializer, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, EmptyOutletComponent as ÉµEmptyOutletComponent, ROUTER_PROVIDERS as ÉµROUTER_PROVIDERS, flatten as Éµflatten };\n//# sourceMappingURL=router.js.map\n","/** PURE_IMPORTS_START _observable_concat,_util_isScheduler PURE_IMPORTS_END */\nimport { concat } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nexport function startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    var scheduler = array[array.length - 1];\n    if (isScheduler(scheduler)) {\n        array.pop();\n        return function (source) { return concat(array, source, scheduler); };\n    }\n    else {\n        return function (source) { return concat(array, source); };\n    }\n}\n//# sourceMappingURL=startWith.js.map\n","/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\nexport function reduce(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan(function (acc, value, index) { return accumulator(acc, value, index + 1); }), takeLast(1))(source);\n    };\n}\n//# sourceMappingURL=reduce.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nvar RouterModuleNgFactory = i0.Éµcmf(i1.RouterModule, [], function (_l) { return i0.Éµmod([i0.Éµmpd(512, i0.ComponentFactoryResolver, i0.ÉµCodegenComponentFactoryResolver, [[8, [ÉµEmptyOutletComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.Éµmpd(1073742336, i1.RouterModule, i1.RouterModule, [[2, i1.Éµangular_packages_router_router_a], [2, i1.Router]])]); });\nexport { RouterModuleNgFactory as RouterModuleNgFactory };\nvar styles_ÉµEmptyOutletComponent = [];\nvar RenderType_ÉµEmptyOutletComponent = i0.Éµcrt({ encapsulation: 2, styles: styles_ÉµEmptyOutletComponent, data: {} });\nexport { RenderType_ÉµEmptyOutletComponent as RenderType_ÉµEmptyOutletComponent };\nexport function View_ÉµEmptyOutletComponent_0(_l) { return i0.Éµvid(0, [(_l()(), i0.Éµeld(0, 16777216, null, null, 1, \"router-outlet\", [], null, null, null, null, null)), i0.Éµdid(1, 212992, null, 0, i1.RouterOutlet, [i1.ChildrenOutletContexts, i0.ViewContainerRef, i0.ComponentFactoryResolver, [8, null], i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nexport function View_ÉµEmptyOutletComponent_Host_0(_l) { return i0.Éµvid(0, [(_l()(), i0.Éµeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_ÉµEmptyOutletComponent_0, RenderType_ÉµEmptyOutletComponent)), i0.Éµdid(1, 49152, null, 0, i1.ÉµEmptyOutletComponent, [], null, null)], null, null); }\nvar ÉµEmptyOutletComponentNgFactory = i0.Éµccf(\"ng-component\", i1.ÉµEmptyOutletComponent, View_ÉµEmptyOutletComponent_Host_0, {}, {}, []);\nexport { ÉµEmptyOutletComponentNgFactory as ÉµEmptyOutletComponentNgFactory };\n","<router-outlet></router-outlet>","/**\n * @license Angular v7.2.15\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __spread, __read, __extends, __decorate, __metadata, __param } from 'tslib';\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, Injector, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { DOCUMENT, ÉµparseCookieValue } from '@angular/common';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * @publicApi\n */\nvar HttpHandler = /** @class */ (function () {\n    function HttpHandler() {\n    }\n    return HttpHandler;\n}());\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * @publicApi\n */\nvar HttpBackend = /** @class */ (function () {\n    function HttpBackend() {\n    }\n    return HttpBackend;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHeaders` class represents the header configuration options for an HTTP request.\n * Instances should be assumed immutable with lazy parsing.\n *\n * @publicApi\n */\nvar HttpHeaders = /** @class */ (function () {\n    /**  Constructs a new HTTP header object with the given values.*/\n    function HttpHeaders(headers) {\n        var _this = this;\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                headers.split('\\n').forEach(function (line) {\n                    var index = line.indexOf(':');\n                    if (index > 0) {\n                        var name_1 = line.slice(0, index);\n                        var key = name_1.toLowerCase();\n                        var value = line.slice(index + 1).trim();\n                        _this.maybeSetNormalizedName(name_1, key);\n                        if (_this.headers.has(key)) {\n                            _this.headers.get(key).push(value);\n                        }\n                        else {\n                            _this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                Object.keys(headers).forEach(function (name) {\n                    var values = headers[name];\n                    var key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        _this.headers.set(key, values);\n                        _this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of a header by a given name.\n     *\n     * @param name The header name to check for existence.\n     *\n     * @returns Whether the header exits.\n     */\n    HttpHeaders.prototype.has = function (name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    };\n    /**\n     * Returns the first header value that matches a given name.\n     *\n     * @param name The header name to retrieve.\n     *\n     * @returns A string if the header exists, null otherwise\n     */\n    HttpHeaders.prototype.get = function (name) {\n        this.init();\n        var values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Returns the names of the headers.\n     *\n     * @returns A list of header names.\n     */\n    HttpHeaders.prototype.keys = function () {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    };\n    /**\n     * Returns a list of header values for a given header name.\n     *\n     * @param name The header name from which to retrieve the values.\n     *\n     * @returns A string of values if the header exists, null otherwise.\n     */\n    HttpHeaders.prototype.getAll = function (name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    };\n    /**\n     * Appends a new header value to the existing set of\n     * header values.\n     *\n     * @param name The header name for which to append the values.\n     *\n     * @returns A clone of the HTTP header object with the value appended.\n     */\n    HttpHeaders.prototype.append = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'a' });\n    };\n    /**\n     * Sets a header value for a given name. If the header name already exists,\n     * its value is replaced with the given value.\n     *\n     * @param name The header name.\n     * @param value Provides the value to set or overide for a given name.\n     *\n     * @returns A clone of the HTTP header object with the newly set header value.\n     */\n    HttpHeaders.prototype.set = function (name, value) {\n        return this.clone({ name: name, value: value, op: 's' });\n    };\n    /**\n     * Deletes all header values for a given name.\n     *\n     * @param name The header name.\n     * @param value The header values to delete for a given name.\n     *\n     * @returns A clone of the HTTP header object.\n     */\n    HttpHeaders.prototype.delete = function (name, value) {\n        return this.clone({ name: name, value: value, op: 'd' });\n    };\n    HttpHeaders.prototype.maybeSetNormalizedName = function (name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    };\n    HttpHeaders.prototype.init = function () {\n        var _this = this;\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(function (update) { return _this.applyUpdate(update); });\n                this.lazyUpdate = null;\n            }\n        }\n    };\n    HttpHeaders.prototype.copyFrom = function (other) {\n        var _this = this;\n        other.init();\n        Array.from(other.headers.keys()).forEach(function (key) {\n            _this.headers.set(key, other.headers.get(key));\n            _this.normalizedNames.set(key, other.normalizedNames.get(key));\n        });\n    };\n    HttpHeaders.prototype.clone = function (update) {\n        var clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    };\n    HttpHeaders.prototype.applyUpdate = function (update) {\n        var key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                var value = update.value;\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                var base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push.apply(base, __spread(value));\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                var toDelete_1 = update.value;\n                if (!toDelete_1) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    var existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(function (value) { return toDelete_1.indexOf(value) === -1; });\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    };\n    /**\n     * @internal\n     */\n    HttpHeaders.prototype.forEach = function (fn) {\n        var _this = this;\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(function (key) { return fn(_this.normalizedNames.get(key), _this.headers.get(key)); });\n    };\n    return HttpHeaders;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A class that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values. If you pass URL query parameters\n * without encoding, the query parameters can get misinterpreted at the receiving end.\n * Use the `HttpParameterCodec` class to encode and decode the query-string values.\n *\n * @publicApi\n */\nvar HttpUrlEncodingCodec = /** @class */ (function () {\n    function HttpUrlEncodingCodec() {\n    }\n    HttpUrlEncodingCodec.prototype.encodeKey = function (key) { return standardEncoding(key); };\n    HttpUrlEncodingCodec.prototype.encodeValue = function (value) { return standardEncoding(value); };\n    HttpUrlEncodingCodec.prototype.decodeKey = function (key) { return decodeURIComponent(key); };\n    HttpUrlEncodingCodec.prototype.decodeValue = function (value) { return decodeURIComponent(value); };\n    return HttpUrlEncodingCodec;\n}());\nfunction paramParser(rawParams, codec) {\n    var map$$1 = new Map();\n    if (rawParams.length > 0) {\n        var params = rawParams.split('&');\n        params.forEach(function (param) {\n            var eqIdx = param.indexOf('=');\n            var _a = __read(eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))], 2), key = _a[0], val = _a[1];\n            var list = map$$1.get(key) || [];\n            list.push(val);\n            map$$1.set(key, list);\n        });\n    }\n    return map$$1;\n}\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable - all mutation operations return a new instance.\n *\n * @publicApi\n */\nvar HttpParams = /** @class */ (function () {\n    function HttpParams(options) {\n        if (options === void 0) { options = {}; }\n        var _this = this;\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(\"Cannot specify both fromString and fromObject.\");\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach(function (key) {\n                var value = options.fromObject[key];\n                _this.map.set(key, Array.isArray(value) ? value : [value]);\n            });\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     */\n    HttpParams.prototype.has = function (param) {\n        this.init();\n        return this.map.has(param);\n    };\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     */\n    HttpParams.prototype.get = function (param) {\n        this.init();\n        var res = this.map.get(param);\n        return !!res ? res[0] : null;\n    };\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     */\n    HttpParams.prototype.getAll = function (param) {\n        this.init();\n        return this.map.get(param) || null;\n    };\n    /**\n     * Get all the parameter names for this body.\n     */\n    HttpParams.prototype.keys = function () {\n        this.init();\n        return Array.from(this.map.keys());\n    };\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     */\n    HttpParams.prototype.append = function (param, value) { return this.clone({ param: param, value: value, op: 'a' }); };\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     */\n    HttpParams.prototype.set = function (param, value) { return this.clone({ param: param, value: value, op: 's' }); };\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     */\n    HttpParams.prototype.delete = function (param, value) { return this.clone({ param: param, value: value, op: 'd' }); };\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     */\n    HttpParams.prototype.toString = function () {\n        var _this = this;\n        this.init();\n        return this.keys()\n            .map(function (key) {\n            var eKey = _this.encoder.encodeKey(key);\n            return _this.map.get(key).map(function (value) { return eKey + '=' + _this.encoder.encodeValue(value); })\n                .join('&');\n        })\n            .join('&');\n    };\n    HttpParams.prototype.clone = function (update) {\n        var clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    };\n    HttpParams.prototype.init = function () {\n        var _this = this;\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(function (key) { return _this.map.set(key, _this.cloneFrom.map.get(key)); });\n            this.updates.forEach(function (update) {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        var base = (update.op === 'a' ? _this.map.get(update.param) : undefined) || [];\n                        base.push(update.value);\n                        _this.map.set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            var base_1 = _this.map.get(update.param) || [];\n                            var idx = base_1.indexOf(update.value);\n                            if (idx !== -1) {\n                                base_1.splice(idx, 1);\n                            }\n                            if (base_1.length > 0) {\n                                _this.map.set(update.param, base_1);\n                            }\n                            else {\n                                _this.map.delete(update.param);\n                            }\n                        }\n                        else {\n                            _this.map.delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = this.updates = null;\n        }\n    };\n    return HttpParams;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * @publicApi\n */\nvar HttpRequest = /** @class */ (function () {\n    function HttpRequest(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        var options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? third : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            var params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                var qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                var sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     */\n    HttpRequest.prototype.serializeBody = function () {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return this.body.toString();\n    };\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     */\n    HttpRequest.prototype.detectContentTypeHeader = function () {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    };\n    HttpRequest.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        var method = update.method || this.method;\n        var url = update.url || this.url;\n        var responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        var body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        var withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        var reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        var headers = update.headers || this.headers;\n        var params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce(function (headers, name) { return headers.set(name, update.setHeaders[name]); }, headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce(function (params, param) { return params.set(param, update.setParams[param]); }, params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params: params, headers: headers, reportProgress: reportProgress, responseType: responseType, withCredentials: withCredentials,\n        });\n    };\n    return HttpRequest;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type enumeration for the different kinds of `HttpEvent`.\n *\n * @publicApi\n */\nvar HttpEventType;\n(function (HttpEventType) {\n    /**\n     * The request was sent out over the wire.\n     */\n    HttpEventType[HttpEventType[\"Sent\"] = 0] = \"Sent\";\n    /**\n     * An upload progress event was received.\n     */\n    HttpEventType[HttpEventType[\"UploadProgress\"] = 1] = \"UploadProgress\";\n    /**\n     * The response status code and headers were received.\n     */\n    HttpEventType[HttpEventType[\"ResponseHeader\"] = 2] = \"ResponseHeader\";\n    /**\n     * A download progress event was received.\n     */\n    HttpEventType[HttpEventType[\"DownloadProgress\"] = 3] = \"DownloadProgress\";\n    /**\n     * The full response including the body was received.\n     */\n    HttpEventType[HttpEventType[\"Response\"] = 4] = \"Response\";\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    HttpEventType[HttpEventType[\"User\"] = 5] = \"User\";\n})(HttpEventType || (HttpEventType = {}));\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * @publicApi\n */\nvar HttpResponseBase = /** @class */ (function () {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     */\n    function HttpResponseBase(init, defaultStatus, defaultStatusText) {\n        if (defaultStatus === void 0) { defaultStatus = 200; }\n        if (defaultStatusText === void 0) { defaultStatusText = 'OK'; }\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n    return HttpResponseBase;\n}());\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * @publicApi\n */\nvar HttpHeaderResponse = /** @class */ (function (_super) {\n    __extends(HttpHeaderResponse, _super);\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     */\n    function HttpHeaderResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.ResponseHeader;\n        return _this;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     */\n    HttpHeaderResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpHeaderResponse;\n}(HttpResponseBase));\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * @publicApi\n */\nvar HttpResponse = /** @class */ (function (_super) {\n    __extends(HttpResponse, _super);\n    /**\n     * Construct a new `HttpResponse`.\n     */\n    function HttpResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.Response;\n        _this.body = init.body !== undefined ? init.body : null;\n        return _this;\n    }\n    HttpResponse.prototype.clone = function (update) {\n        if (update === void 0) { update = {}; }\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpResponse;\n}(HttpResponseBase));\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * @publicApi\n */\nvar HttpErrorResponse = /** @class */ (function (_super) {\n    __extends(HttpErrorResponse, _super);\n    function HttpErrorResponse(init) {\n        var _this = \n        // Initialize with a default status of 0 / Unknown Error.\n        _super.call(this, init, 0, 'Unknown Error') || this;\n        _this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        _this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (_this.status >= 200 && _this.status < 300) {\n            _this.message = \"Http failure during parsing for \" + (init.url || '(unknown url)');\n        }\n        else {\n            _this.message =\n                \"Http failure response for \" + (init.url || '(unknown url)') + \": \" + init.status + \" \" + init.statusText;\n        }\n        _this.error = init.error || null;\n        return _this;\n    }\n    return HttpErrorResponse;\n}(HttpResponseBase));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n */\nfunction addBody(options, body) {\n    return {\n        body: body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Performs HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n *\n * @see [HTTP Guide](guide/http)\n *\n *\n * @usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n* ```\n *\n * @publicApi\n */\nvar HttpClient = /** @class */ (function () {\n    function HttpClient(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     */\n    HttpClient.prototype.request = function (first, url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = first;\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            var headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            var params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams({ fromObject: options.params });\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, url, (options.body !== undefined ? options.body : null), {\n                headers: headers,\n                params: params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        var events$ = of(req).pipe(concatMap(function (req) { return _this.handler.handle(req); }));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        var res$ = events$.pipe(filter(function (event) { return event instanceof HttpResponse; }));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map(function (res) {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        }));\n                    case 'blob':\n                        return res$.pipe(map(function (res) {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        }));\n                    case 'text':\n                        return res$.pipe(map(function (res) {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        }));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map(function (res) { return res.body; }));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(\"Unreachable: unhandled observe type \" + options.observe + \"}\");\n        }\n    };\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param url     The endpoint URL.\n     * @param options The HTTP options to send with the request.\n     *\n     */\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('DELETE', url, options);\n    };\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('GET', url, options);\n    };\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     */\n    HttpClient.prototype.head = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('HEAD', url, options);\n    };\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @param url The resource URL.\n     * @param callbackParam The callback function name.\n     *\n     */\n    HttpClient.prototype.jsonp = function (url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    };\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilites of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     */\n    HttpClient.prototype.options = function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('OPTIONS', url, options);\n    };\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    HttpClient.prototype.patch = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PATCH', url, addBody(options, body));\n    };\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     */\n    HttpClient.prototype.post = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('POST', url, addBody(options, body));\n    };\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     */\n    HttpClient.prototype.put = function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PUT', url, addBody(options, body));\n    };\n    HttpClient = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [HttpHandler])\n    ], HttpClient);\n    return HttpClient;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nvar HttpInterceptorHandler = /** @class */ (function () {\n    function HttpInterceptorHandler(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    HttpInterceptorHandler.prototype.handle = function (req) {\n        return this.interceptor.intercept(req, this.next);\n    };\n    return HttpInterceptorHandler;\n}());\n/**\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n * @publicApi\n */\nvar HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nvar NoopInterceptor = /** @class */ (function () {\n    function NoopInterceptor() {\n    }\n    NoopInterceptor.prototype.intercept = function (req, next) {\n        return next.handle(req);\n    };\n    NoopInterceptor = __decorate([\n        Injectable()\n    ], NoopInterceptor);\n    return NoopInterceptor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nvar nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nvar JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n */\nvar JsonpCallbackContext = /** @class */ (function () {\n    function JsonpCallbackContext() {\n    }\n    return JsonpCallbackContext;\n}());\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n * @publicApi\n */\nvar JsonpClientBackend = /** @class */ (function () {\n    function JsonpClientBackend(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     */\n    JsonpClientBackend.prototype.nextCallback = function () { return \"ng_jsonp_callback_\" + nextRequestId++; };\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     */\n    JsonpClientBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable(function (observer) {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            var callback = _this.nextCallback();\n            var url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, \"=\" + callback + \"$1\");\n            // Construct the <script> tag and point it at the URL.\n            var node = _this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            var body = null;\n            // Whether the response callback has been called.\n            var finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            var cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            _this.callbackMap[callback] = function (data) {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete _this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            var cleanup = function () {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete _this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            var onLoad = function (event) {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url: url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body: body,\n                    status: 200,\n                    statusText: 'OK', url: url,\n                }));\n                // Complete the stream, the response is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            var onError = function (error) {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error: error,\n                    status: 0,\n                    statusText: 'JSONP Error', url: url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            _this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return function () {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    };\n    JsonpClientBackend = __decorate([\n        Injectable(),\n        __param(1, Inject(DOCUMENT)),\n        __metadata(\"design:paramtypes\", [JsonpCallbackContext, Object])\n    ], JsonpClientBackend);\n    return JsonpClientBackend;\n}());\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @publicApi\n */\nvar JsonpInterceptor = /** @class */ (function () {\n    function JsonpInterceptor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    JsonpInterceptor.prototype.intercept = function (req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(req);\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    };\n    JsonpInterceptor = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [JsonpClientBackend])\n    ], JsonpInterceptor);\n    return JsonpInterceptor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * @publicApi\n */\nvar XhrFactory = /** @class */ (function () {\n    function XhrFactory() {\n    }\n    return XhrFactory;\n}());\n/**\n * A factory for @{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n *\n */\nvar BrowserXhr = /** @class */ (function () {\n    function BrowserXhr() {\n    }\n    BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n    BrowserXhr = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BrowserXhr);\n    return BrowserXhr;\n}());\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n * @publicApi\n */\nvar HttpXhrBackend = /** @class */ (function () {\n    function HttpXhrBackend(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Process a request and return a stream of response events.\n     */\n    HttpXhrBackend.prototype.handle = function (req) {\n        var _this = this;\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(\"Attempted to construct Jsonp request without JsonpClientModule installed.\");\n        }\n        // Everything happens on Observable subscription.\n        return new Observable(function (observer) {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            var xhr = _this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach(function (name, values) { return xhr.setRequestHeader(name, values.join(',')); });\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                var detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                var responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = ((responseType !== 'json') ? responseType : 'text');\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            var reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            var headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            var partialFromXhr = function () {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                var status = xhr.status === 1223 ? 204 : xhr.status;\n                var statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                var headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                var url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers: headers, status: status, statusText: statusText, url: url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            var onLoad = function () {\n                // Read response state from the memoized partial data.\n                var _a = partialFromXhr(), headers = _a.headers, status = _a.status, statusText = _a.statusText, url = _a.url;\n                // The body will be read out if present.\n                var body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                var ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    var originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = { error: error, text: body };\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            var onError = function (error) {\n                var url = partialFromXhr().url;\n                var res = new HttpErrorResponse({\n                    error: error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                    url: url || undefined,\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            var sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            var onDownProgress = function (event) {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                var progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            var onUpProgress = function (event) {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                var progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return function () {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    };\n    HttpXhrBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [XhrFactory])\n    ], HttpXhrBackend);\n    return HttpXhrBackend;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\nvar XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * @publicApi\n */\nvar HttpXsrfTokenExtractor = /** @class */ (function () {\n    function HttpXsrfTokenExtractor() {\n    }\n    return HttpXsrfTokenExtractor;\n}());\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nvar HttpXsrfCookieExtractor = /** @class */ (function () {\n    function HttpXsrfCookieExtractor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * @internal for testing\n         */\n        this.parseCount = 0;\n    }\n    HttpXsrfCookieExtractor.prototype.getToken = function () {\n        if (this.platform === 'server') {\n            return null;\n        }\n        var cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ÉµparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    };\n    HttpXsrfCookieExtractor = __decorate([\n        Injectable(),\n        __param(0, Inject(DOCUMENT)), __param(1, Inject(PLATFORM_ID)),\n        __param(2, Inject(XSRF_COOKIE_NAME)),\n        __metadata(\"design:paramtypes\", [Object, String, String])\n    ], HttpXsrfCookieExtractor);\n    return HttpXsrfCookieExtractor;\n}());\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nvar HttpXsrfInterceptor = /** @class */ (function () {\n    function HttpXsrfInterceptor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    HttpXsrfInterceptor.prototype.intercept = function (req, next) {\n        var lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        var token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    };\n    HttpXsrfInterceptor = __decorate([\n        Injectable(),\n        __param(1, Inject(XSRF_HEADER_NAME)),\n        __metadata(\"design:paramtypes\", [HttpXsrfTokenExtractor, String])\n    ], HttpXsrfInterceptor);\n    return HttpXsrfInterceptor;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nvar HttpInterceptingHandler = /** @class */ (function () {\n    function HttpInterceptingHandler(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    HttpInterceptingHandler.prototype.handle = function (req) {\n        if (this.chain === null) {\n            var interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight(function (next, interceptor) { return new HttpInterceptorHandler(next, interceptor); }, this.backend);\n        }\n        return this.chain.handle(req);\n    };\n    HttpInterceptingHandler = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [HttpBackend, Injector])\n    ], HttpInterceptingHandler);\n    return HttpInterceptingHandler;\n}());\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * @publicApi\n */\nvar HttpClientXsrfModule = /** @class */ (function () {\n    function HttpClientXsrfModule() {\n    }\n    HttpClientXsrfModule_1 = HttpClientXsrfModule;\n    /**\n     * Disable the default XSRF protection.\n     */\n    HttpClientXsrfModule.disable = function () {\n        return {\n            ngModule: HttpClientXsrfModule_1,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    };\n    /**\n     * Configure XSRF protection.\n     * @param options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     */\n    HttpClientXsrfModule.withOptions = function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: HttpClientXsrfModule_1,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    };\n    var HttpClientXsrfModule_1;\n    HttpClientXsrfModule = HttpClientXsrfModule_1 = __decorate([\n        NgModule({\n            providers: [\n                HttpXsrfInterceptor,\n                { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n            ],\n        })\n    ], HttpClientXsrfModule);\n    return HttpClientXsrfModule;\n}());\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nvar HttpClientModule = /** @class */ (function () {\n    function HttpClientModule() {\n    }\n    HttpClientModule = __decorate([\n        NgModule({\n            /**\n             * Optional configuration for XSRF protection.\n             */\n            imports: [\n                HttpClientXsrfModule.withOptions({\n                    cookieName: 'XSRF-TOKEN',\n                    headerName: 'X-XSRF-TOKEN',\n                }),\n            ],\n            /**\n             * Configures the [dependency injector](guide/glossary#injector) where it is imported\n             * with supporting services for HTTP communications.\n             */\n            providers: [\n                HttpClient,\n                { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                HttpXhrBackend,\n                { provide: HttpBackend, useExisting: HttpXhrBackend },\n                BrowserXhr,\n                { provide: XhrFactory, useExisting: BrowserXhr },\n            ],\n        })\n    ], HttpClientModule);\n    return HttpClientModule;\n}());\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nvar HttpClientJsonpModule = /** @class */ (function () {\n    function HttpClientJsonpModule() {\n    }\n    HttpClientJsonpModule = __decorate([\n        NgModule({\n            providers: [\n                JsonpClientBackend,\n                { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n            ],\n        })\n    ], HttpClientJsonpModule);\n    return HttpClientJsonpModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NoopInterceptor as Éµangular_packages_common_http_http_a, JsonpCallbackContext as Éµangular_packages_common_http_http_b, jsonpCallbackContext as Éµangular_packages_common_http_http_c, BrowserXhr as Éµangular_packages_common_http_http_d, HttpXsrfCookieExtractor as Éµangular_packages_common_http_http_g, HttpXsrfInterceptor as Éµangular_packages_common_http_http_h, XSRF_COOKIE_NAME as Éµangular_packages_common_http_http_e, XSRF_HEADER_NAME as Éµangular_packages_common_http_http_f, HttpBackend, HttpHandler, HttpClient, HttpHeaders, HTTP_INTERCEPTORS, JsonpClientBackend, JsonpInterceptor, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpInterceptingHandler as ÉµHttpInterceptingHandler, HttpParams, HttpUrlEncodingCodec, HttpRequest, HttpErrorResponse, HttpEventType, HttpHeaderResponse, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory, HttpXsrfTokenExtractor };\n//# sourceMappingURL=http.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./app.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./app.component\";\nimport * as i4 from \"@angular/common/http\";\nvar styles_AppComponent = [i0.styles];\nvar RenderType_AppComponent = i1.Éµcrt({ encapsulation: 0, styles: styles_AppComponent, data: {} });\nexport { RenderType_AppComponent as RenderType_AppComponent };\nexport function View_AppComponent_0(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 10, \"div\", [[\"style\", \"text-align:center\"]], null, null, null, null, null)), (_l()(), i1.Éµeld(1, 0, null, null, 1, \"h1\", [], null, null, null, null, null)), (_l()(), i1.Éµted(2, null, [\"Welcome to \", \"!\"])), (_l()(), i1.Éµeld(3, 0, null, null, 1, \"button\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.executeRequest() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.Éµted(-1, null, [\"execute request\"])), (_l()(), i1.Éµeld(5, 0, null, null, 1, \"button\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.badFunction() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.Éµted(-1, null, [\"bad\"])), (_l()(), i1.Éµeld(7, 0, null, null, 1, \"button\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.anotherBadFunction() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.Éµted(-1, null, [\"another bad\"])), (_l()(), i1.Éµeld(9, 0, null, null, 1, \"button\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.customMessage() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.Éµted(-1, null, [\"custom message\"])), (_l()(), i1.Éµeld(11, 16777216, null, null, 1, \"router-outlet\", [], null, null, null, null, null)), i1.Éµdid(12, 212992, null, 0, i2.RouterOutlet, [i2.ChildrenOutletContexts, i1.ViewContainerRef, i1.ComponentFactoryResolver, [8, null], i1.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 12, 0); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.title; _ck(_v, 2, 0, currVal_0); }); }\nexport function View_AppComponent_Host_0(_l) { return i1.Éµvid(0, [(_l()(), i1.Éµeld(0, 0, null, null, 1, \"app-root\", [], null, null, null, View_AppComponent_0, RenderType_AppComponent)), i1.Éµdid(1, 49152, null, 0, i3.AppComponent, [i4.HttpClient], null, null)], null, null); }\nvar AppComponentNgFactory = i1.Éµccf(\"app-root\", i3.AppComponent, View_AppComponent_Host_0, {}, {}, []);\nexport { AppComponentNgFactory as AppComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div style=\"text-align:center\">\n  <h1>Welcome to {{ title }}!</h1>\n  <button (click)=\"executeRequest()\">execute request</button>\n  <button (click)=\"badFunction()\">bad</button>\n  <button (click)=\"anotherBadFunction()\">another bad</button>\n  <button (click)=\"customMessage()\">custom message</button>\n</div>\n\n<router-outlet></router-outlet>\n","var originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        originalFunctionToString = Function.prototype.toString;\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry__ ? this.__sentry_original__ : this;\n            // tslint:disable-next-line:no-unsafe-any\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map","import { isRegExp } from './is';\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function truncate(str, max) {\n    if (max === void 0) { max = 0; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof str !== 'string' || max === 0) {\n        return str;\n    }\n    return str.length <= max ? str : str.substr(0, max) + \"...\";\n}\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line, colno) {\n    var newLine = line;\n    var ll = newLine.length;\n    if (ll <= 150) {\n        return newLine;\n    }\n    if (colno > ll) {\n        colno = ll; // tslint:disable-line:no-parameter-reassignment\n    }\n    var start = Math.max(colno - 60, 0);\n    if (start < 5) {\n        start = 0;\n    }\n    var end = Math.min(start + 140, ll);\n    if (end > ll - 5) {\n        end = ll;\n    }\n    if (end === ll) {\n        start = Math.max(end - 140, 0);\n    }\n    newLine = newLine.slice(start, end);\n    if (start > 0) {\n        newLine = \"'{snip} \" + newLine;\n    }\n    if (end < ll) {\n        newLine += ' {snip}';\n    }\n    return newLine;\n}\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input, delimiter) {\n    if (!Array.isArray(input)) {\n        return '';\n    }\n    var output = [];\n    // tslint:disable-next-line:prefer-for-of\n    for (var i = 0; i < input.length; i++) {\n        var value = input[i];\n        try {\n            output.push(String(value));\n        }\n        catch (e) {\n            output.push('[value cannot be serialized]');\n        }\n    }\n    return output.join(delimiter);\n}\n/** Merges provided array of keys into */\nexport function keysToEventMessage(keys, maxLength) {\n    if (maxLength === void 0) { maxLength = 40; }\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return truncate(serialized, maxLength);\n    }\n    return '';\n}\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value, pattern) {\n    if (isRegExp(pattern)) {\n        return pattern.test(value);\n    }\n    if (typeof pattern === 'string') {\n        return value.includes(pattern);\n    }\n    return false;\n}\n//# sourceMappingURL=string.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(_options) {\n        if (_options === void 0) { _options = {}; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            var hub = getCurrentHub();\n            if (!hub) {\n                return event;\n            }\n            var self = hub.getIntegration(InboundFilters);\n            if (self) {\n                var client = hub.getClient();\n                var clientOptions = client ? client.getOptions() : {};\n                var options = self._mergeOptions(clientOptions);\n                if (self._shouldDropEvent(event, options)) {\n                    return null;\n                }\n            }\n            return event;\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._shouldDropEvent = function (event, options) {\n        if (this._isSentryError(event, options)) {\n            logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isIgnoredError(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isBlacklistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `blacklistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        if (!this._isWhitelistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to not being matched by `whitelistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isSentryError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            // tslint:disable-next-line:no-unsafe-any\n            return event.exception.values[0].type === 'SentryError';\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isIgnoredError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this._getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isBlacklistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.blacklistUrls || !options.blacklistUrls.length) {\n            return false;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? false : options.blacklistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isWhitelistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.whitelistUrls || !options.whitelistUrls.length) {\n            return true;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? true : options.whitelistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            blacklistUrls: tslib_1.__spread((this._options.blacklistUrls || []), (clientOptions.blacklistUrls || [])),\n            ignoreErrors: tslib_1.__spread((this._options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n            whitelistUrls: tslib_1.__spread((this._options.whitelistUrls || []), (clientOptions.whitelistUrls || [])),\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        if (event.exception) {\n            try {\n                // tslint:disable-next-line:no-unsafe-any\n                var _a = event.exception.values[0], type = _a.type, value = _a.value;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n                return [];\n            }\n        }\n        return [];\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                // tslint:disable:no-unsafe-any\n                var frames_1 = event.stacktrace.frames;\n                return frames_1[frames_1.length - 1].filename;\n            }\n            if (event.exception) {\n                // tslint:disable:no-unsafe-any\n                var frames_2 = event.exception.values[0].stacktrace.frames;\n                return frames_2[frames_2.length - 1].filename;\n            }\n            return null;\n        }\n        catch (oO) {\n            logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexport { InboundFilters };\n//# sourceMappingURL=inboundfilters.js.map","/** The status of an event. */\nexport var Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status || (Status = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status || (Status = {}));\n//# sourceMappingURL=status.js.map","import * as tslib_1 from \"tslib\";\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /** @class */ (function (_super) {\n    tslib_1.__extends(SentryError, _super);\n    function SentryError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        // tslint:disable:no-unsafe-any\n        _this.name = _newTarget.prototype.constructor.name;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return SentryError;\n}(Error));\nexport { SentryError };\n//# sourceMappingURL=error.js.map","import * as tslib_1 from \"tslib\";\nimport { SentryError } from '@sentry/utils';\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n/** Error message */\nvar ERROR_MESSAGE = 'Invalid Dsn';\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this._fromString(from);\n        }\n        else {\n            this._fromComponents(from);\n        }\n        this._validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private _representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        // tslint:disable-next-line:no-this-assignment\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, user = _a.user;\n        return (protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype._fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        var _a = tslib_1.__read(match.slice(1), 6), protocol = _a[0], user = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        Object.assign(this, { host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype._fromComponents = function (components) {\n        this.protocol = components.protocol;\n        this.user = components.user;\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype._validate = function () {\n        var _this = this;\n        ['protocol', 'user', 'host', 'projectId'].forEach(function (component) {\n            if (!_this[component]) {\n                throw new SentryError(ERROR_MESSAGE);\n            }\n        });\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        if (this.port && Number.isNaN(parseInt(this.port, 10))) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n    };\n    return Dsn;\n}());\nexport { Dsn };\n//# sourceMappingURL=dsn.js.map","import { urlEncode } from '@sentry/utils';\nimport { Dsn } from './dsn';\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this._dsnObject = new Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Returns a string with auth headers in the url to the store endpoint. */\n    API.prototype.getStoreEndpoint = function () {\n        return \"\" + this._getBaseUrl() + this.getStoreEndpointPath();\n    };\n    /** Returns the store endpoint with auth added in url encoded. */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        var dsn = this._dsnObject;\n        var auth = {\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n        // to avoid preflight CORS requests\n        return this.getStoreEndpoint() + \"?\" + urlEncode(auth);\n    };\n    /** Returns the base path of the url including the port. */\n    API.prototype._getBaseUrl = function () {\n        var dsn = this._dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port;\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this._dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /** Returns an object that can be used in request headers. */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this._dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_timestamp=\" + new Date().getTime());\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this._dsnObject;\n        var endpoint = \"\" + this._getBaseUrl() + (dsn.path ? \"/\" + dsn.path : '') + \"/api/embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    return API;\n}());\nexport { API };\n//# sourceMappingURL=api.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nexport var installedIntegrations = [];\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames_1 = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames_1 = [];\n        // Leave only unique default integrations, that were not overridden with provided user integrations\n        defaultIntegrations.forEach(function (defaultIntegration) {\n            if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 &&\n                pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n                integrations.push(defaultIntegration);\n                pickedIntegrationsNames_1.push(defaultIntegration.name);\n            }\n        });\n        // Don't add same user integration twice\n        userIntegrations.forEach(function (userIntegration) {\n            if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n                integrations.push(userIntegration);\n                pickedIntegrationsNames_1.push(userIntegration.name);\n            }\n        });\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        return tslib_1.__spread(defaultIntegrations);\n    }\n    return integrations;\n}\n/** Setup given integration */\nexport function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    return integrations;\n}\n//# sourceMappingURL=integration.js.map","import * as tslib_1 from \"tslib\";\nimport { isPrimitive, isThenable, logger, SyncPromise, truncate, uuid4 } from '@sentry/utils';\nimport { Dsn } from './dsn';\nimport { setupIntegrations } from './integration';\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** Is the client still processing a call? */\n        this._processing = false;\n        this._backend = new backendClass(options);\n        this._options = options;\n        if (options.dsn) {\n            this._dsn = new Dsn(options.dsn);\n        }\n        this._integrations = setupIntegrations(this._options);\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._getBackend()\n            .eventFromException(exception, hint)\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .catch(function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        var promisedEvent = isPrimitive(message)\n            ? this._getBackend().eventFromMessage(\"\" + message, level, hint)\n            : this._getBackend().eventFromException(message, hint);\n        promisedEvent\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .catch(function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._processEvent(event, hint, scope)\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .catch(function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n        var _this = this;\n        return this._isClientProcessing(timeout).then(function (clientReady) {\n            if (_this._processingInterval) {\n                clearInterval(_this._processingInterval);\n            }\n            return _this._getBackend()\n                .getTransport()\n                .close(timeout)\n                .then(function (transportFlushed) { return clientReady && transportFlushed; });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        var _this = this;\n        return this.flush(timeout).then(function (result) {\n            _this.getOptions().enabled = false;\n            return result;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegrations = function () {\n        return this._integrations || {};\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this._integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    /** Waits for the client to be done with processing. */\n    BaseClient.prototype._isClientProcessing = function (timeout) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var ticked = 0;\n            var tick = 1;\n            if (_this._processingInterval) {\n                clearInterval(_this._processingInterval);\n            }\n            _this._processingInterval = setInterval(function () {\n                if (!_this._processing) {\n                    resolve(true);\n                }\n                else {\n                    ticked += tick;\n                    if (timeout && ticked >= timeout) {\n                        resolve(false);\n                    }\n                }\n            }, tick);\n        });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n        return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n        return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n        var _a = this.getOptions(), environment = _a.environment, release = _a.release, dist = _a.dist, _b = _a.maxValueLength, maxValueLength = _b === void 0 ? 250 : _b;\n        var prepared = tslib_1.__assign({}, event);\n        if (prepared.environment === undefined && environment !== undefined) {\n            prepared.environment = environment;\n        }\n        if (prepared.release === undefined && release !== undefined) {\n            prepared.release = release;\n        }\n        if (prepared.dist === undefined && dist !== undefined) {\n            prepared.dist = dist;\n        }\n        if (prepared.message) {\n            prepared.message = truncate(prepared.message, maxValueLength);\n        }\n        var exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n        if (exception && exception.value) {\n            exception.value = truncate(exception.value, maxValueLength);\n        }\n        var request = prepared.request;\n        if (request && request.url) {\n            request.url = truncate(request.url, maxValueLength);\n        }\n        if (prepared.event_id === undefined) {\n            prepared.event_id = uuid4();\n        }\n        this._addIntegrations(prepared.sdk);\n        // We prepare the result here with a resolved Event.\n        var result = SyncPromise.resolve(prepared);\n        // This should be the last thing called, since we want that\n        // {@link Hub.addEventProcessor} gets the finished prepared event.\n        if (scope) {\n            // In case we have a hub we reassign it.\n            result = scope.applyToEvent(prepared, hint);\n        }\n        return result;\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n     */\n    BaseClient.prototype._addIntegrations = function (sdkInfo) {\n        var integrationsArray = Object.keys(this._integrations);\n        if (sdkInfo && integrationsArray.length > 0) {\n            sdkInfo.integrations = integrationsArray;\n        }\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n        var _this = this;\n        var _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n        if (!this._isEnabled()) {\n            return SyncPromise.reject('SDK not enabled, will not send event.');\n        }\n        // 1.0 === 100% events are sent\n        // 0.0 === 0% events are sent\n        if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n            return SyncPromise.reject('This event has been sampled, will not send event.');\n        }\n        return new SyncPromise(function (resolve, reject) {\n            _this._prepareEvent(event, scope, hint).then(function (prepared) {\n                if (prepared === null) {\n                    reject('An event processor returned null, will not send event.');\n                    return;\n                }\n                var finalEvent = prepared;\n                try {\n                    var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n                    if (isInternalException || !beforeSend) {\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                        return;\n                    }\n                    var beforeSendResult = beforeSend(prepared, hint);\n                    if (typeof beforeSendResult === 'undefined') {\n                        logger.error('`beforeSend` method has to return `null` or a valid event.');\n                    }\n                    else if (isThenable(beforeSendResult)) {\n                        _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);\n                    }\n                    else {\n                        finalEvent = beforeSendResult;\n                        if (finalEvent === null) {\n                            logger.log('`beforeSend` returned `null`, will not send event.');\n                            resolve(null);\n                            return;\n                        }\n                        // From here on we are really async\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                    }\n                }\n                catch (exception) {\n                    _this.captureException(exception, {\n                        data: {\n                            __sentry__: true,\n                        },\n                        originalException: exception,\n                    });\n                    reject('`beforeSend` throw an error, will not send event.');\n                }\n            });\n        });\n    };\n    /**\n     * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n     */\n    BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {\n        var _this = this;\n        beforeSend\n            .then(function (processedEvent) {\n            if (processedEvent === null) {\n                reject('`beforeSend` returned `null`, will not send event.');\n                return;\n            }\n            // From here on we are really async\n            _this._getBackend().sendEvent(processedEvent);\n            resolve(processedEvent);\n        })\n            .catch(function (e) {\n            reject(\"beforeSend rejected with \" + e);\n        });\n    };\n    return BaseClient;\n}());\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map","import { Status } from '@sentry/types';\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return Promise.resolve({\n            reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n            status: Status.Skipped,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return Promise.resolve(true);\n    };\n    return NoopTransport;\n}());\nexport { NoopTransport };\n//# sourceMappingURL=noop.js.map","import { logger, SentryError } from '@sentry/utils';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n        this._options = options;\n        if (!this._options.dsn) {\n            logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this._transport = this._setupTransport();\n    }\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n        return new NoopTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        this._transport.sendEvent(event).catch(function (reason) {\n            logger.error(\"Error while sending event: \" + reason);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this._transport;\n    };\n    return BaseBackend;\n}());\nexport { BaseBackend };\n//# sourceMappingURL=basebackend.js.map","import { getGlobalObject } from './misc';\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent() {\n    try {\n        // tslint:disable:no-unused-expression\n        new ErrorEvent('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError() {\n    try {\n        // It really needs 1 argument, not 0.\n        // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n        // 1 argument required, but only 0 present.\n        // @ts-ignore\n        // tslint:disable:no-unused-expression\n        new DOMError('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException() {\n    try {\n        // tslint:disable:no-unused-expression\n        new DOMException('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch() {\n    if (!('fetch' in getGlobalObject())) {\n        return false;\n    }\n    try {\n        // tslint:disable-next-line:no-unused-expression\n        new Headers();\n        // tslint:disable-next-line:no-unused-expression\n        new Request('');\n        // tslint:disable-next-line:no-unused-expression\n        new Response();\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsNativeFetch() {\n    if (!supportsFetch()) {\n        return false;\n    }\n    var global = getGlobalObject();\n    return global.fetch.toString().indexOf('native') !== -1;\n}\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver() {\n    // tslint:disable-next-line: no-unsafe-any\n    return 'ReportingObserver' in getGlobalObject();\n}\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy() {\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    if (!supportsFetch()) {\n        return false;\n    }\n    try {\n        // tslint:disable:no-unused-expression\n        new Request('_', {\n            referrerPolicy: 'origin',\n        });\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory() {\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var global = getGlobalObject();\n    var chrome = global.chrome;\n    // tslint:disable-next-line:no-unsafe-any\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n    return !isChromePackagedApp && hasHistoryApi;\n}\n//# sourceMappingURL=supports.js.map","// tslint:disable\nimport * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isError, isErrorEvent, normalize } from '@sentry/utils';\n/**\n * TraceKit - Cross brower stack traces\n *\n * This was originally forked from github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n *\n * NOTE: Last merge with upstream repository\n * Jul 11,2018 - #f03357c\n *\n * https://github.com/csnover/TraceKit\n * @license MIT\n * @namespace TraceKit\n */\nvar window = getGlobalObject();\nvar TraceKit = {\n    _report: false,\n    _collectWindowErrors: false,\n    _computeStackTrace: false,\n    _linesOfContext: false,\n};\n// var TraceKit: TraceKitInterface = {};\n// var TraceKit = {};\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\n/**\n * A better form of hasOwnProperty<br/>\n * Example: `_has(MainHostObject, property) === true/false`\n *\n * @param {Object} object to check property\n * @param {string} key to check\n * @return {Boolean} true if the object has the key and it is not inherited\n */\nfunction _has(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}\n/**\n * A safe form of location.href<br/>\n *\n * @return {string} location.href\n */\nfunction getLocationHref() {\n    if (typeof document === 'undefined' || document.location == null)\n        return '';\n    return document.location.href;\n}\n/**\n * Cross-browser processing of unhandled exceptions\n *\n * Syntax:\n * ```js\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n * ```\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *     on top frame; column number is not guaranteed\n *   - Opera: full stack trace with line and column numbers\n *   - Chrome: full stack trace with line and column numbers\n *   - Safari: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *   - IE: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit._computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a TraceKit.StackTrace object as described in the\n * TraceKit._computeStackTrace docs.\n *\n * @memberof TraceKit\n * @namespace\n */\nTraceKit._report = (function reportModuleWrapper() {\n    var handlers = [], lastException = null, lastExceptionStack = null;\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     * @memberof TraceKit.report\n     */\n    function _subscribe(handler) {\n        // NOTE: We call both handlers manually in browser/integrations/globalhandler.ts\n        // So user can choose which one he wants to attach\n        // installGlobalHandler();\n        // installGlobalUnhandledRejectionHandler();\n        handlers.push(handler);\n    }\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {TraceKit.StackTrace} stack\n     * @param {boolean} isWindowError Is this a top-level window error?\n     * @param {Error=} error The error that's being handled (if available, null otherwise)\n     * @memberof TraceKit.report\n     * @throws An exception if an error occurs while calling an handler.\n     */\n    function _notifyHandlers(stack, isWindowError, error) {\n        var exception = null;\n        if (isWindowError && !TraceKit._collectWindowErrors) {\n            return;\n        }\n        for (var i in handlers) {\n            if (_has(handlers, i)) {\n                try {\n                    handlers[i](stack, isWindowError, error);\n                }\n                catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n        if (exception) {\n            throw exception;\n        }\n    }\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error occurred.\n     * @param {(number|string)=} columnNo The column number at which the error occurred.\n     * @param {Error=} errorObj The actual Error object.\n     * @memberof TraceKit.report\n     */\n    function _traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\n        var stack = null;\n        // If 'errorObj' is ErrorEvent, get real Error from inside\n        errorObj = isErrorEvent(errorObj) ? errorObj.error : errorObj;\n        // If 'message' is ErrorEvent, get real message from inside\n        message = isErrorEvent(message) ? message.message : message;\n        if (lastExceptionStack) {\n            TraceKit._computeStackTrace._augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n            processLastException();\n        }\n        else if (errorObj && isError(errorObj)) {\n            stack = TraceKit._computeStackTrace(errorObj);\n            stack.mechanism = 'onerror';\n            _notifyHandlers(stack, true, errorObj);\n        }\n        else {\n            var location = {\n                url: url,\n                line: lineNo,\n                column: columnNo,\n            };\n            var name;\n            var msg = message; // must be new var or will modify original `arguments`\n            if ({}.toString.call(message) === '[object String]') {\n                var groups = message.match(ERROR_TYPES_RE);\n                if (groups) {\n                    name = groups[1];\n                    msg = groups[2];\n                }\n            }\n            location.func = UNKNOWN_FUNCTION;\n            location.context = null;\n            stack = {\n                name: name,\n                message: msg,\n                mode: 'onerror',\n                mechanism: 'onerror',\n                stack: [\n                    tslib_1.__assign({}, location, { \n                        // Firefox sometimes doesn't return url correctly and this is an old behavior\n                        // that I prefer to port here as well.\n                        // It can be altered only here, as previously it's using `location.url` for other things â Kamil\n                        url: location.url || getLocationHref() }),\n                ],\n            };\n            _notifyHandlers(stack, true, null);\n        }\n        if (_oldOnerrorHandler) {\n            // @ts-ignore\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n        return false;\n    }\n    /**\n     * Ensures all unhandled rejections are recorded.\n     * @param {PromiseRejectionEvent} e event.\n     * @memberof TraceKit.report\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onunhandledrejection\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n     */\n    function _traceKitWindowOnUnhandledRejection(e) {\n        var err = (e && (e.detail ? e.detail.reason : e.reason)) || e;\n        var stack = TraceKit._computeStackTrace(err);\n        stack.mechanism = 'onunhandledrejection';\n        if (!stack.message) {\n            stack.message = JSON.stringify(normalize(err));\n        }\n        _notifyHandlers(stack, true, err);\n    }\n    /**\n     * Install a global onerror handler\n     * @memberof TraceKit.report\n     */\n    function _installGlobalHandler() {\n        if (_onErrorHandlerInstalled === true) {\n            return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = _traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n    /**\n     * Install a global onunhandledrejection handler\n     * @memberof TraceKit.report\n     */\n    function _installGlobalUnhandledRejectionHandler() {\n        window.onunhandledrejection = _traceKitWindowOnUnhandledRejection;\n    }\n    /**\n     * Process the most recent exception\n     * @memberof TraceKit.report\n     */\n    function processLastException() {\n        var _lastExceptionStack = lastExceptionStack, _lastException = lastException;\n        lastExceptionStack = null;\n        lastException = null;\n        _notifyHandlers(_lastExceptionStack, false, _lastException);\n    }\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     * @memberof TraceKit.report\n     * @throws An exception if an incomplete stack trace is detected (old IE browsers).\n     */\n    function _report(ex) {\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            }\n            else {\n                processLastException();\n            }\n        }\n        var stack = TraceKit._computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        setTimeout(function () {\n            if (lastException === ex) {\n                processLastException();\n            }\n        }, stack.incomplete ? 2000 : 0);\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n    _report._subscribe = _subscribe;\n    _report._installGlobalHandler = _installGlobalHandler;\n    _report._installGlobalUnhandledRejectionHandler = _installGlobalUnhandledRejectionHandler;\n    return _report;\n})();\n/**\n * An object representing a single stack frame.\n * @typedef {Object} StackFrame\n * @property {string} url The JavaScript or HTML file URL.\n * @property {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * @property {string[]?} args The arguments passed to the function, if known.\n * @property {number=} line The line number, if known.\n * @property {number=} column The column number, if known.\n * @property {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n * @memberof TraceKit\n */\n/**\n * An object representing a JavaScript stack trace.\n * @typedef {Object} StackTrace\n * @property {string} name The name of the thrown exception.\n * @property {string} message The exception error message.\n * @property {TraceKit.StackFrame[]} stack An array of stack frames.\n * @property {string} mode 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace.\n * @memberof TraceKit\n */\n/**\n * TraceKit._computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   ```js\n *   s = TraceKit._computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n *   ```\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit._computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit._computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * @memberof TraceKit\n * @namespace\n */\nTraceKit._computeStackTrace = (function _computeStackTraceWrapper() {\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.columnNumber = 69\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack trace information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceFromStackProp(ex) {\n        if (!ex || !ex.stack) {\n            return null;\n        }\n        // Chromium based browsers: Chrome, Brave, new Opera, new Edge\n        var chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i, \n        // gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n        // generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n        // We need this specific case for now because we want no other regex to match.\n        gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i, winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i, \n        // Used to additionally parse URL/line/column from eval frames\n        isEval, geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i, chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/, lines = ex.stack.split('\\n'), stack = [], submatch, parts, element, reference = /^(.*) is undefined$/.exec(ex.message);\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = chrome.exec(lines[i]))) {\n                var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n                isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n                if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n                    // throw out eval line/column and use top-most line/column number\n                    parts[2] = submatch[1]; // url\n                    parts[3] = submatch[2]; // line\n                    parts[4] = submatch[3]; // column\n                }\n                element = {\n                    url: parts[2],\n                    func: parts[1] || UNKNOWN_FUNCTION,\n                    args: isNative ? [parts[2]] : [],\n                    line: parts[3] ? +parts[3] : null,\n                    column: parts[4] ? +parts[4] : null,\n                };\n            }\n            else if ((parts = winjs.exec(lines[i]))) {\n                element = {\n                    url: parts[2],\n                    func: parts[1] || UNKNOWN_FUNCTION,\n                    args: [],\n                    line: +parts[3],\n                    column: parts[4] ? +parts[4] : null,\n                };\n            }\n            else if ((parts = gecko.exec(lines[i]))) {\n                isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n                if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n                    // throw out eval line/column and use top-most line number\n                    parts[1] = parts[1] || \"eval\";\n                    parts[3] = submatch[1];\n                    parts[4] = submatch[2];\n                    parts[5] = ''; // no column when eval\n                }\n                else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n                    // FireFox uses this awesome columnNumber property for its top frame\n                    // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n                    // so adding 1\n                    // NOTE: this hack doesn't work if top-most frame is eval\n                    stack[0].column = ex.columnNumber + 1;\n                }\n                element = {\n                    url: parts[3],\n                    func: parts[1] || UNKNOWN_FUNCTION,\n                    args: parts[2] ? parts[2].split(',') : [],\n                    line: parts[4] ? +parts[4] : null,\n                    column: parts[5] ? +parts[5] : null,\n                };\n            }\n            else {\n                continue;\n            }\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n            element.context = null;\n            stack.push(element);\n        }\n        if (!stack.length) {\n            return null;\n        }\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\n            stack[0].column = null;\n        }\n        return {\n            mode: 'stack',\n            name: ex.name,\n            message: ex.message,\n            stack: stack,\n        };\n    }\n    /**\n     * Computes stack trace information from the stacktrace property.\n     * Opera 10+ uses this property.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack trace information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceFromStacktraceProp(ex) {\n        // Access and store the stacktrace property before doing ANYTHING\n        // else to it because Opera is not very good at providing it\n        // reliably in other circumstances.\n        var stacktrace = ex.stacktrace;\n        if (!stacktrace) {\n            return;\n        }\n        var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i, opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i, lines = stacktrace.split('\\n'), stack = [], parts;\n        for (var line = 0; line < lines.length; line += 2) {\n            var element = null;\n            if ((parts = opera10Regex.exec(lines[line]))) {\n                element = {\n                    url: parts[2],\n                    line: +parts[1],\n                    column: null,\n                    func: parts[3],\n                    args: [],\n                };\n            }\n            else if ((parts = opera11Regex.exec(lines[line]))) {\n                element = {\n                    url: parts[6],\n                    line: +parts[1],\n                    column: +parts[2],\n                    func: parts[3] || parts[4],\n                    args: parts[5] ? parts[5].split(',') : [],\n                };\n            }\n            if (element) {\n                if (!element.func && element.line) {\n                    element.func = UNKNOWN_FUNCTION;\n                }\n                if (element.line) {\n                    element.context = null;\n                }\n                if (!element.context) {\n                    element.context = [lines[line + 1]];\n                }\n                stack.push(element);\n            }\n        }\n        if (!stack.length) {\n            return null;\n        }\n        return {\n            mode: 'stacktrace',\n            name: ex.name,\n            message: ex.message,\n            stack: stack,\n        };\n    }\n    /**\n     * NOT TESTED.\n     * Computes stack trace information from an error message that includes\n     * the stack trace.\n     * Opera 9 and earlier use this method if the option to show stack\n     * traces is turned on in opera:config.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceFromOperaMultiLineMessage(ex) {\n        // TODO: Clean this function up\n        // Opera includes a stack trace into the exception message. An example is:\n        //\n        // Statement on line 3: Undefined variable: undefinedFunc\n        // Backtrace:\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n        //         undefinedFunc(a);\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n        //           zzz(x, y, z);\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n        //           yyy(a, a, a);\n        //   Line 1 of function script\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n        //   ...\n        var lines = ex.message.split('\\n');\n        if (lines.length < 4) {\n            return null;\n        }\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i, lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i, lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i, stack = [], scripts = window && window.document && window.document.getElementsByTagName('script'), inlineScriptBlocks = [], parts;\n        for (var s in scripts) {\n            if (_has(scripts, s) && !scripts[s].src) {\n                inlineScriptBlocks.push(scripts[s]);\n            }\n        }\n        for (var line = 2; line < lines.length; line += 2) {\n            var item = null;\n            if ((parts = lineRE1.exec(lines[line]))) {\n                item = {\n                    url: parts[2],\n                    func: parts[3],\n                    args: [],\n                    line: +parts[1],\n                    column: null,\n                };\n            }\n            else if ((parts = lineRE2.exec(lines[line]))) {\n                item = {\n                    url: parts[3],\n                    func: parts[4],\n                    args: [],\n                    line: +parts[1],\n                    column: null,\n                };\n            }\n            else if ((parts = lineRE3.exec(lines[line]))) {\n                var url = getLocationHref().replace(/#.*$/, '');\n                item = {\n                    url: url,\n                    func: '',\n                    args: [],\n                    line: parts[1],\n                    column: null,\n                };\n            }\n            if (item) {\n                if (!item.func) {\n                    item.func = UNKNOWN_FUNCTION;\n                }\n                // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\n                item.context = [lines[line + 1]];\n                stack.push(item);\n            }\n        }\n        if (!stack.length) {\n            return null; // could not parse multiline exception message as Opera stack trace\n        }\n        return {\n            mode: 'multiline',\n            name: ex.name,\n            message: lines[0],\n            stack: stack,\n        };\n    }\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {TraceKit.StackTrace} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            url: url,\n            line: lineNo,\n        };\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n            if (!initial.func) {\n                initial.func = UNKNOWN_FUNCTION;\n            }\n            if (!initial.context) {\n                initial.context = null;\n            }\n            var reference = / '([^']+)' /.exec(message);\n            if (reference) {\n                initial.column = null;\n            }\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    }\n                    else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        stackInfo.stack[0].context = initial.context;\n                        return false;\n                    }\n                }\n            }\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        }\n        else {\n            stackInfo.incomplete = true;\n        }\n        return false;\n    }\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {TraceKit.StackTrace=} Stack trace information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i, stack = [], funcs = {}, recursion = false, parts, item;\n        for (var curr = _computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === _computeStackTrace || curr === TraceKit._report) {\n                continue;\n            }\n            item = {\n                url: null,\n                func: UNKNOWN_FUNCTION,\n                args: [],\n                line: null,\n                column: null,\n            };\n            if (curr.name) {\n                item.func = curr.name;\n            }\n            else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n            if (typeof item.func === 'undefined') {\n                try {\n                    item.func = parts.input.substring(0, parts.input.indexOf('{'));\n                }\n                catch (e) { }\n            }\n            if (funcs['' + curr]) {\n                recursion = true;\n            }\n            else {\n                funcs['' + curr] = true;\n            }\n            stack.push(item);\n        }\n        if (depth) {\n            stack.splice(0, depth);\n        }\n        var result = {\n            mode: 'callers',\n            name: ex.name,\n            message: ex.message,\n            stack: stack,\n        };\n        _augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     * @memberof TraceKit._computeStackTrace\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = depth == null ? 0 : +depth;\n        try {\n            // This must be tried first because Opera 10 *destroys*\n            // its stacktrace property if you try to access the stack\n            // property first!!\n            stack = _computeStackTraceFromStacktraceProp(ex);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        try {\n            stack = _computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        try {\n            stack = _computeStackTraceFromOperaMultiLineMessage(ex);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        try {\n            stack = _computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        return {\n            original: ex,\n            name: ex.name,\n            message: ex.message,\n            mode: 'failed',\n        };\n    }\n    computeStackTrace._augmentStackTraceWithInitialElement = _augmentStackTraceWithInitialElement;\n    computeStackTrace._computeStackTraceFromStackProp = _computeStackTraceFromStackProp;\n    return computeStackTrace;\n})();\nTraceKit._collectWindowErrors = true;\nTraceKit._linesOfContext = 11;\nvar _subscribe = TraceKit._report._subscribe;\nvar _installGlobalHandler = TraceKit._report._installGlobalHandler;\nvar _installGlobalUnhandledRejectionHandler = TraceKit._report._installGlobalUnhandledRejectionHandler;\nvar _computeStackTrace = TraceKit._computeStackTrace;\nexport { _subscribe, _installGlobalHandler, _installGlobalUnhandledRejectionHandler, _computeStackTrace };\n//# sourceMappingURL=tracekit.js.map","import { keysToEventMessage, normalizeToSize } from '@sentry/utils';\nimport { _computeStackTrace } from './tracekit';\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n        type: stacktrace.name,\n        value: stacktrace.message,\n    };\n    if (frames && frames.length) {\n        exception.stacktrace = { frames: frames };\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (exception.type === undefined && exception.value === '') {\n        exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n}\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception, syntheticException) {\n    var exceptionKeys = Object.keys(exception).sort();\n    var event = {\n        extra: {\n            __serialized__: normalizeToSize(exception),\n        },\n        message: \"Non-Error exception captured with keys: \" + keysToEventMessage(exceptionKeys),\n    };\n    if (syntheticException) {\n        var stacktrace = _computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n        exception: {\n            values: [exception],\n        },\n    };\n}\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n        return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.includes('captureMessage') || firstFrameFunction.includes('captureException')) {\n        localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.includes('sentryWrapped')) {\n        localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack\n        .map(function (frame) { return ({\n        colno: frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line,\n    }); })\n        .slice(0, STACKTRACE_LIMIT)\n        .reverse();\n}\n//# sourceMappingURL=parsers.js.map","import { SentryError } from './error';\n/** A simple queue that holds promises. */\nvar PromiseBuffer = /** @class */ (function () {\n    function PromiseBuffer(_limit) {\n        this._limit = _limit;\n        /** Internal set of queued Promises */\n        this._buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n        return this._limit === undefined || this.length() < this._limit;\n    };\n    /**\n     * Add a promise to the queue.\n     *\n     * @param task Can be any Promise<T>\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (task) {\n        var _this = this;\n        if (!this.isReady()) {\n            return Promise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n        }\n        if (this._buffer.indexOf(task) === -1) {\n            this._buffer.push(task);\n        }\n        task\n            .then(function () { return _this.remove(task); })\n            .catch(function () {\n            return _this.remove(task).catch(function () {\n                // We have to add this catch here otherwise we have an unhandledPromiseRejection\n                // because it's a new Promise chain.\n            });\n        });\n        return task;\n    };\n    /**\n     * Remove a promise to the queue.\n     *\n     * @param task Can be any Promise<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n        var removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n        return removedTask;\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n        return this._buffer.length;\n    };\n    /**\n     * This will drain the whole queue, returns true if queue is empty or drained.\n     * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n     *\n     * @param timeout Number in ms to wait until it resolves with false.\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var capturedSetTimeout = setTimeout(function () {\n                if (timeout && timeout > 0) {\n                    resolve(false);\n                }\n            }, timeout);\n            Promise.all(_this._buffer)\n                .then(function () {\n                clearTimeout(capturedSetTimeout);\n                resolve(true);\n            })\n                .catch(function () {\n                resolve(true);\n            });\n        });\n    };\n    return PromiseBuffer;\n}());\nexport { PromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map","import * as tslib_1 from \"tslib\";\nimport { captureException, getCurrentHub, withScope } from '@sentry/core';\nimport { addExceptionTypeValue, isString, normalize } from '@sentry/utils';\nvar debounceDuration = 1000;\nvar keypressTimeout;\nvar lastCapturedEvent;\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n        ignoreOnError -= 1;\n    });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n    if (options === void 0) { options = {}; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof fn !== 'function') {\n        return fn;\n    }\n    try {\n        // We don't wanna wrap it twice\n        if (fn.__sentry__) {\n            return fn;\n        }\n        // If this has already been wrapped in the past, return that wrapped function\n        if (fn.__sentry_wrapped__) {\n            return fn.__sentry_wrapped__;\n        }\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\n        return fn;\n    }\n    var sentryWrapped = function () {\n        // tslint:disable-next-line:strict-type-predicates\n        if (before && typeof before === 'function') {\n            before.apply(this, arguments);\n        }\n        var args = Array.prototype.slice.call(arguments);\n        // tslint:disable:no-unsafe-any\n        try {\n            // Attempt to invoke user-land function\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n            //       means Raven caught an error invoking your application code. This is\n            //       expected behavior and NOT indicative of a bug with Raven.js.\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\n            if (fn.handleEvent) {\n                return fn.handleEvent.apply(this, wrappedArguments);\n            }\n            return fn.apply(this, wrappedArguments);\n            // tslint:enable:no-unsafe-any\n        }\n        catch (ex) {\n            ignoreNextOnError();\n            withScope(function (scope) {\n                scope.addEventProcessor(function (event) {\n                    var processedEvent = tslib_1.__assign({}, event);\n                    if (options.mechanism) {\n                        addExceptionTypeValue(processedEvent, undefined, undefined, options.mechanism);\n                    }\n                    processedEvent.extra = tslib_1.__assign({}, processedEvent.extra, { arguments: normalize(args, 3) });\n                    return processedEvent;\n                });\n                captureException(ex);\n            });\n            throw ex;\n        }\n    };\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n        for (var property in fn) {\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\n                sentryWrapped[property] = fn[property];\n            }\n        }\n    }\n    catch (_oO) { } // tslint:disable-line:no-empty\n    fn.prototype = fn.prototype || {};\n    sentryWrapped.prototype = fn.prototype;\n    Object.defineProperty(fn, '__sentry_wrapped__', {\n        enumerable: false,\n        value: sentryWrapped,\n    });\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    Object.defineProperties(sentryWrapped, {\n        __sentry__: {\n            enumerable: false,\n            value: true,\n        },\n        __sentry_original__: {\n            enumerable: false,\n            value: fn,\n        },\n    });\n    // Restore original function name (not all browsers allow that)\n    try {\n        Object.defineProperty(sentryWrapped, 'name', {\n            get: function () {\n                return fn.name;\n            },\n        });\n    }\n    catch (_oO) {\n        /*no-empty*/\n    }\n    return sentryWrapped;\n}\nvar debounceTimer = 0;\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param eventName the event name (e.g. \"click\")\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nexport function breadcrumbEventHandler(eventName, debounce) {\n    if (debounce === void 0) { debounce = false; }\n    return function (event) {\n        // reset keypress timeout; e.g. triggering a 'click' after\n        // a 'keypress' will reset the keypress debounce so that a new\n        // set of keypresses can be recorded\n        keypressTimeout = undefined;\n        // It's possible this handler might trigger multiple times for the same\n        // event (e.g. event propagation through node ancestors). Ignore if we've\n        // already captured the event.\n        if (!event || lastCapturedEvent === event) {\n            return;\n        }\n        lastCapturedEvent = event;\n        var captureBreadcrumb = function () {\n            // try/catch both:\n            // - accessing event.target (see getsentry/raven-js#838, #768)\n            // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n            //   can throw an exception in some circumstances.\n            var target;\n            try {\n                target = event.target ? _htmlTreeAsString(event.target) : _htmlTreeAsString(event);\n            }\n            catch (e) {\n                target = '<unknown>';\n            }\n            if (target.length === 0) {\n                return;\n            }\n            getCurrentHub().addBreadcrumb({\n                category: \"ui.\" + eventName,\n                message: target,\n            }, {\n                event: event,\n                name: eventName,\n            });\n        };\n        if (debounceTimer) {\n            clearTimeout(debounceTimer);\n        }\n        if (debounce) {\n            debounceTimer = setTimeout(captureBreadcrumb);\n        }\n        else {\n            captureBreadcrumb();\n        }\n    };\n}\n/**\n * Wraps addEventListener to capture keypress UI events\n * @returns wrapped keypress events handler\n * @hidden\n */\nexport function keypressEventHandler() {\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function (event) {\n        var target;\n        try {\n            target = event.target;\n        }\n        catch (e) {\n            // just accessing event properties can throw an exception in some rare circumstances\n            // see: https://github.com/getsentry/raven-js/issues/838\n            return;\n        }\n        var tagName = target && target.tagName;\n        // only consider keypress events on actual input elements\n        // this will disregard keypresses targeting body (e.g. tabbing\n        // through elements, hotkeys, etc)\n        if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)) {\n            return;\n        }\n        // record first keypress in a series, but ignore subsequent\n        // keypresses until debounce clears\n        if (!keypressTimeout) {\n            breadcrumbEventHandler('input')(event);\n        }\n        clearTimeout(keypressTimeout);\n        keypressTimeout = setTimeout(function () {\n            keypressTimeout = undefined;\n        }, debounceDuration);\n    };\n}\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlTreeAsString(elem) {\n    var currentElem = elem;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    var height = 0;\n    var len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    var nextStr;\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n        nextStr = _htmlElementAsString(currentElem);\n        // bail out if\n        // - nextStr is the 'html' element\n        // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n        //   (ignore this limit if we are on the first iteration)\n        if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n            break;\n        }\n        out.push(nextStr);\n        len += nextStr.length;\n        currentElem = currentElem.parentNode;\n    }\n    return out.reverse().join(separator);\n}\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(elem) {\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push(\"#\" + elem.id);\n    }\n    className = elem.className;\n    if (className && isString(className)) {\n        classes = className.split(/\\s+/);\n        for (i = 0; i < classes.length; i++) {\n            out.push(\".\" + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n        }\n    }\n    return out.join('');\n}\n//# sourceMappingURL=helpers.js.map","import { API } from '@sentry/core';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = new PromiseBuffer(30);\n        this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n        throw new SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    return BaseTransport;\n}());\nexport { BaseTransport };\n//# sourceMappingURL=base.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { getGlobalObject, supportsReferrerPolicy } from '@sentry/utils';\nimport { BaseTransport } from './base';\nvar global = getGlobalObject();\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(FetchTransport, _super);\n    function FetchTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n        var defaultOptions = {\n            body: JSON.stringify(event),\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        return this._buffer.add(global.fetch(this.url, defaultOptions).then(function (response) { return ({\n            status: Status.fromHttpCode(response.status),\n        }); }));\n    };\n    return FetchTransport;\n}(BaseTransport));\nexport { FetchTransport };\n//# sourceMappingURL=fetch.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { BaseTransport } from './base';\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(XHRTransport, _super);\n    function XHRTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        return this._buffer.add(new Promise(function (resolve, reject) {\n            var request = new XMLHttpRequest();\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                if (request.status === 200) {\n                    resolve({\n                        status: Status.fromHttpCode(request.status),\n                    });\n                }\n                reject(request);\n            };\n            request.open('POST', _this.url);\n            request.send(JSON.stringify(event));\n        }));\n    };\n    return XHRTransport;\n}(BaseTransport));\nexport { XHRTransport };\n//# sourceMappingURL=xhr.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseBackend } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionTypeValue, isDOMError, isDOMException, isError, isErrorEvent, isPlainObject, supportsFetch, SyncPromise, } from '@sentry/utils';\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { _computeStackTrace } from './tracekit';\nimport { FetchTransport, XHRTransport } from './transports';\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nvar BrowserBackend = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserBackend, _super);\n    function BrowserBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype._setupTransport = function () {\n        if (!this._options.dsn) {\n            // We return the noop transport here in case there is no Dsn.\n            return _super.prototype._setupTransport.call(this);\n        }\n        var transportOptions = this._options.transportOptions\n            ? this._options.transportOptions\n            : { dsn: this._options.dsn };\n        if (this._options.transport) {\n            return new this._options.transport(transportOptions);\n        }\n        if (supportsFetch()) {\n            return new FetchTransport(transportOptions);\n        }\n        return new XHRTransport(transportOptions);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\n        var _this = this;\n        var event;\n        if (isErrorEvent(exception) && exception.error) {\n            // If it is an ErrorEvent with `error` property, extract it to get actual Error\n            var errorEvent = exception;\n            exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n            event = eventFromStacktrace(_computeStackTrace(exception));\n            return SyncPromise.resolve(this._buildEvent(event, hint));\n        }\n        if (isDOMError(exception) || isDOMException(exception)) {\n            // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n            // then we just extract the name and message, as they don't provide anything else\n            // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n            // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n            var domException = exception;\n            var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n            var message_1 = domException.message ? name_1 + \": \" + domException.message : name_1;\n            return this.eventFromMessage(message_1, Severity.Error, hint).then(function (messageEvent) {\n                addExceptionTypeValue(messageEvent, message_1);\n                return SyncPromise.resolve(_this._buildEvent(messageEvent, hint));\n            });\n        }\n        if (isError(exception)) {\n            // we have a real Error object, do nothing\n            event = eventFromStacktrace(_computeStackTrace(exception));\n            return SyncPromise.resolve(this._buildEvent(event, hint));\n        }\n        if (isPlainObject(exception) && hint && hint.syntheticException) {\n            // If it is plain Object, serialize it manually and extract options\n            // This will allow us to group events based on top-level keys\n            // which is much better than creating new group when any key/value change\n            var objectException = exception;\n            event = eventFromPlainObject(objectException, hint.syntheticException);\n            addExceptionTypeValue(event, 'Custom Object', undefined, {\n                handled: true,\n                synthetic: true,\n                type: 'generic',\n            });\n            event.level = Severity.Error;\n            return SyncPromise.resolve(this._buildEvent(event, hint));\n        }\n        // If none of previous checks were valid, then it means that\n        // it's not a DOMError/DOMException\n        // it's not a plain Object\n        // it's not a valid ErrorEvent (one with an error property)\n        // it's not an Error\n        // So bail out and capture it as a simple message:\n        var stringException = exception;\n        return this.eventFromMessage(stringException, undefined, hint).then(function (messageEvent) {\n            addExceptionTypeValue(messageEvent, \"\" + stringException, undefined, {\n                handled: true,\n                synthetic: true,\n                type: 'generic',\n            });\n            messageEvent.level = Severity.Error;\n            return SyncPromise.resolve(_this._buildEvent(messageEvent, hint));\n        });\n    };\n    /**\n     * This is an internal helper function that creates an event.\n     */\n    BrowserBackend.prototype._buildEvent = function (event, hint) {\n        return tslib_1.__assign({}, event, { event_id: hint && hint.event_id });\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n        if (level === void 0) { level = Severity.Info; }\n        var event = {\n            event_id: hint && hint.event_id,\n            level: level,\n            message: message,\n        };\n        if (this._options.attachStacktrace && hint && hint.syntheticException) {\n            var stacktrace = _computeStackTrace(hint.syntheticException);\n            var frames_1 = prepareFramesForEvent(stacktrace.stack);\n            event.stacktrace = {\n                frames: frames_1,\n            };\n        }\n        return SyncPromise.resolve(event);\n    };\n    return BrowserBackend;\n}(BaseBackend));\nexport { BrowserBackend };\n//# sourceMappingURL=backend.js.map","import * as tslib_1 from \"tslib\";\nimport { API, BaseClient } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, BrowserBackend, options) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n        event.platform = event.platform || 'javascript';\n        event.sdk = tslib_1.__assign({}, event.sdk, { name: SDK_NAME, packages: tslib_1.__spread(((event.sdk && event.sdk.packages) || []), [\n                {\n                    name: 'npm:@sentry/browser',\n                    version: SDK_VERSION,\n                },\n            ]), version: SDK_VERSION });\n        return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        // doesn't work without a document (React Native)\n        var document = getGlobalObject().document;\n        if (!document) {\n            return;\n        }\n        if (!this._isEnabled()) {\n            logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n            return;\n        }\n        var dsn = options.dsn || this.getDsn();\n        if (!options.eventId) {\n            logger.error('Missing `eventId` option in showReportDialog call');\n            return;\n        }\n        if (!dsn) {\n            logger.error('Missing `Dsn` option in showReportDialog call');\n            return;\n        }\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = new API(dsn).getReportDialogEndpoint(options);\n        if (options.onLoad) {\n            script.onload = options.onLoad;\n        }\n        (document.head || document.body).appendChild(script);\n    };\n    return BrowserClient;\n}(BaseClient));\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map","export var SDK_NAME = 'sentry.javascript.browser';\nexport var SDK_VERSION = '5.3.0';\n//# sourceMappingURL=version.js.map","import { fill, getGlobalObject } from '@sentry/utils';\nimport { wrap } from '../helpers';\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */ (function () {\n    function TryCatch() {\n        /** JSDoc */\n        this._ignoreOnError = 0;\n        /**\n         * @inheritDoc\n         */\n        this.name = TryCatch.id;\n    }\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var originalCallback = args[0];\n            args[0] = wrap(originalCallback, {\n                mechanism: {\n                    data: { function: getFunctionName(original) },\n                    handled: true,\n                    type: 'instrument',\n                },\n            });\n            return original.apply(this, args);\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapRAF = function (original) {\n        return function (callback) {\n            return original(wrap(callback, {\n                mechanism: {\n                    data: {\n                        function: 'requestAnimationFrame',\n                        handler: getFunctionName(original),\n                    },\n                    handled: true,\n                    type: 'instrument',\n                },\n            }));\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n        var global = getGlobalObject();\n        var proto = global[target] && global[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n                        mechanism: {\n                            data: {\n                                function: 'handleEvent',\n                                handler: getFunctionName(fn),\n                                target: target,\n                            },\n                            handled: true,\n                            type: 'instrument',\n                        },\n                    });\n                }\n                catch (err) {\n                    // can sometimes get 'Permission denied to access property \"handle Event'\n                }\n                return original.call(this, eventName, wrap(fn, {\n                    mechanism: {\n                        data: {\n                            function: 'addEventListener',\n                            handler: getFunctionName(fn),\n                            target: target,\n                        },\n                        handled: true,\n                        type: 'instrument',\n                    },\n                }), options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                var callback = fn;\n                try {\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, callback, options);\n            };\n        });\n    };\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n        this._ignoreOnError = this._ignoreOnError;\n        var global = getGlobalObject();\n        fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n        fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n        fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n        [\n            'EventTarget',\n            'Window',\n            'Node',\n            'ApplicationCache',\n            'AudioTrackList',\n            'ChannelMergerNode',\n            'CryptoOperation',\n            'EventSource',\n            'FileReader',\n            'HTMLUnknownElement',\n            'IDBDatabase',\n            'IDBRequest',\n            'IDBTransaction',\n            'KeyOperation',\n            'MediaController',\n            'MessagePort',\n            'ModalWindow',\n            'Notification',\n            'SVGElementInstance',\n            'Screen',\n            'TextTrack',\n            'TextTrackCue',\n            'TextTrackList',\n            'WebSocket',\n            'WebSocketWorker',\n            'Worker',\n            'XMLHttpRequest',\n            'XMLHttpRequestEventTarget',\n            'XMLHttpRequestUpload',\n        ].forEach(this._wrapEventTarget.bind(this));\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n}());\nexport { TryCatch };\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n    try {\n        return (fn && fn.name) || '<anonymous>';\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        return '<anonymous>';\n    }\n}\n//# sourceMappingURL=trycatch.js.map","import * as tslib_1 from \"tslib\";\nimport { API, getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { fill, getEventDescription, getGlobalObject, isString, logger, normalize, parseUrl, safeJoin, supportsHistory, supportsNativeFetch, } from '@sentry/utils';\nimport { breadcrumbEventHandler, keypressEventHandler, wrap } from '../helpers';\nvar global = getGlobalObject();\nvar lastHref;\n/** Default Breadcrumbs instrumentations */\nvar Breadcrumbs = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Breadcrumbs.id;\n        this._options = tslib_1.__assign({ console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\n    }\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentConsole = function () {\n        if (!('console' in global)) {\n            return;\n        }\n        ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n            if (!(level in global.console)) {\n                return;\n            }\n            fill(global.console, level, function (originalConsoleLevel) {\n                return function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var breadcrumbData = {\n                        category: 'console',\n                        data: {\n                            extra: {\n                                arguments: normalize(args, 3),\n                            },\n                            logger: 'console',\n                        },\n                        level: Severity.fromString(level),\n                        message: safeJoin(args, ' '),\n                    };\n                    if (level === 'assert') {\n                        if (args[0] === false) {\n                            breadcrumbData.message = \"Assertion failed: \" + (safeJoin(args.slice(1), ' ') || 'console.assert');\n                            breadcrumbData.data.extra.arguments = normalize(args.slice(1), 3);\n                        }\n                    }\n                    Breadcrumbs.addBreadcrumb(breadcrumbData, {\n                        input: args,\n                        level: level,\n                    });\n                    // this fails for some browsers. :(\n                    if (originalConsoleLevel) {\n                        Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n                    }\n                };\n            });\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentDOM = function () {\n        if (!('document' in global)) {\n            return;\n        }\n        // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n        // to the document. Do this before we instrument addEventListener.\n        global.document.addEventListener('click', breadcrumbEventHandler('click'), false);\n        global.document.addEventListener('keypress', keypressEventHandler(), false);\n        // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n        ['EventTarget', 'Node'].forEach(function (target) {\n            var proto = global[target] && global[target].prototype;\n            if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n                return;\n            }\n            fill(proto, 'addEventListener', function (original) {\n                return function (eventName, fn, options) {\n                    if (fn && fn.handleEvent) {\n                        if (eventName === 'click') {\n                            fill(fn, 'handleEvent', function (innerOriginal) {\n                                return function (event) {\n                                    breadcrumbEventHandler('click')(event);\n                                    return innerOriginal.call(this, event);\n                                };\n                            });\n                        }\n                        if (eventName === 'keypress') {\n                            fill(fn, 'handleEvent', keypressEventHandler());\n                        }\n                    }\n                    else {\n                        if (eventName === 'click') {\n                            breadcrumbEventHandler('click', true)(this);\n                        }\n                        if (eventName === 'keypress') {\n                            keypressEventHandler()(this);\n                        }\n                    }\n                    return original.call(this, eventName, fn, options);\n                };\n            });\n            fill(proto, 'removeEventListener', function (original) {\n                return function (eventName, fn, options) {\n                    var callback = fn;\n                    try {\n                        callback = callback && (callback.__sentry_wrapped__ || callback);\n                    }\n                    catch (e) {\n                        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                    }\n                    return original.call(this, eventName, callback, options);\n                };\n            });\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentFetch = function () {\n        if (!supportsNativeFetch()) {\n            return;\n        }\n        fill(global, 'fetch', function (originalFetch) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var fetchInput = args[0];\n                var method = 'GET';\n                var url;\n                if (typeof fetchInput === 'string') {\n                    url = fetchInput;\n                }\n                else if ('Request' in global && fetchInput instanceof Request) {\n                    url = fetchInput.url;\n                    if (fetchInput.method) {\n                        method = fetchInput.method;\n                    }\n                }\n                else {\n                    url = String(fetchInput);\n                }\n                if (args[1] && args[1].method) {\n                    method = args[1].method;\n                }\n                var client = getCurrentHub().getClient();\n                var dsn = client && client.getDsn();\n                if (dsn) {\n                    var filterUrl = new API(dsn).getStoreEndpoint();\n                    // if Sentry key appears in URL, don't capture it as a request\n                    // but rather as our own 'sentry' type breadcrumb\n                    if (filterUrl && url.includes(filterUrl)) {\n                        if (method === 'POST' && args[1] && args[1].body) {\n                            addSentryBreadcrumb(args[1].body);\n                        }\n                        return originalFetch.apply(global, args);\n                    }\n                }\n                var fetchData = {\n                    method: method,\n                    url: url,\n                };\n                return originalFetch\n                    .apply(global, args)\n                    .then(function (response) {\n                    fetchData.status_code = response.status;\n                    Breadcrumbs.addBreadcrumb({\n                        category: 'fetch',\n                        data: fetchData,\n                        type: 'http',\n                    }, {\n                        input: args,\n                        response: response,\n                    });\n                    return response;\n                })\n                    .catch(function (error) {\n                    Breadcrumbs.addBreadcrumb({\n                        category: 'fetch',\n                        data: fetchData,\n                        level: Severity.Error,\n                        type: 'http',\n                    }, {\n                        error: error,\n                        input: args,\n                    });\n                    throw error;\n                });\n            };\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentHistory = function () {\n        var _this = this;\n        if (!supportsHistory()) {\n            return;\n        }\n        var captureUrlChange = function (from, to) {\n            var parsedLoc = parseUrl(global.location.href);\n            var parsedTo = parseUrl(to);\n            var parsedFrom = parseUrl(from);\n            // Initial pushState doesn't provide `from` information\n            if (!parsedFrom.path) {\n                parsedFrom = parsedLoc;\n            }\n            // because onpopstate only tells you the \"new\" (to) value of location.href, and\n            // not the previous (from) value, we need to track the value of the current URL\n            // state ourselves\n            lastHref = to;\n            // Use only the path component of the URL if the URL matches the current\n            // document (almost all the time when using pushState)\n            if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                to = parsedTo.relative;\n            }\n            if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                from = parsedFrom.relative;\n            }\n            Breadcrumbs.addBreadcrumb({\n                category: 'navigation',\n                data: {\n                    from: from,\n                    to: to,\n                },\n            });\n        };\n        // record navigation (URL) changes\n        var oldOnPopState = global.onpopstate;\n        global.onpopstate = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var currentHref = global.location.href;\n            captureUrlChange(lastHref, currentHref);\n            if (oldOnPopState) {\n                return oldOnPopState.apply(_this, args);\n            }\n        };\n        /**\n         * @hidden\n         */\n        function historyReplacementFunction(originalHistoryFunction) {\n            // note history.pushState.length is 0; intentionally not declaring\n            // params to preserve 0 arity\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = args.length > 2 ? args[2] : undefined;\n                // url argument is optional\n                if (url) {\n                    // coerce to string (this is what pushState does)\n                    captureUrlChange(lastHref, String(url));\n                }\n                return originalHistoryFunction.apply(this, args);\n            };\n        }\n        fill(global.history, 'pushState', historyReplacementFunction);\n        fill(global.history, 'replaceState', historyReplacementFunction);\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentXHR = function () {\n        if (!('XMLHttpRequest' in global)) {\n            return;\n        }\n        /**\n         * @hidden\n         */\n        function wrapProp(prop, xhr) {\n            // TODO: Fix XHR types\n            if (prop in xhr && typeof xhr[prop] === 'function') {\n                fill(xhr, prop, function (original) {\n                    return wrap(original, {\n                        mechanism: {\n                            data: {\n                                function: prop,\n                                handler: (original && original.name) || '<anonymous>',\n                            },\n                            handled: true,\n                            type: 'instrument',\n                        },\n                    });\n                });\n            }\n        }\n        var xhrproto = XMLHttpRequest.prototype;\n        fill(xhrproto, 'open', function (originalOpen) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = args[1];\n                this.__sentry_xhr__ = {\n                    method: args[0],\n                    url: args[1],\n                };\n                var client = getCurrentHub().getClient();\n                var dsn = client && client.getDsn();\n                if (dsn) {\n                    var filterUrl = new API(dsn).getStoreEndpoint();\n                    // if Sentry key appears in URL, don't capture it as a request\n                    // but rather as our own 'sentry' type breadcrumb\n                    if (isString(url) && (filterUrl && url.includes(filterUrl))) {\n                        this.__sentry_own_request__ = true;\n                    }\n                }\n                return originalOpen.apply(this, args);\n            };\n        });\n        fill(xhrproto, 'send', function (originalSend) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var xhr = this; // tslint:disable-line:no-this-assignment\n                if (xhr.__sentry_own_request__) {\n                    addSentryBreadcrumb(args[0]);\n                }\n                /**\n                 * @hidden\n                 */\n                function onreadystatechangeHandler() {\n                    if (xhr.readyState === 4) {\n                        if (xhr.__sentry_own_request__) {\n                            return;\n                        }\n                        try {\n                            // touching statusCode in some platforms throws\n                            // an exception\n                            if (xhr.__sentry_xhr__) {\n                                xhr.__sentry_xhr__.status_code = xhr.status;\n                            }\n                        }\n                        catch (e) {\n                            /* do nothing */\n                        }\n                        Breadcrumbs.addBreadcrumb({\n                            category: 'xhr',\n                            data: xhr.__sentry_xhr__,\n                            type: 'http',\n                        }, {\n                            xhr: xhr,\n                        });\n                    }\n                }\n                ['onload', 'onerror', 'onprogress'].forEach(function (prop) {\n                    wrapProp(prop, xhr);\n                });\n                if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n                    fill(xhr, 'onreadystatechange', function (original) {\n                        return wrap(original, {\n                            mechanism: {\n                                data: {\n                                    function: 'onreadystatechange',\n                                    handler: (original && original.name) || '<anonymous>',\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        }, onreadystatechangeHandler);\n                    });\n                }\n                else {\n                    // if onreadystatechange wasn't actually set by the page on this xhr, we\n                    // are free to set our own and capture the breadcrumb\n                    xhr.onreadystatechange = onreadystatechangeHandler;\n                }\n                return originalSend.apply(this, args);\n            };\n        });\n    };\n    /**\n     * Helper that checks if integration is enabled on the client.\n     * @param breadcrumb Breadcrumb\n     * @param hint BreadcrumbHint\n     */\n    Breadcrumbs.addBreadcrumb = function (breadcrumb, hint) {\n        if (getCurrentHub().getIntegration(Breadcrumbs)) {\n            getCurrentHub().addBreadcrumb(breadcrumb, hint);\n        }\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n        if (this._options.console) {\n            this._instrumentConsole();\n        }\n        if (this._options.dom) {\n            this._instrumentDOM();\n        }\n        if (this._options.xhr) {\n            this._instrumentXHR();\n        }\n        if (this._options.fetch) {\n            this._instrumentFetch();\n        }\n        if (this._options.history) {\n            this._instrumentHistory();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n}());\nexport { Breadcrumbs };\n/** JSDoc */\nfunction addSentryBreadcrumb(serializedData) {\n    // There's always something that can go wrong with deserialization...\n    try {\n        var event_1 = JSON.parse(serializedData);\n        Breadcrumbs.addBreadcrumb({\n            category: 'sentry',\n            event_id: event_1.event_id,\n            level: event_1.level || Severity.fromString('error'),\n            message: getEventDescription(event_1),\n        }, {\n            event: event_1,\n        });\n    }\n    catch (_oO) {\n        logger.error('Error while adding sentry type breadcrumb');\n    }\n}\n//# sourceMappingURL=breadcrumbs.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/core';\nimport { addExceptionTypeValue, isString, logger, normalize, truncate } from '@sentry/utils';\nimport { shouldIgnoreOnError } from '../helpers';\nimport { eventFromStacktrace } from '../parsers';\nimport { _installGlobalHandler, _installGlobalUnhandledRejectionHandler, _subscribe, } from '../tracekit';\n/** Global handlers */\nvar GlobalHandlers = /** @class */ (function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = GlobalHandlers.id;\n        this._options = tslib_1.__assign({ onerror: true, onunhandledrejection: true }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n        Error.stackTraceLimit = 50;\n        _subscribe(function (stack, _, error) {\n            // TODO: use stack.context to get a valuable information from TraceKit, eg.\n            // [\n            //   0: \"  })\"\n            //   1: \"\"\n            //   2: \"  function foo () {\"\n            //   3: \"    Sentry.captureException('some error')\"\n            //   4: \"    Sentry.captureMessage('some message')\"\n            //   5: \"    throw 'foo'\"\n            //   6: \"  }\"\n            //   7: \"\"\n            //   8: \"  function bar () {\"\n            //   9: \"    foo();\"\n            //   10: \"  }\"\n            // ]\n            if (shouldIgnoreOnError()) {\n                return;\n            }\n            var self = getCurrentHub().getIntegration(GlobalHandlers);\n            if (self) {\n                getCurrentHub().captureEvent(self._eventFromGlobalHandler(stack), {\n                    data: { stack: stack },\n                    originalException: error,\n                });\n            }\n        });\n        if (this._options.onerror) {\n            logger.log('Global Handler attached: onerror');\n            _installGlobalHandler();\n        }\n        if (this._options.onunhandledrejection) {\n            logger.log('Global Handler attached: onunhandledrejection');\n            _installGlobalUnhandledRejectionHandler();\n        }\n    };\n    /**\n     * This function creates an Event from an TraceKitStackTrace.\n     *\n     * @param stacktrace TraceKitStackTrace to be converted to an Event.\n     */\n    GlobalHandlers.prototype._eventFromGlobalHandler = function (stacktrace) {\n        if (!isString(stacktrace.message) && stacktrace.mechanism !== 'onunhandledrejection') {\n            // There are cases where stacktrace.message is an Event object\n            // https://github.com/getsentry/sentry-javascript/issues/1949\n            // In this specific case we try to extract stacktrace.message.error.message\n            var message = stacktrace.message;\n            stacktrace.message =\n                message.error && isString(message.error.message) ? message.error.message : 'No error message';\n        }\n        var event = eventFromStacktrace(stacktrace);\n        var data = {\n            mode: stacktrace.mode,\n        };\n        if (stacktrace.message) {\n            data.message = stacktrace.message;\n        }\n        if (stacktrace.name) {\n            data.name = stacktrace.name;\n        }\n        var client = getCurrentHub().getClient();\n        var maxValueLength = (client && client.getOptions().maxValueLength) || 250;\n        var fallbackValue = stacktrace.original\n            ? truncate(JSON.stringify(normalize(stacktrace.original)), maxValueLength)\n            : '';\n        var fallbackType = stacktrace.mechanism === 'onunhandledrejection' ? 'UnhandledRejection' : 'Error';\n        // This makes sure we have type/value in every exception\n        addExceptionTypeValue(event, fallbackValue, fallbackType, {\n            data: data,\n            handled: false,\n            type: stacktrace.mechanism,\n        });\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n}());\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { BrowserClient } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\nexport var defaultIntegrations = [\n    new CoreIntegrations.InboundFilters(),\n    new CoreIntegrations.FunctionToString(),\n    new TryCatch(),\n    new Breadcrumbs(),\n    new GlobalHandlers(),\n    new LinkedErrors(),\n    new UserAgent(),\n];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options) {\n    if (options === void 0) { options = {}; }\n    if (options.defaultIntegrations === undefined) {\n        options.defaultIntegrations = defaultIntegrations;\n    }\n    initAndBind(BrowserClient, options);\n}\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!options.eventId) {\n        options.eventId = getCurrentHub().lastEventId();\n    }\n    var client = getCurrentHub().getClient();\n    if (client) {\n        client.showReportDialog(options);\n    }\n}\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId() {\n    return getCurrentHub().lastEventId();\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad() {\n    // Noop\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback) {\n    callback();\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.flush(timeout);\n    }\n    return Promise.reject(false);\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.close(timeout);\n    }\n    return Promise.reject(false);\n}\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n */\nexport function wrap(fn) {\n    // tslint:disable-next-line: no-unsafe-any\n    internalWrap(fn)();\n}\n//# sourceMappingURL=sdk.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { _computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = LinkedErrors.id;\n        this._key = options.key || DEFAULT_KEY;\n        this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event, hint) {\n            var self = getCurrentHub().getIntegration(LinkedErrors);\n            if (self) {\n                return self._handler(event, hint);\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n        if (!event.exception || !event.exception.values || !hint || !(hint.originalException instanceof Error)) {\n            return event;\n        }\n        var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n        event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n        if (stack === void 0) { stack = []; }\n        if (!(error[key] instanceof Error) || stack.length + 1 >= this._limit) {\n            return stack;\n        }\n        var stacktrace = _computeStackTrace(error[key]);\n        var exception = exceptionFromStacktrace(stacktrace);\n        return this._walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n}());\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\nvar UserAgent = /** @class */ (function () {\n    function UserAgent() {\n        /**\n         * @inheritDoc\n         */\n        this.name = UserAgent.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    UserAgent.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            if (getCurrentHub().getIntegration(UserAgent)) {\n                if (!global.navigator || !global.location) {\n                    return event;\n                }\n                // HTTP Interface: https://docs.sentry.io/clientdev/interfaces/http/?platform=javascript\n                var request = event.request || {};\n                request.url = request.url || global.location.href;\n                request.headers = request.headers || {};\n                request.headers['User-Agent'] = global.navigator.userAgent;\n                return tslib_1.__assign({}, event, { request: request });\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    UserAgent.id = 'UserAgent';\n    return UserAgent;\n}());\nexport { UserAgent };\n//# sourceMappingURL=useragent.js.map","import { Injectable, ErrorHandler } from '@angular/core';\nimport * as Sentry from '@sentry/browser';\n\nSentry.init({\n  dsn: 'https://8f9683c7b8ca4b789c6564810d2a936c@sentry.puzzle.ch/23',\n  environment: 'integration',\n  release: '1.25'\n});\n\n@Injectable()\nexport class SentryErrorHandler implements ErrorHandler {\n  handleError(error: any) {\n    const eventId = Sentry.captureException(error.originalError || error);\n    Sentry.showReportDialog({ eventId });\n  }\n}\n","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        logger.enable();\n    }\n    getCurrentHub().bindClient(new clientClass(options));\n}\n//# sourceMappingURL=sdk.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.module\";\nimport * as i2 from \"./app.component\";\nimport * as i3 from \"../../node_modules/@angular/router/router.ngfactory\";\nimport * as i4 from \"./app.component.ngfactory\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"@angular/common/http\";\nimport * as i9 from \"../sentry-error-handler.service\";\nimport * as i10 from \"./app-routing.module\";\nvar AppModuleNgFactory = i0.Éµcmf(i1.AppModule, [i2.AppComponent], function (_l) { return i0.Éµmod([i0.Éµmpd(512, i0.ComponentFactoryResolver, i0.ÉµCodegenComponentFactoryResolver, [[8, [i3.ÉµEmptyOutletComponentNgFactory, i4.AppComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.Éµmpd(5120, i0.LOCALE_ID, i0.Éµangular_packages_core_core_s, [[3, i0.LOCALE_ID]]), i0.Éµmpd(4608, i5.NgLocalization, i5.NgLocaleLocalization, [i0.LOCALE_ID, [2, i5.Éµangular_packages_common_common_a]]), i0.Éµmpd(5120, i0.APP_ID, i0.Éµangular_packages_core_core_h, []), i0.Éµmpd(5120, i0.IterableDiffers, i0.Éµangular_packages_core_core_q, []), i0.Éµmpd(5120, i0.KeyValueDiffers, i0.Éµangular_packages_core_core_r, []), i0.Éµmpd(4608, i6.DomSanitizer, i6.ÉµDomSanitizerImpl, [i5.DOCUMENT]), i0.Éµmpd(6144, i0.Sanitizer, null, [i6.DomSanitizer]), i0.Éµmpd(4608, i6.HAMMER_GESTURE_CONFIG, i6.HammerGestureConfig, []), i0.Éµmpd(5120, i6.EVENT_MANAGER_PLUGINS, function (p0_0, p0_1, p0_2, p1_0, p2_0, p2_1, p2_2, p2_3) { return [new i6.ÉµDomEventsPlugin(p0_0, p0_1, p0_2), new i6.ÉµKeyEventsPlugin(p1_0), new i6.ÉµHammerGesturesPlugin(p2_0, p2_1, p2_2, p2_3)]; }, [i5.DOCUMENT, i0.NgZone, i0.PLATFORM_ID, i5.DOCUMENT, i5.DOCUMENT, i6.HAMMER_GESTURE_CONFIG, i0.ÉµConsole, [2, i6.HAMMER_LOADER]]), i0.Éµmpd(4608, i6.EventManager, i6.EventManager, [i6.EVENT_MANAGER_PLUGINS, i0.NgZone]), i0.Éµmpd(135680, i6.ÉµDomSharedStylesHost, i6.ÉµDomSharedStylesHost, [i5.DOCUMENT]), i0.Éµmpd(4608, i6.ÉµDomRendererFactory2, i6.ÉµDomRendererFactory2, [i6.EventManager, i6.ÉµDomSharedStylesHost, i0.APP_ID]), i0.Éµmpd(6144, i0.RendererFactory2, null, [i6.ÉµDomRendererFactory2]), i0.Éµmpd(6144, i6.ÉµSharedStylesHost, null, [i6.ÉµDomSharedStylesHost]), i0.Éµmpd(4608, i0.Testability, i0.Testability, [i0.NgZone]), i0.Éµmpd(5120, i7.ActivatedRoute, i7.Éµangular_packages_router_router_g, [i7.Router]), i0.Éµmpd(4608, i7.NoPreloading, i7.NoPreloading, []), i0.Éµmpd(6144, i7.PreloadingStrategy, null, [i7.NoPreloading]), i0.Éµmpd(135680, i7.RouterPreloader, i7.RouterPreloader, [i7.Router, i0.NgModuleFactoryLoader, i0.Compiler, i0.Injector, i7.PreloadingStrategy]), i0.Éµmpd(4608, i7.PreloadAllModules, i7.PreloadAllModules, []), i0.Éµmpd(5120, i7.Éµangular_packages_router_router_n, i7.Éµangular_packages_router_router_c, [i7.Router, i5.ViewportScroller, i7.ROUTER_CONFIGURATION]), i0.Éµmpd(5120, i7.ROUTER_INITIALIZER, i7.Éµangular_packages_router_router_j, [i7.Éµangular_packages_router_router_h]), i0.Éµmpd(5120, i0.APP_BOOTSTRAP_LISTENER, function (p0_0) { return [p0_0]; }, [i7.ROUTER_INITIALIZER]), i0.Éµmpd(4608, i8.HttpXsrfTokenExtractor, i8.Éµangular_packages_common_http_http_g, [i5.DOCUMENT, i0.PLATFORM_ID, i8.Éµangular_packages_common_http_http_e]), i0.Éµmpd(4608, i8.Éµangular_packages_common_http_http_h, i8.Éµangular_packages_common_http_http_h, [i8.HttpXsrfTokenExtractor, i8.Éµangular_packages_common_http_http_f]), i0.Éµmpd(5120, i8.HTTP_INTERCEPTORS, function (p0_0) { return [p0_0]; }, [i8.Éµangular_packages_common_http_http_h]), i0.Éµmpd(4608, i8.Éµangular_packages_common_http_http_d, i8.Éµangular_packages_common_http_http_d, []), i0.Éµmpd(6144, i8.XhrFactory, null, [i8.Éµangular_packages_common_http_http_d]), i0.Éµmpd(4608, i8.HttpXhrBackend, i8.HttpXhrBackend, [i8.XhrFactory]), i0.Éµmpd(6144, i8.HttpBackend, null, [i8.HttpXhrBackend]), i0.Éµmpd(4608, i8.HttpHandler, i8.ÉµHttpInterceptingHandler, [i8.HttpBackend, i0.Injector]), i0.Éµmpd(4608, i8.HttpClient, i8.HttpClient, [i8.HttpHandler]), i0.Éµmpd(1073742336, i5.CommonModule, i5.CommonModule, []), i0.Éµmpd(512, i0.ErrorHandler, i9.SentryErrorHandler, []), i0.Éµmpd(1024, i0.NgProbeToken, function () { return [i7.Éµangular_packages_router_router_b()]; }, []), i0.Éµmpd(512, i7.Éµangular_packages_router_router_h, i7.Éµangular_packages_router_router_h, [i0.Injector]), i0.Éµmpd(1024, i0.APP_INITIALIZER, function (p0_0, p1_0) { return [i6.Éµangular_packages_platform_browser_platform_browser_j(p0_0), i7.Éµangular_packages_router_router_i(p1_0)]; }, [[2, i0.NgProbeToken], i7.Éµangular_packages_router_router_h]), i0.Éµmpd(512, i0.ApplicationInitStatus, i0.ApplicationInitStatus, [[2, i0.APP_INITIALIZER]]), i0.Éµmpd(131584, i0.ApplicationRef, i0.ApplicationRef, [i0.NgZone, i0.ÉµConsole, i0.Injector, i0.ErrorHandler, i0.ComponentFactoryResolver, i0.ApplicationInitStatus]), i0.Éµmpd(1073742336, i0.ApplicationModule, i0.ApplicationModule, [i0.ApplicationRef]), i0.Éµmpd(1073742336, i6.BrowserModule, i6.BrowserModule, [[3, i6.BrowserModule]]), i0.Éµmpd(1024, i7.Éµangular_packages_router_router_a, i7.Éµangular_packages_router_router_e, [[3, i7.Router]]), i0.Éµmpd(512, i7.UrlSerializer, i7.DefaultUrlSerializer, []), i0.Éµmpd(512, i7.ChildrenOutletContexts, i7.ChildrenOutletContexts, []), i0.Éµmpd(256, i7.ROUTER_CONFIGURATION, {}, []), i0.Éµmpd(1024, i5.LocationStrategy, i7.Éµangular_packages_router_router_d, [i5.PlatformLocation, [2, i5.APP_BASE_HREF], i7.ROUTER_CONFIGURATION]), i0.Éµmpd(512, i5.Location, i5.Location, [i5.LocationStrategy]), i0.Éµmpd(512, i0.Compiler, i0.Compiler, []), i0.Éµmpd(512, i0.NgModuleFactoryLoader, i0.SystemJsNgModuleLoader, [i0.Compiler, [2, i0.SystemJsNgModuleLoaderConfig]]), i0.Éµmpd(1024, i7.ROUTES, function () { return [[]]; }, []), i0.Éµmpd(1024, i7.Router, i7.Éµangular_packages_router_router_f, [i0.ApplicationRef, i7.UrlSerializer, i7.ChildrenOutletContexts, i5.Location, i0.Injector, i0.NgModuleFactoryLoader, i0.Compiler, i7.ROUTES, i7.ROUTER_CONFIGURATION, [2, i7.UrlHandlingStrategy], [2, i7.RouteReuseStrategy]]), i0.Éµmpd(1073742336, i7.RouterModule, i7.RouterModule, [[2, i7.Éµangular_packages_router_router_a], [2, i7.Router]]), i0.Éµmpd(1073742336, i10.AppRoutingModule, i10.AppRoutingModule, []), i0.Éµmpd(1073742336, i8.HttpClientXsrfModule, i8.HttpClientXsrfModule, []), i0.Éµmpd(1073742336, i8.HttpClientModule, i8.HttpClientModule, []), i0.Éµmpd(1073742336, i1.AppModule, i1.AppModule, []), i0.Éµmpd(256, i0.ÉµAPP_ROOT, true, []), i0.Éµmpd(256, i8.Éµangular_packages_common_http_http_e, \"XSRF-TOKEN\", []), i0.Éµmpd(256, i8.Éµangular_packages_common_http_http_f, \"X-XSRF-TOKEN\", [])]); });\nexport { AppModuleNgFactory as AppModuleNgFactory };\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}